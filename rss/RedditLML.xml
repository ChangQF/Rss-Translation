<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>学习机器学习</title>
    <link>https://www.reddit.com/r/learnmachinelearning/</link>
    <description>一个致力于学习机器学习的 subreddit</description>
    <lastBuildDate>Sat, 29 Jun 2024 06:18:57 GMT</lastBuildDate>
    <item>
      <title>深度强化学习中的 Spinning up 替代方案</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1dr4nwb/alternatives_to_spinning_up_in_deep_rl/</link>
      <description><![CDATA[嗨， 有没有最新的推荐资源相当于深度强化学习中的 Spinning up？我一直在努力安装所需的软件包，主要是因为它很久以前就发布了。 Open AI gym 现在已经搬到 gymnasium 了。我想知道有没有最新的推荐资源可以提高强化学习的水平。    提交人    /u/LostScientist5356   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1dr4nwb/alternatives_to_spinning_up_in_deep_rl/</guid>
      <pubDate>Sat, 29 Jun 2024 06:15:16 GMT</pubDate>
    </item>
    <item>
      <title>NLP 指南？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1dr4i9c/guide_to_nlp/</link>
      <description><![CDATA[我参加了 AI/ML 的夏季训练营，本周他们介绍了 NLP：预处理数据、RNN、LSTM、Attention、Transformers 等。但问题是，大部分内容都是理论性的，并且涉及数学。所以，我想学习如何使用这些架构来创建项目，如语义分析、图像字幕、生成文本等。有没有这方面的 YouTube 播放列表或课程？ Coursera- https://www.coursera.org/specializations/natural-language-processing#courses  我正在考虑旁听这门课程。我所知道的只有 PyTorch 和其他架构，例如 ANN、CNN 等    提交人    /u/PrathamJain965   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1dr4i9c/guide_to_nlp/</guid>
      <pubDate>Sat, 29 Jun 2024 06:04:50 GMT</pubDate>
    </item>
    <item>
      <title>推出第三代 Alpha 版抢先体验版</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1dr44mk/introducing_early_access_to_gen3_alpha/</link>
      <description><![CDATA[        提交人    /u/MarieDy96   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1dr44mk/introducing_early_access_to_gen3_alpha/</guid>
      <pubDate>Sat, 29 Jun 2024 05:40:11 GMT</pubDate>
    </item>
    <item>
      <title>亚马逊 ML 暑期学校 2024</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1dr3w7q/amazon_ml_summer_school_2024/</link>
      <description><![CDATA[上周日你的 amazon ML 测试怎么样？我有一道 dsa 题完全答对了，还有一道 8/10 个测试用例通过了，其余的 mcq 都很好。考虑到这次有 85k 名学生，我被选中的概率是多少。    提交人    /u/AdDense9044   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1dr3w7q/amazon_ml_summer_school_2024/</guid>
      <pubDate>Sat, 29 Jun 2024 05:25:00 GMT</pubDate>
    </item>
    <item>
      <title>我的划痕感知器多层效果不佳</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1dr27up/my_scratch_perceptron_multilayer_doesnt_work_well/</link>
      <description><![CDATA[我正在学习如何创建简单的多层模型，我将我手工制作的模型与 Torch 中已经制作的模型进行了比较。我的问题是权重的更新，在整个训练阶段，我的模型和 Torch 的模型在参数更新方面存在很大差异。 我一直在没有激活函数的模型中逐一检查导数，但没有发现任何问题。我不知道为什么这两个模型最终会得到非常不同的参数，即使它们一开始的参数完全相同。 如果有人知道，我将不胜感激。 https://github.com/PilotLeoYan/deep-learning-scratch/blob/main/3-multilayer-perceptron/mlp.ipynb    提交人    /u/Pilot_Sinber   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1dr27up/my_scratch_perceptron_multilayer_doesnt_work_well/</guid>
      <pubDate>Sat, 29 Jun 2024 03:43:39 GMT</pubDate>
    </item>
    <item>
      <title>集思广益如何开展个人项目</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1dr22yo/brainstorming_on_how_to_approach_a_personal/</link>
      <description><![CDATA[社区里的各位好！我正在做一个业余项目，想找一些想法来实现它。我有一张 2D 地图，地图上某个区域被分成了小方块（假设每个方块大约 1 平方英尺）。重要的是，这是一张以山丘和山谷为轮廓的地图。每个方块都有一个值，代表平均每日日照，我有 12 个月的数据。我的观察/输出也是这 12 个月内地图上每个方块的降雨总量。 你会如何解决这个问题？你会建议我训练什么样的机器学习模型来估计每个方块的降雨量？我陷入了困境，因为我有轮廓，所以我想使用 CNN 来捕捉“形状”数据，但我也有“云量”数据。数据，也以每个方块的时间序列形式给出。 任何建议都将不胜感激！    提交人    /u/SulHexFluShot   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1dr22yo/brainstorming_on_how_to_approach_a_personal/</guid>
      <pubDate>Sat, 29 Jun 2024 03:35:47 GMT</pubDate>
    </item>
    <item>
      <title>使用 SHAP 库而不指定“真实”模型</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1dqz6ff/using_the_shap_library_without_specifying_a_true/</link>
      <description><![CDATA[我和我的团队对 SHAP 还很陌生，我们正在尝试运行一些测试，在这些测试中我们可以将 SHAP 应用于我们创建的一些合成数据。我们手头有一个回归任务，其中有 5 个数字独立变量和 1 个数字因变量。 我知道通常我们会执行类似下面的操作来获取线性回归的 SHAP 值。 X_train = data[[&#39;x1&#39;, &#39;x2&#39;, &#39;x3&#39;, &#39;x4&#39;, &#39;x5&#39;]] y_train = data[[&#39;y&#39;]] model = sklearn.linear_model.LinearRegression() model.fit(X_train, y_train) explainer = shap.LinearExplainer(model, X_train)  在上面的例子中，我在运行 SHAP 之前在我的数据上预定义了一个线性回归模型。但是，我的经理要求我“不要运行真实模型（我们有了解这些模型的好处），而是运行 SHAP 并让它尝试预测 y，使用 x1 到 x5 作为数据”。 有没有办法计算 SHAP 值而不指定指定模型，比如线性回归，而是只输入独立变量和因变量？    提交人    /u/opposity   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1dqz6ff/using_the_shap_library_without_specifying_a_true/</guid>
      <pubDate>Sat, 29 Jun 2024 00:58:36 GMT</pubDate>
    </item>
    <item>
      <title>在深度学习的哪些部分中，了解其背后的数学知识会为您解决实际生活中的商业问题带来实质性优势？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1dqyisy/in_which_parts_of_deep_learning_knowing_math/</link>
      <description><![CDATA[本主题与学术无关，而是与解决现实生活中的商业问题的优势有关。 例如，我可以调用 OpenAI API 并使用 LLM 模型来解决业务问题，而无需了解 LLM 的基本理论。我也可以对一些视觉和语音模型做同样的事情，并成功解决业务问题。 我可以通过使用非深度学习算法（如随机森林）成功解决业务问题，尽管我了解一些理论知识，但不知道随机森林如何工作的所有数学细节。 详细的数学知识，深度学习的哪一部分可以为解决业务问题带来实质性优势，而如果没有数学就无法获得类似的结果？    提交人    /u/Alex_df_300   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1dqyisy/in_which_parts_of_deep_learning_knowing_math/</guid>
      <pubDate>Sat, 29 Jun 2024 00:24:24 GMT</pubDate>
    </item>
    <item>
      <title>是否有一个好的深度学习课程不需要数学先修课程，可以在课程中教授必要的数学知识？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1dqx4mr/is_there_a_good_deep_learning_course_without_math/</link>
      <description><![CDATA[我认为在深度学习的同时学习数学可能比先学数学再学深度学习更有趣。有没有不要求数学先修课程的优秀深度学习课程，在课程中教授必要的数学知识？    提交人    /u/Alex_df_300   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1dqx4mr/is_there_a_good_deep_learning_course_without_math/</guid>
      <pubDate>Fri, 28 Jun 2024 23:15:48 GMT</pubDate>
    </item>
    <item>
      <title>PyTorch 批处理</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1dqu66p/pytorch_batch_processing/</link>
      <description><![CDATA[我开始使用 PyTorch 进行批处理，我注意到有些计算对我来说似乎没有意义。具体来说，我只是在 XOR 数据集上训练一个简单的前馈模型，批处理大小为 4。如果我没记错的话，每个层的权重梯度应该在批处理维度上进行归一化，方法是累积每个输入的梯度并将总数除以批处理大小。然而，这与 PyTorch 不太一致。通过将转置的输入与中间梯度进行矩阵乘法并对其进行归一化来手动计算线性层的权重梯度后，我得到的结果是： [[0.029297274, 0.75734013, 0.7865825, 0.21391404, 0.25166035]]  与 PyTorch 计算的结果相比： [[-0.0161, 0.8665, 0.7855, 0.1474, 0.2340]]  尽管 PyTorch 的梯度没有意义，但该模型仍然比使用“数学上正确”权重梯度的模型学习得更好。有人可以解释一下如何计算权重梯度以产生这些不同的结果吗？为了便于理解，下面是我的 PyTorch 模型：  import torch import torch.nn as nn import torch.optim as optim import numpy as np # 定义模型 class FeedForwardModel(nn.Module): def __init__(self): super(FeedForwardModel, self).__init__() self.layer1 = nn.Linear(2, 5) self.relu = nn.ReLU() self.layer2 = nn.Linear(5, 1) print(self.layer1.weight) print(self.layer1.bias) print(self.layer2.weight) print(self.layer2.bias) def forward(self, x): x = self.layer1(x) # x = self.relu(x) print(&quot;Input Values: &quot;) print(x) x = self.layer2(x) return x # 损失函数 loss_function = nn.MSELoss() # 生成虚拟数据 np.random.seed(0) torch.manual_seed(0) input = torch.tensor([[[0, 0]], [[0, 1]], [[1, 0]], [[1, 1]]], dtype=torch.float32) target = torch.tensor([[[0]], [[1]], [[1]], [[0]]], dtype=torch.float32) # 用于打乱数据的函数 def shuffle_data(inputs, target): indices = torch.randperm(len(inputs)) return input[indices], target[indices] # 用于生成批次的函数 def generate_batches(inputs, target, batch_size): for i in range(0, len(inputs), batch_size): Yield input[i:i+batch_size], target[i:i+batch_size] # 初始化模型，优化器 model = FeedForwardModel() optimizer = optim.SGD(model.parameters(), lr=0.01) # 训练循环 num_epochs = 10 batch_size = 4 for epoch in range(num_epochs): # 打乱数据 shuffled_inputs, shuffled_targets = shuffle_data(inputs, target) total_loss = 0.0 for batch_inputs, batch_targets in generate_batches(inputs, target, batch_size): # 前向传递 output = model(batch_inputs) # 计算损失 loss = loss_function(outputs, batch_targets) total_loss += loss.item() # 计算相对于输出的损失梯度 loss_grads = torch.autograd.grad(loss, output, create_graph=True)[0] # 后向传递和优化 optimizer.zero_grad() loss.backward() optimizer.step() # 每 50 个 epoch 打印一次输出 if epoch % 1 == 0: with torch.no_grad(): for i in input: print(model(i)) print(f&quot;Epoch: {epoch} | Loss: {total_loss}&quot;) # 打印梯度 print(&quot;Gradients after epoch&quot;, epoch) for name, param in model.named_pa​​rameters(): if param.grad is not None: print(f&quot;{name}.grad: {param.grad}&quot;) print(&quot;Loss Grads&quot;) print(loss_grads) print(&quot;Training done&quot;)  任何帮助都值得赞赏。    submitted by    /u/powerchip15   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1dqu66p/pytorch_batch_processing/</guid>
      <pubDate>Fri, 28 Jun 2024 21:01:35 GMT</pubDate>
    </item>
    <item>
      <title>学习在财务工作中应用人工智能/机器学习</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1dqsemz/learning_to_apply_aiml_in_finance_work/</link>
      <description><![CDATA[嗨。我从事金融工作，一直在探索在日常工作中使用 ML 和 AI 的方法。我已经完成了一些在线课程，但还没有准备好开始真正编码。但在日常工作中，我想探索如何应用 ML/AI 的想法。 有人可以告诉我一个网站吗？我可以在那里付费（按小时、按问题或按任务等）以获得建议/咨询，帮助我思考问题？我想探索的问题示例：  我想为 LLM（ChatGPT？）提供一组文档（我自己的 pdf 格式的研究报告），它可以“研究”这些文档，然后回答有关内容的问题。这些文档保存在我电脑的一个大目录中。 我做了很多分析 IPO 的工作。我使用的估值方法是查看可比较的已上市公司，汇总其估值指标（市盈率、EV/EBITDA 等），然后将这些指标应用于相关的 IPO 候选公司，以得出合理的初始估值。某种 k 均值方法是否有助于识别上市公司的组/子组以用作可比公司（“comps”）？我可以输入有关选定的潜在可比公司范围的各种数据（股本回报率、利润率、收入增长、收益增长、杠杆率等），然后使用 k 均值模型识别子组  感谢您的帮助。    提交人    /u/BaileyBros1234   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1dqsemz/learning_to_apply_aiml_in_finance_work/</guid>
      <pubDate>Fri, 28 Jun 2024 19:44:57 GMT</pubDate>
    </item>
    <item>
      <title>专注于模型快速开发和部署的课程/播放列表？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1dqpvd9/coursesplaylist_that_focuses_on_fast_development/</link>
      <description><![CDATA[嘿，我想问一下是否有任何课程或资源可以用来学习如何快速开发/训练或部署模型？ 我了解 Python 和 ML 基础知识。我查看了一些 lightning.ai 视频（10/10 推荐）但不久前我放弃了学习，我不想在从头开始的课程上浪费时间。我只想使用可用数据来训练和部署模型，想知道是否有任何课程专注于此。     提交人    /u/Successful-Ant7824   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1dqpvd9/coursesplaylist_that_focuses_on_fast_development/</guid>
      <pubDate>Fri, 28 Jun 2024 17:56:01 GMT</pubDate>
    </item>
    <item>
      <title>Andrej Karpathy 的“神经网络：从零到英雄”课程是否有数学要求，或者他在视频中解释了必要的数学？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1dqkj1j/does_andrej_karpathys_neural_networks_zero_to/</link>
      <description><![CDATA[我需要擅长数学才能理解 Andrej Karpathy 的“神经网络：从零到英雄”课程吗？或者也许所有必要的数学都在他的课程中解释过了？我只知道基本的代数，如果这足以开始他的课程，我会很感兴趣。    提交人    /u/Alex_df_300   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1dqkj1j/does_andrej_karpathys_neural_networks_zero_to/</guid>
      <pubDate>Fri, 28 Jun 2024 14:09:40 GMT</pubDate>
    </item>
    <item>
      <title>[p] Python/Web FashionVision 学习 PyTorch</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1dqfo5n/p_pythonweb_fashionvision_for_learning_pytorch/</link>
      <description><![CDATA[        提交人    /u/phantagom   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1dqfo5n/p_pythonweb_fashionvision_for_learning_pytorch/</guid>
      <pubDate>Fri, 28 Jun 2024 09:35:29 GMT</pubDate>
    </item>
    <item>
      <title>机器学习相关的简历审查帖</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</link>
      <description><![CDATA[请礼貌地将任何关于简历审查的帖子重定向到这里 对于那些正在寻找简历审查的人，请先在 imgur.com 上发布它们，然后将链接作为评论发布，或者甚至先在 /r/resumes 或 r/EngineeringResumes 上发布，然后在此处交叉发布。     提交人    /u/techrat_reddit   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</guid>
      <pubDate>Wed, 05 Jun 2024 12:11:43 GMT</pubDate>
    </item>
    </channel>
</rss>