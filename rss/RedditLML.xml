<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>学习机器学习</title>
    <link>https://www.reddit.com/r/learnmachinelearning/</link>
    <description>欢迎来到 r/learnmachinelearning - 一个由对机器学习充满热情的学习者和教育者组成的社区！在这里您可以提出问题、分享资源，并共同了解机器学习概念 - 从基本原理到高级技术。无论您是编写第一个神经网络还是深入研究 transformer，您都可以在这里找到支持您的同伴。对于机器学习研究，/r/machinelearning 对于简历审查，/r/engineeringresumes 对于机器学习工程师，/r/mlengineering</description>
    <lastBuildDate>Wed, 05 Feb 2025 01:15:14 GMT</lastBuildDate>
    <item>
      <title>我可以找到一个从事机器学习职位的远程实习生吗？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1ihy26i/can_i_get_a_remote_intern_in_ml_role/</link>
      <description><![CDATA[我去年毕业并正在寻找工作，但在我的国家，机器学习工程师的职位还不是很完善，所以我在寻找远程实习生。有没有什么机会，你能帮我得到这个机会吗，或者给我一些建议，如何得到这个机会？     提交人    /u/Acceptable_Joke_9961   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1ihy26i/can_i_get_a_remote_intern_in_ml_role/</guid>
      <pubDate>Wed, 05 Feb 2025 01:10:58 GMT</pubDate>
    </item>
    <item>
      <title>免费获取 LLM 课程资源列表</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1ihxx5j/resource_list_to_build_with_llms_for_free/</link>
      <description><![CDATA[我使用其中的许多内容来构建 https://filtrjobs.com——一个查看你的简历并将你与工作匹配的网络应用程序。借助这些资源，我在解析了 1 亿多个令牌后，可以 100% 免费运行它 LLM  来自 galadriel.com 的免费 LLM（每天免费 400 万个令牌。这是迄今为止最好的选择，我自己也在用） 免费 cerebras 和 groq - 极快的 LLM 响应，但 cerebras 需要您在候补名单上注册 Gemini flash：超级慷慨的免费套餐（每天 1500+ 个请求）  监控  posthog 和 sentry 用于监控（均具有慷慨的免费套餐）  Cron 作业  通过 ubicloud.com / github 操作 Modal.com 每月提供 30 美元的 GPU 使用积分  AI 训练  Lightning.ai 免费为您提供 GPU 工作空间  部署  通过 heroku 免费托管（github 学生福利 提供 24 个月免费托管） Digital Ocean 200 美元免费积分（但需要 cc） render 有一些不错的部署选项  数据库  cockroachDB (10 GB免费） supabase for DB（500MB 免费） 通过 aiven.io  杂项  https://github.com/mangiucugna/json_repair 自动修复 LLM 中损坏的 JSON 输出     提交人    /u/_lambda1   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1ihxx5j/resource_list_to_build_with_llms_for_free/</guid>
      <pubDate>Wed, 05 Feb 2025 01:04:12 GMT</pubDate>
    </item>
    <item>
      <title>全职自学2年内能够做到后训练水平的AI研究现实吗？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1ihxidi/is_it_realistic_to_be_able_to_do_ai_research_at/</link>
      <description><![CDATA[我有一些预先存在的、非常基本的 Python ML 知识。我对线性代数和 ML 数学基础知识相当熟悉。我还不熟悉 AI/ML 生态系统以及如何与之集成。 我希望从现在开始，通过对 RL 可用的任何预训练模型进行后期训练，能够充分理解和试验我自己的 LLM。例如，从一个较小的预训练 LLM 构建我自己的非常基本的推理模型。 假设我可以全日制自学，那么现实的时间表是什么？    提交人    /u/Proof-Bed-6928   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1ihxidi/is_it_realistic_to_be_able_to_do_ai_research_at/</guid>
      <pubDate>Wed, 05 Feb 2025 00:45:07 GMT</pubDate>
    </item>
    <item>
      <title>努力利用知识蒸馏来优化我的模型</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1ihxgek/struggling_with_optimizing_my_model_using/</link>
      <description><![CDATA[大家好， 我有一个用于学习端到端通信系统的 NN 模型。它是一个自动编码器，其中编码器充当发射器；它采用 8 位并将其编码为 IQ 值，而解码器充当接收器；它采用生成的 IQ 值并将其解码为位。我还有一个通道模型，可以模拟噪声、频率/相位偏移等。 该模型经过训练，具有非常好的误码率 (BER)，但在进行推理时具有高延迟，因此我需要对其进行优化。我正在尝试遵循 pytorch 的知识提炼教程，但到目前为止，我无法让我的学生有效地学习。 我认为我的问题在于我的软损失函数不正确。在原始训练循环中，我使用 BinaryCrossEntropy 损失来计算位概率与输入位。从文档中可以看出，K.D 似乎包含一个额外的损失，即采用学生和家长概率的 KL 散度损失。但是，运行代码时我的损失并没有改善。 我的困惑是我的“软损失”应该是什么类型的损失函数以及它应该获得什么输入类型（logit 或概率）。我尝试了不同的排列（将对数概率输入 KL Div，使用 CrossEntropy 损失而不是 KL，即文档中显示的损失函数），但它们都没有以任何方式提高我的学生模型的性能。 抱歉，如果这是错误的 subreddit。任何建议都值得赞赏 这大致是我正在使用的代码。它不是完整的代码；我只展示了父自动编码器和 K.D 循环，但这足以表达我的观点。  import torch import torch.nn as nn import torch.optim as optim # 定义编码器类 Encoder(nn.Module): def __init__(self): super(Encoder, self).__init__() self.fc1 = nn.Linear(8, 16) # 扩展特征空间 self.relu = nn.ReLU() self.fc2 = nn.Linear(16, 10) # 输出 2 个值（IQ 表示） def forward(self, x): x = self.fc1(x) x = self.relu(x) x = self.fc2(x) # 输出原始 IQ 符号 return x # 定义解码器类 Decoder(nn.Module): def __init__(self): super(Decoder, self).__init__() self.fc1 = nn.Linear(100, 50) # 从 IQ 扩展回来 self.fc2 = nn.Linear(50, 30) self.fc3 = nn.Linear(30, 16) self.fc4 = nn.Linear(16, 8) # 输出 8 位恢复序列 self.relu = nn.ReLU() self.sigmoid = nn.Sigmoid() # 确保输出在 (0,1) 范围内 def forward(self, x): x = self.fc1(x) x = self.relu(x) x = self.fc2(x) x = self.relu(x) x = self.fc3(x) x = self.relu(x) x = self.fc4(x) x = self.sigmoid() # 解释为概率 return x # 定义自动编码器（编码器 -&gt; 通道 -&gt;解码器） class Autoencoder(nn.Module): def __init__(self, noise_std=0.1): super(Autoencoder, self).__init__() self.encoder = Encoder() self.decoder = Decoder() def forward(self, x): x = self.encoder(x) # 将 8 位编码为 2 个 IQ 符号 x = self.decoder(x) # 解码回 8 位序列 return x ParentModel = Autoencoder(noise_std=0.1) # 加载预先训练的权重 load_weights(ParentModel , path, optimizer) def knowledge_distillation(teacher, student, T, epochs, batches, alpha): ce_loss = nn.BCELoss() kl_loss = nn.KLDivLoss(reduction=&quot;batchmean&quot;) optimizer = optim.Adam(student.parameters(), lr = 1e-4) teacher.eval() # 教师设置为评估模式 student.train() # 学生设置为训练模式 for epoch in range(epochs): input_bits = generate_binary_tensor(8, batches) # 生成一个 [8, batches] 二进制张量 optimizer.zero_grad() with torch.no_grad(): teacher_predictions = teacher(input_bits) # 教师前向传递 student_predictions = student(input_bits) # 学生前向传递 # 计算硬损失 hard_loss = ce_loss(student_predictions, input_bits) # 计算软损失（不确定这部分） soft_loss = kl_loss(student_predictions, teacher_predictions) * (T**2) total_loss = alpha*soft_loss + (1-alpha)*hard_loss total_loss.backward() optimizer.step() # 存储 BER（此处未显示）     由    /u/Code668  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1ihxgek/struggling_with_optimizing_my_model_using/</guid>
      <pubDate>Wed, 05 Feb 2025 00:42:27 GMT</pubDate>
    </item>
    <item>
      <title>为研究项目模块化训练流程</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1ihxcb0/modularizing_training_pipeline_for_a_research/</link>
      <description><![CDATA[我目前正在开展一个研究项目，我需要在同一数据集上整合多个神经网络架构。我的目标是收集和记录各种指标，同时在某些检查点将它们保存到指定位置。我必须在所有架构中使用类似的超参数以确保公平评估。 虽然我熟悉 Python 编程，但我的代码经常变得混乱，因为每个架构都需要不同的修改，导致我创建多个类。我需要一个更模块化、更有条理的代码库结构。 我该如何实现这一点？此外，我在哪里可以找到训练管道代码的示例？哪些特征定义了研究项目的有前途的训练管道？    提交人    /u/Dhruv1563   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1ihxcb0/modularizing_training_pipeline_for_a_research/</guid>
      <pubDate>Wed, 05 Feb 2025 00:37:10 GMT</pubDate>
    </item>
    <item>
      <title>100% 免费，无需信用卡，使用 LLM 构建的资源列表</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1ihvm0c/resource_list_to_build_with_llms_for_100_free_no/</link>
      <description><![CDATA[我一直在与 LLM 合作开展项目，并一直在寻找免费工具 LLM  来自 galadriel.com 的免费 LLM（每天免费 400 万个代币。这是迄今为止最好的选择，我自己也在用） 免费 cerebras 和 groq - 极快的 LLM 响应，但 cerebras 需要您注册候补名单 Gemini flash：超级慷慨的免费套餐（每天 1500+ 个请求）  监控  posthog 和 sentry 用于监控（均提供慷慨的免费套餐）  Cron 作业  通过免费 cron 作业ubicloud.com / github 操作 Modal.com 每月提供 30 美元的 GPU 使用积分  AI 训练  Lightning.ai 免费为您提供 GPU 工作空间  部署  通过 heroku 免费托管（github 学生福利 提供 24 个月免费托管） Digital Ocean 200 美元免费积分（但需要 cc） render 有一些不错的部署选项  数据库  cockroachDB (10 GB 免费） supabase for DB（500MB 免费） 通过 aiven.io 免费 5GB postgres   杂项  https://github.com/mangiucugna/json_repair 自动修复来自 LLM 的损坏的 JSON 输出  我使用其中的许多来构建 https://filtrjobs.com — 一个查看您的简历并将您与工作进行匹配的 Web 应用程序。借助这些资源，我能够在解析 1 亿多个令牌后 100% 免费运行它   由    /u/_lambda1  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1ihvm0c/resource_list_to_build_with_llms_for_100_free_no/</guid>
      <pubDate>Tue, 04 Feb 2025 23:17:09 GMT</pubDate>
    </item>
    <item>
      <title>作为一名本科生感到困惑</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1ihv7r0/confused_as_an_undergrad_student/</link>
      <description><![CDATA[我对如何获得 ML/AI 工程师的工作以及希望以后进行研究感到困惑。我目前正在完成计算机科学专业的第二年学业。 我不知道如何规划我未来的职业/教育。 我是否应该准备后端软件工程师实习/工作并在工作的同时获得硕士/博士学位？ 或者我应该尝试实习/找什么职位才能在未来成为 ML/AI 工程师？ 除了 Reddit 之外，还有其他资源可以咨询吗？我是否应该尝试在我所在的大学里找一位在 AL/ML 方面经验丰富的教授？    提交人    /u/Adityarp3   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1ihv7r0/confused_as_an_undergrad_student/</guid>
      <pubDate>Tue, 04 Feb 2025 22:59:49 GMT</pubDate>
    </item>
    <item>
      <title>我该辞职吗？机器学习工程师被迫转行做全栈</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1ihv2k0/should_i_quit_ml_engineer_forced_into_fullstack/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1ihv2k0/should_i_quit_ml_engineer_forced_into_fullstack/</guid>
      <pubDate>Tue, 04 Feb 2025 22:53:18 GMT</pubDate>
    </item>
    <item>
      <title>有人可以推荐一些社区吗？我可以在哪里与团队合作，以产品经理的身份从事人工智能/机器学习项目？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1ihu80s/can_anyone_recommend_communities_where_i_can/</link>
      <description><![CDATA[大家好！ 我想知道您是否可以推荐或访问社区，在那里我可以与其他人合作开展真正的 AI 项目。 我的想法是，我们可以作为一个敏捷团队进行合作，创建一个由 AI 驱动的工具或产品。 我目前是一名产品经理，非常想进入 AI 和机器学习领域。我对 AI 和机器学习有基本的了解，但我绝对没有掌握该应用程序。我参与过一些内部 AI 项目，但由于保密协议，没有深入技术方面。 我觉得解决这个问题的唯一方法是设定学习目标并亲自实施。 非常感谢任何建议    提交人    /u/Responsible_Fun_8777   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1ihu80s/can_anyone_recommend_communities_where_i_can/</guid>
      <pubDate>Tue, 04 Feb 2025 22:17:17 GMT</pubDate>
    </item>
    <item>
      <title>刚刚进入 Fine Tuning 法学硕士行列，拥有超过 10 年的客户服务经验。</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1ihs8g5/new_to_fine_tuning_an_llm_with_over_10_years_of/</link>
      <description><![CDATA[我经营一家小公司，处理许多电子产品维修的线索。我有来自 Google Voice 和其他 SMS 应用程序的 10 多年的客户对话。我能够将所有这些对话导出到一个 txt 文件中，但我知道在将其输入到任何内容之前，我必须对其进行清理。 这是我第一次处理调整 LLM 以复制我的客户服务。它通常是这样的： - 客户发短信给我们询问维修并描述问题。 - 根据设备向他们发送我们的价格。 - 安排预约 我不希望我的 LLM 尝试解决问题，而主要是预约。有了所有的旧对话和旧定价，这会是个问题吗？我该如何告诉 LLM 确保他们知道我截至今天的更新价格，并在回复时将其用作我的模板的基础。  关于如何完成所有这些，您有什么建议吗？使用 Deepseek 或 LLAMA 进行微调？还是通过 OpenAi 上的 API 进行微调？    提交人    /u/Hefty-Activity76   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1ihs8g5/new_to_fine_tuning_an_llm_with_over_10_years_of/</guid>
      <pubDate>Tue, 04 Feb 2025 20:55:35 GMT</pubDate>
    </item>
    <item>
      <title>从 CPU 到 NPU：英特尔最新芯片上 AI 速度提升约 15 倍的秘诀</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1ihjf0g/from_cpu_to_npu_the_secret_to_15x_faster_ai_on/</link>
      <description><![CDATA[  由    /u/samontab  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1ihjf0g/from_cpu_to_npu_the_secret_to_15x_faster_ai_on/</guid>
      <pubDate>Tue, 04 Feb 2025 14:53:16 GMT</pubDate>
    </item>
    <item>
      <title>机器学习/人工智能领域的基础论文</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1ihf8mj/foundational_papers_in_ml_ai/</link>
      <description><![CDATA[当我的高中学生问我，他们应该阅读哪些关键论文来开始学习 ML/AI 时，我总是回答说，他们应该首先关注编码和 Kaggle，以获得对这些主题的实际理解。当然，论文记录了重大成就，但在众多出版物中，真正重要的论文所占份额很小，你需要知道选择阅读什么。下面的列表是我专门为我的学生创建的，是一次尝试。欢迎对个别条目提出反馈，但为了使列表易于管理，我恳请您在提出任何有关附加论文的建议时，也建议我应该删除哪一篇。 https://www.jobs-in-data.com/blog/foundational-papers-in-machine-learning-ai    提交人    /u/pg860   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1ihf8mj/foundational_papers_in_ml_ai/</guid>
      <pubDate>Tue, 04 Feb 2025 11:05:57 GMT</pubDate>
    </item>
    <item>
      <title>学习数据科学和机器学习的基础知识后，下一步最好的做法是什么？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1ihe77o/whats_the_best_next_step_after_learning_the/</link>
      <description><![CDATA[我最近完成了一门课程，该课程涵盖了数据科学和机器学习的基础知识。现在，我对监督学习和无监督学习的概念、基本模型评估以及一些使用 Pandas、Scikit-learn 和 Matplotlib 等 Python 库的实践经验有了很好的掌握。 我想知道下一步应该怎么做。我应该专注于加深对 ML 算法的了解，深入研究深度学习，从事实际项目，还是探索部署和 MLOps？此外，对于处于这个阶段的人，是否有任何推荐的资源或项目想法？ 我很想听听那些走过这条路的人的意见，什么对你最有效？    提交人    /u/Educational_Sail_602   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1ihe77o/whats_the_best_next_step_after_learning_the/</guid>
      <pubDate>Tue, 04 Feb 2025 09:49:20 GMT</pubDate>
    </item>
    <item>
      <title>学习资源 + 副项目想法</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1ih5ygl/learning_resources_side_project_ideas/</link>
      <description><![CDATA[昨晚我发了一篇帖子，讲述了我获得 AI 实习机会的历程，收到了很多关于副项目和学习资源的回复，所以我在这里创建了另一个帖子，为所有好奇的人整合这些信息！ 学习过程 步骤 1）学习数学的基本原理 使用 YouTube！！！只需输入“机器学习数学”，您就会获得涵盖几乎所有主题的大量播放列表。我个人会专注于线性代数和微积分 - 特别是矩阵/向量运算、点积、特征向量/特征值、导数和梯度。 可能需要尝试几次才能找到与您的学习风格相符的人，但是 3Blue1Brown 是我的首选推荐。 我也读了《机器学习的原因》这本书并发现这非常有见地。 先用笔和纸实现数学，然后用 Python。 第 2 步）一旦你掌握了数学基础知识，我会选择使用 Sci-kit Learn、Keras 和 TensorFlow 进行机器学习。这本书改变了我。它更深入地介绍了数学，涵盖了从线性回归到 Transformers 架构的每个主题。它还向您介绍了 Kaggle 和一些初学者级别的附带项目。 步骤 3）读完那本书后，我会开始做一些附带项目，同时查看其他类似的书籍，特别是《大型语言模型实践》和《生成式人工智能实践》。 步骤 4）如果你已经阅读了这三本书，并且完全理解了所有内容，那么我会开始查找论文。我会让 ChatGPT 给你提供与你的兴趣最相关的论文。 初学者附带项目想法 1）仅使用 Numpy 从头开始​​构建神经网络。它可以非常基础 - 有一个带有 2 个节点的输入层、1 个带有 2 个节点的隐藏层和带有一个节点的输出层。了解前馈过程并尝试使用不同的激活函数和损失函数。了解这些激活函数和损失函数如何影响反向传播（提示：激活函数和损失函数的导数都是不同的）。真正擅长这一点，并了解回归模型和分类模型之间的区别，以及哪种激活/损失函数适用于哪种类型的模型。 如果您真的感觉很疯狂，并且更专注于 SWE 类型的角色，请尝试使用 Python 以外的语言来执行此操作，并尝试为其构建前端，以便有一个界面，用户可以在其中输入数据并选择他们的模型架构。 2) 为 MNIST 构建 CNN 图像分类器 - 熟悉 CNN、图像处理和基本计算机视觉概念的复杂性。 3) 在开源 LLM 之上构建。转到 Hugging Face 的模型页面并开始尝试一些模型。 4) KAGGLE 竞赛 - 我不会进一步解释，参加 Kaggle 竞赛。 其他资源 我提到了 YouTube、几本书和 Hugging Face。我还推荐： DataLemur.com - Python 实践、SQL 实践、ML 问题 - 他的书《Ace the Data Science Interview》也非常好。 X.com - 关注该领域的知名人士。我加入了一个人工智能和数学小组，该小组不断在那里发布资源 deep-ml.com 如果您发现其中任何内容有用 - 请随时关注 X 并保持联系 @ x.com/hark0nnen_     提交人    /u/Any-Reserve-4403   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1ih5ygl/learning_resources_side_project_ideas/</guid>
      <pubDate>Tue, 04 Feb 2025 01:24:40 GMT</pubDate>
    </item>
    <item>
      <title>机器学习相关的简历审查帖</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</link>
      <description><![CDATA[请礼貌地将任何关于简历审查的帖子重定向到这里 对于那些正在寻找简历审查的人，请先在 imgur.com 上发布它们，然后将链接作为评论发布，或者甚至先在 /r/resumes 或 r/EngineeringResumes 上发布，然后在此处交叉发布。     提交人    /u/techrat_reddit   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</guid>
      <pubDate>Wed, 05 Jun 2024 12:11:43 GMT</pubDate>
    </item>
    </channel>
</rss>