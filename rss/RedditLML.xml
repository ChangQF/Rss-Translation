<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>学习机器学习</title>
    <link>https://www.reddit.com/r/learnmachinelearning/</link>
    <description>一个致力于学习机器学习的 subreddit</description>
    <lastBuildDate>Sat, 14 Sep 2024 21:14:02 GMT</lastBuildDate>
    <item>
      <title>需要一些资源来学习从初学者到高级水平使用机器学习为网站制作推荐系统</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fgv8wo/need_some_sources_to_learn_to_make_recommender/</link>
      <description><![CDATA[我想学习为网站（如社交媒体、电子商务等）制作大规模推荐系统..我搜索了单独的课程，这些课程解释了如何从单个课程制作这种大规模推荐系统，但我找不到..所以这是否意味着我必须从头开始学习许多机器学习技术..如果是这样，请推荐我一些教程、课程、书籍，指导我从初学者到高级水平获得这些知识..    提交人    /u/madhawavish   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fgv8wo/need_some_sources_to_learn_to_make_recommender/</guid>
      <pubDate>Sat, 14 Sep 2024 20:31:05 GMT</pubDate>
    </item>
    <item>
      <title>这里有人使用 mojo 来创建复杂的 ML 算法吗？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fgsccx/anyone_here_used_mojo_for_creating_complex_ml/</link>
      <description><![CDATA[如果是，您能介绍一下您的经历吗？它有潜力吗？    提交人    /u/flashpreneur   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fgsccx/anyone_here_used_mojo_for_creating_complex_ml/</guid>
      <pubDate>Sat, 14 Sep 2024 18:13:30 GMT</pubDate>
    </item>
    <item>
      <title>处理训练数据中没有缺失值的特征在测试数据中的缺失值</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fgs1mc/handling_missing_values_of_a_feature_in_test_data/</link>
      <description><![CDATA[当我在 Kaggle 上为泰坦尼克号 - 灾难机器学习竞赛准备测试数据时，我发现测试数据中的“票价”列（数字特征）有一个缺失值。训练数据中的“票价”列没有缺失值。现在我知道如何处理训练数据中已经有缺失值的测试数据中的缺失值，但这对我来说是第一次，我找不到如何解决的答案。    提交人    /u/tatv_047   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fgs1mc/handling_missing_values_of_a_feature_in_test_data/</guid>
      <pubDate>Sat, 14 Sep 2024 18:00:17 GMT</pubDate>
    </item>
    <item>
      <title>您建议如何开始学习 yolov8？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fgotn1/how_do_you_recommend_start_learning_yolov8/</link>
      <description><![CDATA[  由    /u/zxcvbnm9174  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fgotn1/how_do_you_recommend_start_learning_yolov8/</guid>
      <pubDate>Sat, 14 Sep 2024 15:35:55 GMT</pubDate>
    </item>
    <item>
      <title>Diffumon - 简单的开源传播模型</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fgnq0w/diffumon_simple_open_source_diffusion_model/</link>
      <description><![CDATA[        提交人    /u/RogueStargun   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fgnq0w/diffumon_simple_open_source_diffusion_model/</guid>
      <pubDate>Sat, 14 Sep 2024 14:46:49 GMT</pubDate>
    </item>
    <item>
      <title>推荐使用哪个平台来克隆 Python 存储库、从存储库运行脚本并保存输出文件？不是 Colab</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fgmyrb/recommended_platform_to_clone_a_python_repository/</link>
      <description><![CDATA[大家好。我从未真正接触过云计算，但想更好地学习它。 我有一个计算量很大的 Python 脚本，它执行在 Python 存储库中编写的代码。我需要运行一次并保存输出。它应该运行几个小时而不需要我打开任何东西。对于某些应用程序，我可能需要大量 CPU，对于某些应用程序，则需要大量 GPU。 您能否推荐一个好的入门平台，而学习曲线又不太陡峭？请不要使用 Colab，我已经知道了，并且想学习超越这一点的云计算。    提交人    /u/Invariant_apple   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fgmyrb/recommended_platform_to_clone_a_python_repository/</guid>
      <pubDate>Sat, 14 Sep 2024 14:11:47 GMT</pubDate>
    </item>
    <item>
      <title>光荣的数据工程师</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fgjy54/glorified_data_engineer/</link>
      <description><![CDATA[我即将有一年初级机器学习工程师的工作经验，我之前在同一家公司的工作是数据工程师。 在那一年里，我觉得我在实际的机器学习方面学到的很少，我基本上继续做数据工程，但对于机器学习管道，我的大部分时间都在支持企业的数据科学家满足他们的数据需求。 我担心的是，有人给我提供其他机器学习工作，但我 100% 不符合资格或对技术面试感到不自在。 我应该在其他地方寻找另一个初级机器学习工作，还是现在尝试在工作中尽可能多地学习？任何建议或意见都将不胜感激。 我参加了一些关于 genAI 的速成课程，完成了 Andrew ng MLops Coursera，并开始阅读到目前为止我能找到的每一本机器学习书籍。   由    /u/Ok-Carry-339  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fgjy54/glorified_data_engineer/</guid>
      <pubDate>Sat, 14 Sep 2024 11:25:37 GMT</pubDate>
    </item>
    <item>
      <title>在小型噪声数据集上比较 ML 方法</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fgjmur/comparing_ml_methods_on_a_small_noisy_dataset/</link>
      <description><![CDATA[我试图显示在嘈杂且较小的数据集上训练的模型的预测错误 - 由于数据集中的噪声，我当前显示的错误反映的数据多于模型。 为了比较方法 X 和 Y，我已经完成了交叉验证，其中每种方法都在完全相同的折叠上进行训练。对于每次折叠，X 的表现都优于 Y，但它们的绝对表现差异很大，例如（夸张）： 折叠，X RMSE，Y RMSE 1、1.2、1.4 2、1.6、1.65 3、1.1、1.2 ...  计算这些的平均值，X 仍然表现优异，但显示标准差表明错误非常大，并且它们之间实际上差别不大，例如：  avg RMSE，std RMSE X 1.30，0.22 Y 1.42，0.18  问题：我有理由说 X 比 Y 好吗？有没有一种常见的方法来证明这一点？ （我正在考虑计算每倍的平均相对差异并将其显示为一个指标，但我没有在其他地方看到这样做。）    提交人    /u/unreasonablyeffectiv   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fgjmur/comparing_ml_methods_on_a_small_noisy_dataset/</guid>
      <pubDate>Sat, 14 Sep 2024 11:04:56 GMT</pubDate>
    </item>
    <item>
      <title>如何在我的办公室应用机器学习？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fgi9pn/how_to_apply_machine_learning_in_my_office/</link>
      <description><![CDATA[大家好。我目前在公司担任全栈开发人员。我们主要做在线保险产品并将其出售给客户。目前，对于非技术团队，我们有一个报告管理系统，用户只需插入日期，他们就会从我们的服务器（根据产品而不同）获取原始数据（产品定价/客户数量等）。所以我有点不知道如何在办公室利用我的机器学习技能。有什么建议我还能做什么？因为他们已经有一个报告管理系统来根据非技术团队的要求提取数据。我了解基本的机器学习（回归/分类），目前也在学习深度学习。我曾考虑在公司使用一些基本的机器学习知识，但我陷入困境，因为报告管理系统实际上消除了我需要为非技术人员提取和分析数据的需要。希望在这里得到一些建议。提前谢谢您。    提交人    /u/nickk21321   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fgi9pn/how_to_apply_machine_learning_in_my_office/</guid>
      <pubDate>Sat, 14 Sep 2024 09:24:48 GMT</pubDate>
    </item>
    <item>
      <title>深度学习框架详解</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fghvab/deep_learning_frameworks_explained/</link>
      <description><![CDATA[大家好！今天我们将深入研究深度学习框架。无论您经验丰富还是经验不足，本指南都会解释重要细节。准备好您最喜欢的饮料，让我们开始吧！ 深度学习框架到底是什么？ 想象一下，您正在构建一个超级先进的计算机大脑。深度学习框架就像一个工具箱，里面有您需要的一切。这个工具箱包含专门的软件，可帮助您构建、训练和控制深度神经网络。这些东西为图像识别、自然语言处理甚至那些奇怪的深度伪造等酷炫的东西提供动力。 秘诀：是什么让这些框架发挥作用？  张量运算：将张量视为多维数据容器。框架让您可以像专业人士一样处理这些事情。 自动微分：就像让数学天才为您完成所有复杂的微积分一样。您的网络学习速度更快！ 工作流管理：从数据准备到部署，这些框架让您井井有条。 高级 API：无需重新发明轮子。这些 API 可让您专注于大局，而不会迷失在代码杂草中。  三巨头：TensorFlow、PyTorch 和 Keras 让我们来分析一下最流行的框架：  TensorFlow（Google 的创意）    - 优点：可在任何设备上运行，非常适合大型生产项目  - 缺点：对新手来说可能有点不知所措  - 最适合：当您需要像老板一样扩展和部署时   PyTorch（Facebook 的 AI 游乐场）    - 优点：超级灵活，非常适合研究和实验  - 缺点：可能不像 TensorFlow 那样适合生产  -最适合：当您需要尝试疯狂的新想法时   Keras（人民冠军）    - 优点：用户友好，非常适合初学者  - 缺点：可能没有其他所有花哨的功能  - 最适合：让您涉足其中而不会陷入复杂性  快速比较：   框架 性能 易用性 可扩展性 社区    TensorFlow 高  中等  高  巨大    PyTorch  高  高  高 增长    Keras  中等  非常高 中等  巨大    那么，您应该选择哪一个？ 这实际上取决于您的项目以及你知道。你是在创建下一个大型 AI 企业，还是在车库里玩弄创意？在评论中告诉我。我们可以讨论哪种框架可能适合你！ 社区问题：  你首选的深度学习框架是什么？为什么？ 使用这些框架有什么可怕的故事或重大胜利吗？ 对于专家：你认为深度学习框架的下一个大事件是什么？     提交人    /u/Equal_Carrot_796   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fghvab/deep_learning_frameworks_explained/</guid>
      <pubDate>Sat, 14 Sep 2024 08:54:28 GMT</pubDate>
    </item>
    <item>
      <title>计算机科学专业的学生要成为 AI/ML 工程师应该关注什么？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fggi7g/what_should_a_cs_major_focus_on_to_become_an_aiml/</link>
      <description><![CDATA[我目前是一名计算机科学专业一年级学生，我想知道哪些类型的课程对成为一名 AI/ML 工程师有帮助。我知道统计学方面比较弱，所以我打算辅修统计学，我还应该关注什么？    提交人    /u/hjsskfjdks   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fggi7g/what_should_a_cs_major_focus_on_to_become_an_aiml/</guid>
      <pubDate>Sat, 14 Sep 2024 07:10:03 GMT</pubDate>
    </item>
    <item>
      <title>我用 C++ 从头构建了一个神经网络（带有大量动画）</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fg48vc/i_built_a_neural_network_from_scratch_in_c_with_a/</link>
      <description><![CDATA[大家好！ 我最近制作了一个视频，深入探讨神经网络的基础知识，旨在面向任何热衷于学习神经网络并理解底层数学原理的人士。在此视频中，我完全用 C++ 从头开始​​构建了一个神经网络，而不依赖于任何外部框架。 我涵盖了以下主题：  前向传播 误差函数 反向传播 遍历 C++ 代码  为了使事情更清楚，我加入了 用 Manim 制作的动画，以帮助直观地了解底层的一切工作原理。 您可以在此处查看视频： 我从头开始制作了一个神经网络 (youtube.com) 由于这是我的第一批视频之一，我很乐意听到您的反馈。我还计划制作更多关于神经网络和相关主题的视频，因此任何建议或想法都将非常感谢！ 感谢您的关注，希望您能喜欢！    提交人    /u/FelipesCoding   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fg48vc/i_built_a_neural_network_from_scratch_in_c_with_a/</guid>
      <pubDate>Fri, 13 Sep 2024 20:11:19 GMT</pubDate>
    </item>
    <item>
      <title>这是一个创建人工绘画的项目。第一步看起来不错。我使用 tensorflow 和 Python。</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fg0cmc/this_is_a_project_to_create_artificial_painting/</link>
      <description><![CDATA[        提交人    /u/angels_mom   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fg0cmc/this_is_a_project_to_create_artificial_painting/</guid>
      <pubDate>Fri, 13 Sep 2024 17:26:34 GMT</pubDate>
    </item>
    <item>
      <title>掌握计算机视觉的 10 个 GitHub 存储库</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fg00my/10_github_repositories_to_master_computer_vision/</link>
      <description><![CDATA[10 个 GitHub 存储库包括最新的学习资源、研究论文、指南、流行工具、教程、项目和数据集。 https://www.kdnuggets.com/10-github-repositories-to-master-computer-vision     提交人    /u/kingabzpro   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fg00my/10_github_repositories_to_master_computer_vision/</guid>
      <pubDate>Fri, 13 Sep 2024 17:12:15 GMT</pubDate>
    </item>
    <item>
      <title>机器学习相关的简历审查帖</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</link>
      <description><![CDATA[请礼貌地将任何关于简历审查的帖子重定向到这里 对于那些正在寻找简历审查的人，请先在 imgur.com 上发布它们，然后将链接作为评论发布，或者甚至先在 /r/resumes 或 r/EngineeringResumes 上发布，然后在此处交叉发布。     提交人    /u/techrat_reddit   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</guid>
      <pubDate>Wed, 05 Jun 2024 12:11:43 GMT</pubDate>
    </item>
    </channel>
</rss>