<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>学习机器学习</title>
    <link>https://www.reddit.com/r/learnmachinelearning/</link>
    <description>一个致力于学习机器学习的 subreddit</description>
    <lastBuildDate>Sat, 09 Nov 2024 12:28:59 GMT</lastBuildDate>
    <item>
      <title>Perplexity AI PRO - 1 年计划优惠 - 75% 折扣 [限时优惠]</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1gn8trv/perplexity_ai_pro_1_year_plan_offer_75_off/</link>
      <description><![CDATA[      如标题：我们提供一年计划的 Perplexity AI PRO 优惠券代码。  订购：https://cheapgpts.store/Perplexity 接受付款：  PayPal。 （100% 买家保护） Revolut。     由   提交  /u/Verza-   [link] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1gn8trv/perplexity_ai_pro_1_year_plan_offer_75_off/</guid>
      <pubDate>Sat, 09 Nov 2024 12:15:54 GMT</pubDate>
    </item>
    <item>
      <title>机器学习的伟大路线图🎖️</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1gn8b22/great_roadmap_with_machine_learning/</link>
      <description><![CDATA[机器学习新手？从这里开始，使用适合初学者的路线图！😌 机器学习看似令人生畏，但有了正确的路线图，任何人都可以开始。这篇文章列出了一个清晰的、适合初学者的计划，以帮助新手驾驭机器学习的世界。从理解基本算法到使用 Python 和 PyTorch，您将找到开始构建和部署自己的模型的资源。告别困惑，迈向掌握机器学习的可行步骤。 准备好开始您的机器学习之旅了吗？前往 r/learnmachinelearning 并从本指南开始！👇🏽    提交人    /u/Hedierhfz   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1gn8b22/great_roadmap_with_machine_learning/</guid>
      <pubDate>Sat, 09 Nov 2024 11:41:54 GMT</pubDate>
    </item>
    <item>
      <title>尽管 numpy 使用相同的数据 + 参数收敛，但 Pytorch 却出现了分歧</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1gn80t9/pytorch_diverges_although_numpy_converges_with/</link>
      <description><![CDATA[      我首先在 numpy 中实现了线性回归的基本梯度下降，然后使用 pytorch。但是，在相同的数据、参数初始化和学习率的情况下，一个会收敛（numpy，左），而另一个会发散（pytorch，右） https://preview.redd.it/xz80dqlxzuzd1.png?width=1274&amp;format=png&amp;auto=webp&amp;s=808142943d9ecf323a4a7933fef95b2bb7532de7 以下是每个代码： Numpy： 导入数学 导入 matplotlib.pyplot 作为 plt 导入 numpy 作为 np n = 50 np.random.seed(1) x = np.linspace(0, 2*math.pi, n) y = np.sin(x) y += np.random.normal(scale=0.1, size=len(y)) alpha = 0.15 m = 0 b = 0loss = [] fig, axs = plt.subplots(2) while True: axs[0].plot(x, m*x+b) axs[0].scatter(x, y) axs[1].plot(losses) plt.draw() plt.waitforbuttonpress() for ax in axs: ax.clear() b -= alpha * 1/n * sum(b + m*x[i] - y[i] for i in range(n)) m -= alpha * 1/n * sum((b + m*x[i] - y[i]) * x[i] for i in range(n)) mse = sum((y - (m*x+b))**2)/n loss.append(mse)  Pytorch: import math import matplotlib.pyplot as plt import numpy as np import torch.nn n = 50 np.random.seed(1) x = np.linspace(0, 2*math.pi, n) y = np.sin(x) y += np.random.normal(scale=0.1, size=len(y)) x = torch.from_numpy(x) y = torch.from_numpy(y) x = x.reshape(-1, 1) y = y.reshape(-1, 1) alpha = 0.15 m = torch.zeros(1, require_grad=True) b = torch.zeros(1, require_grad=True) loss_fn = torch.nn.MSELoss() optimizer = torch.optim.SGD([m, b], lr=alpha) loss = [] fig, axs = plt.subplots(2) while True: y_est = m * x + b loss = loss_fn(y_est, y) loss.append(loss.item()) loss.backward() optimizer.step() optimizer.zero_grad() axs[0].plot(x, y_est.detach().numpy()) axs[0].scatter(x, y) axs[1].plot(losses) plt.draw() plt.waitforbuttonpress() for ax in axs: ax.clear()  即使我将 LR 降至 0.1，它们的行为仍然相同，因此我认为这不是一个小的舍入误差或类似错误。    提交人    /u/autorayn   [link] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1gn80t9/pytorch_diverges_although_numpy_converges_with/</guid>
      <pubDate>Sat, 09 Nov 2024 11:22:28 GMT</pubDate>
    </item>
    <item>
      <title>余弦相似度激活函数</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1gn5vnw/cosine_similarity_activation_function/</link>
      <description><![CDATA[我读到，余弦相似度激活函数在实践中通常不用作激活函数，我想知道这是为什么。具体来说，如果用例是训练相似度？ 我目前正在使用线性激活函数训练句子转换器神经网络，但根据基于 doc2vec 向量的标记余弦相似度分数进行评估，因此匹配似乎不太好，因为输出值可能远远超出余弦相似度函数的范围。    提交人    /u/RDA92   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1gn5vnw/cosine_similarity_activation_function/</guid>
      <pubDate>Sat, 09 Nov 2024 08:45:01 GMT</pubDate>
    </item>
    <item>
      <title>如果梯度下降真的是大脑“学习”的方式，我们该如何定义学习率？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1gn5fxb/if_gradient_descent_is_really_how_the_brain/</link>
      <description><![CDATA[我偶然看到了 Geoffrey Hinton 最近的一段视频，他在视频中说（我转述一下）在人类学习语言的背景下，“(...) 最近的模型向我们展示了随机梯度下降实际上是大脑学习的方式 (...)”我记得他将“权重”与大脑中的“突触”进行了比较。如果我们将这个类比继续下去——如果权重是大脑中的突触，那么学习率会是多少？    提交人    /u/NoResource56   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1gn5fxb/if_gradient_descent_is_really_how_the_brain/</guid>
      <pubDate>Sat, 09 Nov 2024 08:12:43 GMT</pubDate>
    </item>
    <item>
      <title>想要学习机器学习</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1gn57cz/want_to_learn_machine_learning/</link>
      <description><![CDATA[我刚刚开始学习 ML，有人能帮我一步一步开始学习 ML 吗？我很困惑该做什么以及如何开始学习？比如从基础开始学习，如何将学习应用于项目等。（因为我是初学者，但我想探索和学习）。我在谷歌上搜索，但我却更加困惑。我是一个努力工作的人，只需要指导来开始学习，因为我没有这个领域的指导。    提交人    /u/Icy-capt_sid   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1gn57cz/want_to_learn_machine_learning/</guid>
      <pubDate>Sat, 09 Nov 2024 07:55:39 GMT</pubDate>
    </item>
    <item>
      <title>下一步是什么？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1gn4nfh/what_next/</link>
      <description><![CDATA[我刚刚读完 andrej karpathy 的《从零到英雄的神经网络》。由于信息量太大，我正试图再次复习它。 我还应该选修什么课程？我期待快速人工智能？它好吗？还是我应该去学习 cs231n？或者我应该怎么做？    提交人    /u/Lanky-Garlic9411   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1gn4nfh/what_next/</guid>
      <pubDate>Sat, 09 Nov 2024 07:14:46 GMT</pubDate>
    </item>
    <item>
      <title>Fast.ai 有何帮助？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1gn2skp/how_is_fastai_helpful/</link>
      <description><![CDATA[我曾多次尝试从中学习，也尝试过多个版本。我只是不明白为什么有些人在大型科技 AI 实验室工作时，会将他们的成功归功于 Fast.ai。我知道我的学习风格可能与目标受众不同，但我想知道从中受益的人。 首先，笔记本/书与视频关系不大。其次，有太多抽象，这有点加倍了你的工作量，因为你需要查找某些东西在 PyTorch 中是如何实际实现的。第三，一切都是笔记本，而我不喜欢笔记本。    提交人   /u/internet human016   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1gn2skp/how_is_fastai_helpful/</guid>
      <pubDate>Sat, 09 Nov 2024 05:11:20 GMT</pubDate>
    </item>
    <item>
      <title>Spotify 音乐推荐项目</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1gn2mzu/spotify_music_recommendation_project/</link>
      <description><![CDATA[嗨，我正在开发一个使用 Spotify API 推荐歌曲的 Flask 项目。我很好奇实现混合方法（基于内容的过滤 + 协同过滤）的可行性，以便为拥有大量用户数据（热门曲目、播放列表、关注的艺术家等）的 Spotify 老用户生成推荐。 此外，我正在考虑使用基于内容的过滤，根据新用户在 HTML 表单中输入的艺术家为他们提供推荐。 在这里，我想知道在数据集（https://huggingface.co/datasets/maharshipandya/spotify-tracks-dataset）上构建 ML 模型是否有助于做出更准确的推荐。  是否有必要为针对长期用户的混合方法和针对新用户的基于内容的方法构建单独的机器学习模型？  有人尝试过类似的项目吗？任何见解或建议都将不胜感激。    提交人    /u/jcelv   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1gn2mzu/spotify_music_recommendation_project/</guid>
      <pubDate>Sat, 09 Nov 2024 05:02:04 GMT</pubDate>
    </item>
    <item>
      <title>关于基本概念的生成式人工智能面试问题</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1gn2k4e/generative_ai_interview_questions_on_basic/</link>
      <description><![CDATA[在生成式 AI 面试问题的第二部分中，这篇文章涵盖了有关 GenAI 基础知识的问题，例如它与判别式 AI 有何不同，为什么朴素贝叶斯是一种生成模型等。请在此处查看所有问题：https://youtu.be/CMyrniRWWMY?si=o4cLFXUu0ho1wAtn    提交人    /u/mehul_gupta1997   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1gn2k4e/generative_ai_interview_questions_on_basic/</guid>
      <pubDate>Sat, 09 Nov 2024 04:57:45 GMT</pubDate>
    </item>
    <item>
      <title>如何训练我自己的实时物体检测模型？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1gn1sqv/how_to_train_my_own_real_time_object_detection/</link>
      <description><![CDATA[最近几周，我对创建自己的视频对象检测模型产生了兴趣。我不想从头开始构建它，而是想使用自己的数据集来训练它。但是，我不确定从哪里开始。有人可以指导我从哪里开始，我可以使用哪些工具来准备数据集，以及有哪些可训练的模型可用吗？任何建议都将不胜感激。    提交人    /u/Shkipppa   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1gn1sqv/how_to_train_my_own_real_time_object_detection/</guid>
      <pubDate>Sat, 09 Nov 2024 04:13:04 GMT</pubDate>
    </item>
    <item>
      <title>我很容易忘记学到的东西</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1gmy36x/i_forget_what_ive_learnt_very_easily/</link>
      <description><![CDATA[您好， 我已经学习机器学习一段时间了，主要是通过视频、书籍和编码。但我很容易忘记事情是如何运作的，我只知道如何在代码中实现它们，因为有很多 ML 库。学习如何编码要容易得多，因为它不那么理论化？ 您有什么建议？从头开始编码，不使用任何库？    提交人    /u/Human-ID-0196   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1gmy36x/i_forget_what_ive_learnt_very_easily/</guid>
      <pubDate>Sat, 09 Nov 2024 00:54:12 GMT</pubDate>
    </item>
    <item>
      <title>见见贝儿！</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1gmw7yl/meet_belle/</link>
      <description><![CDATA[嘿 r/learnmachinelearning， TL:DR；Harmonic AI 项目在这里：https://youtu.be/JoLOX_I3g9M 我想分享我过去一年一直在开发的早期原型 - 一个名为 Belle 的实验性 AI 系统，它采用了不同的音频交互方法。 与将声音转换为标记或文本的传统语音识别或音频处理系统不同，Belle 直接处理声波本身的连续模式和共振。该系统实时响应相干性和频率关系等数学特性，通过动态粒子场显示创建新兴的视觉模式。 您在视频中看到的是 Belle 模式识别功能的基本演示。虽然这仍然只是个原型，但我相信它提出了一些有趣的可能性，即人工智能系统如何与声学模式进行交互，而不需要先将声音转换为符号表示。 我对涉及非语言交互的应用程序特别感兴趣 - 在这些应用程序中，理解声音的情感共鸣或模式结构可能比处理单词更有价值。 这项工作正在进行中，我期待着随着研究的发展分享更多技术细节。我很想听听社区对这种方法的想法和问题。    提交人    /u/Disastrous-Pain-2367   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1gmw7yl/meet_belle/</guid>
      <pubDate>Fri, 08 Nov 2024 23:24:58 GMT</pubDate>
    </item>
    <item>
      <title>120 个狗品种，超过 10,000 张图片：狗分类的深度学习教程🐕‍🦺</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1gmrvyg/120_dog_breeds_more_than_10000_images_deep/</link>
      <description><![CDATA[        https://preview.redd.it/mf715j0mjqzd1.jpg?width=1280&amp;format=pjpg&amp;auto=webp&amp;s=ba986bf2bf3ed8f0c60cf3c99b6957037df74eaa 📽️ 在我们的最新视频教程中，我们将使用 NasLarge 预训练模型🚀和一个包含 120 种独特犬种的 10,000 多张图像的海量数据集创建一个犬种识别模型📸. 您将学到的内容： 🔹 数据准备：我们首先下载一个包含超过 20,000 张狗图像的数据集，这些图像整齐地分为 120 个类别。您将学习如何使用 Python、OpenCV 和 Numpy 加载和预处理数据，确保它完全可以进行训练。 🔹 CNN 架构和 NAS 模型：我们将使用 Nas Large 模型，并根据我们自己的需求对其进行自定义。 🔹 模型训练：利用 Tensorflow 和 Keras 的强大功能来定义和训练我们基于 Nas Large 模型的自定义 CNN 模型。我们将配置损失函数、优化器和评估指标，以在训练期间实现最佳性能。 🔹 预测新图像：观看我们对预先训练的模型进行测试！我们将展示如何使用该模型对新鲜的、从未见过的恐龙图像进行预测，并见证人工智能的魔力。   在此处查看我们的教程：https://youtu.be/vH1UVKwIhLo&amp;list=UULFTiWJJhaH6BviSWKLJUM9sg 您可以在博客中找到代码链接：https://eranfeit.net/120-dog-breeds-more-than-10000-images-deep-learning-tutorial-for-dogs-classification/ 您可以在这里找到更多教程，并加入我的时事通讯：https://eranfeit.net/ 享受 Eran    提交人    /u/Feitgemel   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1gmrvyg/120_dog_breeds_more_than_10000_images_deep/</guid>
      <pubDate>Fri, 08 Nov 2024 20:13:54 GMT</pubDate>
    </item>
    <item>
      <title>机器学习相关的简历审查帖</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</link>
      <description><![CDATA[请礼貌地将任何关于简历审查的帖子重定向到这里 对于那些正在寻找简历审查的人，请先在 imgur.com 上发布它们，然后将链接作为评论发布，或者甚至先在 /r/resumes 或 r/EngineeringResumes 上发布，然后在此处交叉发布。     提交人    /u/techrat_reddit   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</guid>
      <pubDate>Wed, 05 Jun 2024 12:11:43 GMT</pubDate>
    </item>
    </channel>
</rss>