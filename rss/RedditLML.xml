<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>学习机器学习</title>
    <link>https://www.reddit.com/r/learnmachinelearning/</link>
    <description>一个致力于学习机器学习的 subreddit</description>
    <lastBuildDate>Mon, 02 Sep 2024 03:17:54 GMT</lastBuildDate>
    <item>
      <title>行为树、决策树或其他更好的树</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f6wmyt/behavior_tree_decision_tree_or_some_other_better/</link>
      <description><![CDATA[有没有好的快速教程或网站可以让我学习决策树和行为树？它带有框架和/或库吗？ 我是软件工程师（不是机器学习工程师）。我需要使用机器学习在 Python 中为我的应用程序实现一些逻辑。 决策树和行为树看起来相似，但它们与我的研究不同。我想快速学习和学习枢轴。 我对决策树有一些了解（如何构建决策树等），但我没有听说过行为树。它在机器人和游戏行业看起来很流行。是这样吗？ 除了决策树和行为树之外，还有其他流行的机器学习算法值得检查吗？我也知道强化学习，但令人惊讶的是，至少在我的用例中它效果不佳。    提交人    /u/Best_Fish_2941   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f6wmyt/behavior_tree_decision_tree_or_some_other_better/</guid>
      <pubDate>Mon, 02 Sep 2024 03:09:51 GMT</pubDate>
    </item>
    <item>
      <title>理解决策树</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f6vno8/understanding_decision_trees/</link>
      <description><![CDATA[      嗨，我正在尝试对决策树有一个基本的了解。如果这个问题看起来过于简单，请提前致歉。 我计算了 F1（“喜欢爆米花”）相对于目标变量（“喜欢电影”）的基尼系数 (GI)，并对 F2 和 F3 进行了相同的计算。F2 的 GI 最低，因此我选择它作为根节点。我完成了第一次迭代。 但随后讲师提到，图像中的树是此表的最终树。我只是不明白我们是如何得出“年龄 &lt; 12.5”的？我们是如何得到这个数字的？我计算了“年龄”特征的分割值，但 12.5 甚至不是分割值之一。有人可以向我解释一下我们是如何得出这棵最终树的吗？谢谢。    提交人    /u/NoResource56   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f6vno8/understanding_decision_trees/</guid>
      <pubDate>Mon, 02 Sep 2024 02:17:19 GMT</pubDate>
    </item>
    <item>
      <title>是否有任何包/库支持机器学习的多项逻辑回归？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f6uv9s/are_there_any_packageslibrary_that_supports/</link>
      <description><![CDATA[嗨，我目前正在从事一个项目，主要关注多项逻辑回归作为机器学习的方法。有没有关于我可以使用 python 中的哪些包/库的建议？    提交人    /u/Interesting-Dark-189   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f6uv9s/are_there_any_packageslibrary_that_supports/</guid>
      <pubDate>Mon, 02 Sep 2024 01:35:51 GMT</pubDate>
    </item>
    <item>
      <title>为什么我们不使用其他基于梯度的优化方法？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f6skkt/why_dont_we_use_other_gradient_based_optimization/</link>
      <description><![CDATA[我最近一直在学习 VSLAM，在其中我们使用了其他基于梯度的优化方法，例如高斯-牛顿或 Levenberg-Marquardt 算法。为什么我们会将这些看似更复杂的算法用于其他用例，而不是用于神经网络？    提交人    /u/DisciplinedPenguin   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f6skkt/why_dont_we_use_other_gradient_based_optimization/</guid>
      <pubDate>Sun, 01 Sep 2024 23:40:09 GMT</pubDate>
    </item>
    <item>
      <title>让我们讨论一下多层感知器。</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f6rg93/lets_have_a_talk_on_multilayer_perceptrons/</link>
      <description><![CDATA[单隐层神经网络已被证明是一种通用近似器。因此，我相信可以肯定地说，任何分类函数都可以使用单隐层神经网络构建。 但是，我还没有找到关于使用多层神经网络的令人满意的解释。我想与您分享我的理解，看看它是否正确，并听听您的想法。 在我看来，使用多个隐藏层可以降低模型的维数，因为更深层中的每个神经元都代表一个学习到的特征。这些特征的组合使网络能够更有效地精确定位特定的期望输出。 因此，采用深度前馈网络使模型能够抽象有用的特征和更高级的概念，从而使后续层能够处理更有意义的信息。    提交人    /u/AcquaFisc   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f6rg93/lets_have_a_talk_on_multilayer_perceptrons/</guid>
      <pubDate>Sun, 01 Sep 2024 22:46:52 GMT</pubDate>
    </item>
    <item>
      <title>简单的 1/0 损失函数的方程是什么？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f6oxfz/what_is_this_equation_for_a_simple_10_loss/</link>
      <description><![CDATA[      我正在这里观看康奈尔大学的精彩机器学习讲座：https://www.youtube.com/watch?v=zj-5nkNKAow，我卡在了 28 分钟左右。 https://preview.redd.it/a0pn4uwbg9md1.png?width=462&amp;format=png&amp;auto=webp&amp;s=8404346c171b6680397b8760ddc1c5673dc77dda 他开始解释损失函数，并从 1/0 损失函数开始 - 当预测与标签不同时，它返回 1，否则返回 0。我想使用 latex 将这个等式添加到我的笔记中，但我看不懂中间的内容部分是。 所以，它是 1/h ??? delta 函数。中间部分是什么？是 &#39;2&#39; 还是 z？它有上划线吗？我理解数据集 D 中 (x_i, y_i) 的下半部分，但不知道它上面的部分是什么。 任何帮助请。    提交人    /u/Actual-Paramedic2689   [link] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f6oxfz/what_is_this_equation_for_a_simple_10_loss/</guid>
      <pubDate>Sun, 01 Sep 2024 20:55:32 GMT</pubDate>
    </item>
    <item>
      <title>任何有构建服务监控 Web 应用程序经验的人</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f6ogdw/anyone_who_has_experience_in_building_a/</link>
      <description><![CDATA[嘿机器爱好者，我正在构建一个本地服务器监控系统来控制闭路电视摄像机，该系统应该能够检测运动和声音并在我的设备中实时播放镜头。你能帮帮我吗，我正面临着让它工作的挑战。    提交人    /u/Apprehensive_Rent357   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f6ogdw/anyone_who_has_experience_in_building_a/</guid>
      <pubDate>Sun, 01 Sep 2024 20:35:01 GMT</pubDate>
    </item>
    <item>
      <title>用于游戏设计的因果神经网络。</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f6nhii/causal_neural_network_for_game_design/</link>
      <description><![CDATA[我正在设计一个神经网络，目的是控制我的战略视频游戏中敌人的决定。我想向这个理论神经网络展示游戏状态进展的连续动画，并让它根据这些有限的信息推断游戏规则和最佳策略。 这个神经网络的目标是很少进行功能编程，并且不访问游戏规则。它的范围应该仅限于查看回合制游戏状态和发现获胜和失败策略以及游戏的隐藏规则。示例如下： 在基于 2d 网格的游戏中，火块将蔓延到树块。神经网络应该看到树木燃烧的逐步视图，并了解火块旁边的树木会着火。它还应该看到水块浇灭树木火灾的证据，并了解水会浇灭任何火灾。随着游戏变得越来越复杂，它应该学会在敌方方块旁边烧毁森林将获得成功，而在友方方块旁边烧毁森林将导致失败并对团队造成伤害。通过分析游戏状态，理论上它应该通过得分和强化来学习这些复杂的行为。最终结果是神经网络决定在敌方基地附近烧毁森林，同时用水浇灭自己基地附近的火，并让火远离友方森林。它永远不应该明确知道什么是“树”、“火”或“水”；相反，它应该学习它们在短期和长期赢得或输掉游戏方面的联系。 “树”可能是 1，“火”可能是 2，“水”可能是 3。神经网络所知道的只是这些实体是不同的，并且它们具有影响它们在整个游戏中传播方式的隐藏规则。 我在因果神经网络上找到的所有资源都非常僵化，并且暗示了某种预先确定或预先编程的网络结构。我意识到让机器学习策略游戏中如此复杂的模式需要其网络具有更大的灵活性和模块化。所以，这些文章没有我希望的那么有用。 我正在寻找有助于实现这一目标的资源或想法。    提交人    /u/Mitsu_Formation   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f6nhii/causal_neural_network_for_game_design/</guid>
      <pubDate>Sun, 01 Sep 2024 19:56:14 GMT</pubDate>
    </item>
    <item>
      <title>MiniMax：新的文本到视频模型</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f6m5jv/minimax_new_text_to_video_model/</link>
      <description><![CDATA[MiniMax 是文本到视频模型的新成员，与 Kling AI、Luma Dream Machine 和 Runway Alpha Gen3 形成了激烈的竞争。查看演示及其使用方法：https://youtu.be/WR5zsSelxzw    提交人    /u/mehul_gupta1997   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f6m5jv/minimax_new_text_to_video_model/</guid>
      <pubDate>Sun, 01 Sep 2024 19:01:07 GMT</pubDate>
    </item>
    <item>
      <title>有任何将数学与 ML/AI 相关的数学资源吗？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f6gqi0/any_math_resources_that_relate_the_math_to_mlai/</link>
      <description><![CDATA[我希望学习 AI 背后的数学知识。我从线性代数开始。目前，我正在学习 Gilbert Strang 的线性代数课程和 3Blue 1 Brown 的线性代数本质课程。 虽然我一直在浏览这些资源并发现它们很有用（我特别喜欢 3 Blue 1 Brown 的可视化效果），但我想知道是否有同样容易理解的资源将这些数学与 AI 联系起来。 我以前尝试过使用《机器学习数学》这本书，但发现它很无聊而且很麻烦。我尝试过使用一些 cousera 课程（伦敦帝国理工学院的），但即使在获得经济援助后也没有钱支付。 任何不仅适用于线性代数而且适用于其他方面的替代方案都将受到高度赞赏。我相信，当我知道每一步为什么要学习数学时，我会更有动力。    提交人    /u/Suspicious_Row_5195   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f6gqi0/any_math_resources_that_relate_the_math_to_mlai/</guid>
      <pubDate>Sun, 01 Sep 2024 15:10:41 GMT</pubDate>
    </item>
    <item>
      <title>我正在 YouTube 上分享机器学习课程和项目</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f6dxe6/i_am_sharing_machine_learning_courses_and/</link>
      <description><![CDATA[大家好，我想分享一下我在我的 YouTube 频道上分享的免费课程和项目。我有 200 多个视频，并且创建了用于学习机器学习的播放列表。我将在下面留下播放列表链接，祝大家有美好的一天！ 机器学习教程 -&gt; https://youtube.com/playlist?list=PLTsu3dft3CWhSJh3x5T6jqPWTTg2i6jp1&amp;si=1rZ8PI1J4ShM_9vW 数据科学完整课程和项目 -&gt; https://youtube.com/playlist?list=PLTsu3dft3CWiow7L7WrCd27ohlra_5PGH&amp;si=6WUpVwXeAKEs4tB6    提交人    /u/onurbaltaci   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f6dxe6/i_am_sharing_machine_learning_courses_and/</guid>
      <pubDate>Sun, 01 Sep 2024 13:03:01 GMT</pubDate>
    </item>
    <item>
      <title>有人知道进入 AI/ML 的最佳路线图吗？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f6c9u3/anyone_knows_the_best_roadmap_to_get_into_aiml/</link>
      <description><![CDATA[我最近刚刚为像我一样的新手创建了一个 discord 服务器。因此，获得一份好的路线图将对我们大有帮助。如果有人有你认为最好的路线图。请尽可能与我们分享。    提交人    /u/RiceEither2911   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f6c9u3/anyone_knows_the_best_roadmap_to_get_into_aiml/</guid>
      <pubDate>Sun, 01 Sep 2024 11:31:14 GMT</pubDate>
    </item>
    <item>
      <title>从头开始构建法学硕士：3 小时编码研讨会</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f687db/building_llms_from_the_ground_up_a_3hour_coding/</link>
      <description><![CDATA[        由    /u/seraschka  提交  [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f687db/building_llms_from_the_ground_up_a_3hour_coding/</guid>
      <pubDate>Sun, 01 Sep 2024 06:44:43 GMT</pubDate>
    </item>
    <item>
      <title>有没有什么技巧可以调整神经网络等模型的超参数？目前在 Kaggle 比赛中遇到了困难。</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f66ppd/are_there_any_tricks_to_adjust_the/</link>
      <description><![CDATA[完全的初学者，几个月前开始学习机器学习基础知识，现在练习为实际用例和数据集编写模型 我听说调整超参数是一门艺术而不是科学，但我有点困惑我应该怎么做才能在不浪费太多时间的情况下获得最佳结果。目前我所做的是创建几个模型并分析它们的损失以找出最佳模型，同时检查偏差和方差以检查过度拟合和欠拟合，但这有点累人，而且对我来说感觉非常随机。 是否有任何高级技巧和窍门可以更有效地找出这些参数？比如在一个层中使用多少个神经元，甚至使用多少层，或者哪种激活函数最适合哪个层。 如果我的问题太基础，我很抱歉，但我很想学习更多，克服我的缺点和知识空白。 谢谢    提交人    /u/Uber_Killer_445   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f66ppd/are_there_any_tricks_to_adjust_the/</guid>
      <pubDate>Sun, 01 Sep 2024 05:04:47 GMT</pubDate>
    </item>
    <item>
      <title>机器学习相关的简历审查帖</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</link>
      <description><![CDATA[请礼貌地将任何关于简历审查的帖子重定向到这里 对于那些正在寻找简历审查的人，请先在 imgur.com 上发布它们，然后将链接作为评论发布，或者甚至先在 /r/resumes 或 r/EngineeringResumes 上发布，然后在此处交叉发布。     提交人    /u/techrat_reddit   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</guid>
      <pubDate>Wed, 05 Jun 2024 12:11:43 GMT</pubDate>
    </item>
    </channel>
</rss>