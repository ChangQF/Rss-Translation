<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>学习机器学习</title>
    <link>https://www.reddit.com/r/learnmachinelearning/</link>
    <description>一个致力于学习机器学习的 subreddit</description>
    <lastBuildDate>Thu, 05 Sep 2024 01:10:58 GMT</lastBuildDate>
    <item>
      <title>帮我解决二元词组及其频率</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f99bgs/help_me_with_bigrams_its_frequencies/</link>
      <description><![CDATA[我正在从事一个类似调查分析的 NLP 项目。首先，我对行进行了标记并删除了停用词。然后我找到了二元组及其频率。问题是，最顶级的二元组的频率可能只占数据的 25%。剩下的 75% 怎么办。我同意一些具有相似含义的词被视为不同的二元组，但我该如何对它们进行分组。我尝试手动进行，但对于大型数据集来说这很难。请给我一些建议，如果流程不对，请告诉我。我是新来的    提交人    /u/Jazzlike_Tadpole_699   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f99bgs/help_me_with_bigrams_its_frequencies/</guid>
      <pubDate>Thu, 05 Sep 2024 00:34:55 GMT</pubDate>
    </item>
    <item>
      <title>为什么不简单地用 numpy 来获取你的图表呢？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f97zyy/why_not_simply_get_your_plots_in_numpy/</link>
      <description><![CDATA[  由    /u/Embarrassed-Mix6420  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f97zyy/why_not_simply_get_your_plots_in_numpy/</guid>
      <pubDate>Wed, 04 Sep 2024 23:32:43 GMT</pubDate>
    </item>
    <item>
      <title>三星 Jung Bae Lee 博士强调内存瓶颈是 GPT-5 等未来 AI 模型面临的关键挑战</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f96cuq/samsungs_dr_jung_bae_lee_highlights_memory/</link>
      <description><![CDATA[在 SEMICON 台湾 CEO 峰会上，三星电子公司总裁兼内存业务负责人李正培博士强调，AI 模型的快速增长受到计算性能和内存带宽之间不断扩大的差距的制约。虽然 GPT-5 等下一代模型预计将达到前所未有的 3-5 万亿参数规模，但内存带宽的技术瓶颈正成为充分发挥其潜力的关键障碍。 李博士的幻灯片题为“计算性能和内存带宽之间不断扩大的差距”，强调尽管近年来 AI 计算能力取得了长足的进步，但内存系统仍在努力跟上步伐。这种不断扩大的差距通常被称为“内存墙”，尽管模型规模和复杂性呈指数级增长，但仍有可能降低未来人工智能进步的回报。 https://www.lycee.ai/blog/2024-09-04-samsung-memory-bottleneck-gpt5    提交人    /u/franckeinstein24   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f96cuq/samsungs_dr_jung_bae_lee_highlights_memory/</guid>
      <pubDate>Wed, 04 Sep 2024 22:18:53 GMT</pubDate>
    </item>
    <item>
      <title>Pandas groupby + 滚动操作创建新的col</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f961kw/pandas_groupby_rolling_operation_to_create_a_new/</link>
      <description><![CDATA[我有一个交易数据集，例如，有以下列：UserID、IBAN、Timestamp、Amount。我想为每个用户考虑一个 24 小时的滚动窗口，并考虑一个 IBAN，因此例如，我想计算过去 24 小时内同一用户针对同一 IBAN 进行的实际交易数量。 我已经使用 group by 中的单个元素完成了此操作，仅考虑 UserID 列，如下所示： def sort_and_reset(df_to_sort, by: Union[List[str], str] = &quot;Timestamp&quot;, inplace: bool = True): &quot;&quot;&quot; 按时间戳对 DataFrame 进行排序（除非另有说明），然后重置其索引（两个操作均在原地执行） &quot;&quot;&quot; if inplace: df_to_sort.sort_values(by=by, inplace=True) df_to_sort.reset_index(drop=True, inplace=True) else: df = df_to_sort.sort_values(by=by) df = df.reset_index(drop=True) return df def add_rolling_count_feature(df: pd.DataFrame, time_column_name: str, groupby_on: str, agg_on: str, agg_period: str) -&gt; pd.DataFrame: &quot;&quot;&quot; 向 DataFrame 添加一个新列，表示每个组在给定时间段内出现的滚动计数和给定指定特征的数量总和。 参数： - df: pd.DataFrame 包含数据的原始 DataFrame。 - time_column_name: str 包含时间或日期时间值的列的名称。 - groupby_on: str 用于对数据进行分组的列的名称（例如，用户 ID、卡号）。 - agg_on: str 计算滚动计数的列的名称，例如“Amount” - agg_period: str 滚动窗口期作为字符串（例如，&#39;30D&#39; 表示 30 天，&#39;24h&#39; 表示 24 小时）。 返回： - pd.DataFrame 原始 DataFrame 加上一个附加列，其中包含指定特征的滚动计数。 re(df, time_column_name=&#39;Time&#39;, groupby_on=&#39;UserID&#39;, agg_on=&#39;Amount&#39;, agg_period=&#39;30D&#39;) &quot;&quot;&quot; # 确保时间列是日期时间格式。检查可能不需要 df[time_column_name] = pd.to_datetime(df[time_column_name]) # 排序并重置基本上排序然后重置索引 df = sort_and_reset(df, by=[&quot;UserID&quot;,&quot;Timestamp&quot;], inplace=False) # 将时间列设置为索引 df = df.set_index(time_column_name) #groupby_on 在这里是单列 # 计算指定特征的滚动计数 df[&quot;Xa1&quot;] = df.groupby(groupby_on)[agg_on] \ .rolling(agg_period, min_periods=0, closed=&quot;left&quot;) \ .count() \ .reset_index(level=0, drop=True) # 计算滚动总和并添加将其作为新列 df[&#39;Xa2&#39;] = df.groupby(groupby_on)[agg_on] \ .rolling(agg_period, min_periods=0, closed=&#39;left&#39;) \ .sum() \ .reset_index(level=0, drop=True) # 删除 groupby 索引级别 # 重置索引以将时间列恢复为常规列 df = df.reset_index() return df  但是，当我尝试使用组中的 2 列时，它不起作用，或者更好地说，它返回所有 NAN 值（窗口是正确的，它应该返回一些东西）。我还更改了 .reset_index(drop=True) 以考虑所有级别。我认为多索引或类似的东西存在一些问题。 如能得到任何帮助我将不胜感激，谢谢 输入 df 的示例： df_x = { &#39;UserID&#39;: [1, 1, 1, 2, 2, 3, 3, 3], &#39;Timestamp&#39;: [ &#39;2024-09-01 10:00:00&#39;, &#39;2024-09-01 11:00:00&#39;, &#39;2024-09-01 12:00:00&#39;, &#39;2024-09-01 10:00:00&#39;, &#39;2024-09-01 12:00:00&#39;, &#39;2024-09-01 09:00:00&#39;, &#39;2024-09-01 10:00:00&#39;, &#39;2024-09-01 11:00:00&#39; ], &#39;IBAN&#39;: [&#39;A&#39;, &#39;B&#39;, &#39;A&#39;, &#39;A&#39;, &#39;B&#39;, &#39;A&#39;, &#39;A&#39;, &#39;B&#39;], &#39;金额&#39;: [100, 200, 150, 300, 250, 120, 180, 220]  df_x = add_rolling_count_feature(df_x,&quot;Timestamp&quot;,&quot;UserID&quot;,&quot;Amount&quot;,&quot;24h&quot;)    提交人    /u/tpauss   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f961kw/pandas_groupby_rolling_operation_to_create_a_new/</guid>
      <pubDate>Wed, 04 Sep 2024 22:05:46 GMT</pubDate>
    </item>
    <item>
      <title>我是否可以找到一个像 GPT4-O 这样的 LLM 模型来解析部分结构化 PDF 中的 JSON 格式的数据？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f95x48/can_i_find_tune_a_llm_model_like_gpt4o_to_parse/</link>
      <description><![CDATA[我正在开展一个项目，该项目严重依赖模式匹配和正则表达式来提取公司所依赖的数据并为其提供结构。这些数据是从部分结构化的 PDF 中提取的，但由于奇怪的字符或某些未处理的边缘情况，这里或那里会出现一些问题。因此，我们当前的解析引擎可能会错过 PDF 中的某些内容。 我一直在思考，并通过上传 PDF 附件对 GPT4-O 进行了测试，发现它在解析我们需要的信息方面相当不错。从那时起，我就一直计划构建一些新的东西，而不是模式识别，而是依赖于 LLM，例如来自 OPEN AI 的 LLM。 我的问题是，我可以训练 OPEN AI 或其他模型来解析这些 PDF 中我需要的信息，并使其以我想要的纯 JSON 结构输出吗？所以我可以使用 OPEN AIs 的 API 并将其集成到我们的后端服务中来完成所有工作。你们认为这可能吗？ 如果无法进行微调，那么构建这样的东西的最佳方法是什么。    提交人    /u/captain-ass-smasher   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f95x48/can_i_find_tune_a_llm_model_like_gpt4o_to_parse/</guid>
      <pubDate>Wed, 04 Sep 2024 22:00:47 GMT</pubDate>
    </item>
    <item>
      <title>LSTM 的直觉？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f95lds/intuition_of_lstm/</link>
      <description><![CDATA[我理解这个架构。但我似乎无法理解它是如何工作的。长期记忆存储在一个向量中。同一个向量用于预测下一个状态。如何才能做到这一点而不混淆    提交人    /u/ImpressionOwn5487   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f95lds/intuition_of_lstm/</guid>
      <pubDate>Wed, 04 Sep 2024 21:47:14 GMT</pubDate>
    </item>
    <item>
      <title>Virgilio 数据科学怎么样？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f94sfh/how_is_virgilio_data_science/</link>
      <description><![CDATA[我遇到了 Virgilio，这是一份完整的指南，似乎与针对 Web 开发的 The Odin Project 类似。但它并不经常更新。这是一份好的综合指南吗？有人有经验吗？有没有更好的选择？    提交人    /u/emergency-visitor   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f94sfh/how_is_virgilio_data_science/</guid>
      <pubDate>Wed, 04 Sep 2024 21:12:19 GMT</pubDate>
    </item>
    <item>
      <title>VAE 问题：相关矩阵非对角线</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f93rx3/vae_question_correlation_matrix_nondiagonal/</link>
      <description><![CDATA[      我正在尝试理解 VAE，目前正在使用它们处理时间序列数据。 假设瓶颈中有 16 个潜在变量。理想情况下，它们应该是解开的，即协方差矩阵应该是对角线的，根据我的理解，这也意味着它们是不相关的？ （我对这个不是 100% 确定） 我所做的是对 N 个样本进行推理，并像这样计算相关/协方差矩阵： corr_matrix = np.corrcoef(embeddings.T) # 形状 (16, 16) corr_matrix = np.triu(corr_matrix, k=1) flattened = corr_matrix[corr_matrix != 0].flatten() # 将“flattened”作为直方图记录到 tensorboard cov_matrix = np.cov(embeddings.T, bias=False) # 形状 (16, 16) cov_matrix = np.triu(cov_matrix, k=1) flattened_cov = cov_matrix[cov_matrix != 0].flatten() # log &#39;flattened_cov&#39; 作为直方图添加到 tensorboard  这是我仅使用 KL 损失（侦察损失的权重为零）进行训练时的行为： y 轴 = 训练步骤 我不确定这是否是预期的行为：  协方差矩阵中的数据分布看起来太陡峭（方差低）。 在某个时候，相关矩阵不再不相关了？？？  这是正常的吗？或者我的实现可能是错误的？    由    /u/laggdown 提交   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f93rx3/vae_question_correlation_matrix_nondiagonal/</guid>
      <pubDate>Wed, 04 Sep 2024 20:29:50 GMT</pubDate>
    </item>
    <item>
      <title>如何/在哪里学习机器学习</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f90hpl/how_where_to_learn_ml/</link>
      <description><![CDATA[所以我的问题很简单。你们在哪里学习机器学习的？我在哪里可以学习预处理我的数据？我如何以实践的方式学习它？我打算做一个关于农作物价格预测的项目。提前谢谢。注意：我已经完成了 andrew ng 的机器学习课程     提交人    /u/Asta-12   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f90hpl/how_where_to_learn_ml/</guid>
      <pubDate>Wed, 04 Sep 2024 18:18:39 GMT</pubDate>
    </item>
    <item>
      <title>自动编码器空间上的生成式人工智能</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f8vq8q/generative_ai_on_autoencoder_space/</link>
      <description><![CDATA[      我知道生成手写数字是一项简单的任务，但是该架构让我能够在两个所需模型上仅使用 10 个 epoch 就获得惊人的结果。 自动编码器使模型更容易生成令人信服的结果。即使你向解码器提供随机噪声，它看起来也有点像数字，但是另一个人工智能可以生成编码图像 首先，我在数据集上训练了一个自动编码器 然后我训练生成器来预测编码图像 最后，为了生成图像，我首先将它通过生成器几次，最后通过解码器来获得最终图像 这里有 5 个真实的 MNIST 图像样本和 5 个随机生成的图像样本 https://preview.redd.it/q4uz0v40jtmd1.png?width=885&amp;format=png&amp;auto=webp&amp;s=bb15793787d34ce83b44a285b18c48a297edf967 发电机损失 https://preview.redd.it/0ikekdo1jtmd1.png?width=515&amp;format=png&amp;auto=webp&amp;s=27d3767f1ec38b96b3db99fa842fb0fb2e6a6aed 带有代码的笔记本：https://github.com/Thiago099/mnist-autoencoder-denoiser/blob/main/main.ipynb 存储库：https://github.com/Thiago099/mnist-autoencoder-denoiser/    提交人    /u/Small-Ad-1694   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f8vq8q/generative_ai_on_autoencoder_space/</guid>
      <pubDate>Wed, 04 Sep 2024 15:09:04 GMT</pubDate>
    </item>
    <item>
      <title>我开源了我的模板，该模板可以托管 30 个 AI 网站 / saas，每月价格约为 5 美元</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f8sqte/i_opensourced_my_template_that_hosts_30_ai/</link>
      <description><![CDATA[        由    /u/DareFail 提交   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f8sqte/i_opensourced_my_template_that_hosts_30_ai/</guid>
      <pubDate>Wed, 04 Sep 2024 13:02:00 GMT</pubDate>
    </item>
    <item>
      <title>我们应该避免阅读哪些书籍？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f8ntcq/which_books_should_we_avoid/</link>
      <description><![CDATA[关于如何开始、最佳路线图是什么等问题有很多。我想问你，你认为我们应该避免哪些书籍、资源？你是否遇到过任何看起来可疑或完全错误和误导性的东西？    提交人    /u/hahahaczyk   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f8ntcq/which_books_should_we_avoid/</guid>
      <pubDate>Wed, 04 Sep 2024 08:07:07 GMT</pubDate>
    </item>
    <item>
      <title>最适合初学者的 ML 课程</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f8mfas/best_ml_course_for_a_beginner/</link>
      <description><![CDATA[大家好，我想学习机器学习，您能给我推荐一个好的课程吗？这个课程可以教我从基础到高级的所有知识。您可以告诉我免费或付费课程。    提交人    /u/Ddraibion​​312   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f8mfas/best_ml_course_for_a_beginner/</guid>
      <pubDate>Wed, 04 Sep 2024 06:25:13 GMT</pubDate>
    </item>
    <item>
      <title>作为一名自学 ML 的新手，没有足够的先决条件......</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1f8frrm/as_a_selfeducating_noob_to_ml_without_enough/</link>
      <description><![CDATA[        提交人    /u/Status-Shock-880   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1f8frrm/as_a_selfeducating_noob_to_ml_without_enough/</guid>
      <pubDate>Wed, 04 Sep 2024 00:29:04 GMT</pubDate>
    </item>
    <item>
      <title>机器学习相关的简历审查帖</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</link>
      <description><![CDATA[请礼貌地将任何关于简历审查的帖子重定向到这里 对于那些正在寻找简历审查的人，请先在 imgur.com 上发布它们，然后将链接作为评论发布，或者甚至先在 /r/resumes 或 r/EngineeringResumes 上发布，然后在此处交叉发布。     提交人    /u/techrat_reddit   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</guid>
      <pubDate>Wed, 05 Jun 2024 12:11:43 GMT</pubDate>
    </item>
    </channel>
</rss>