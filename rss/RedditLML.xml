<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>学习机器学习</title>
    <link>https://www.reddit.com/r/learnmachinelearning/</link>
    <description>一个致力于学习机器学习的 subreddit</description>
    <lastBuildDate>Sat, 12 Oct 2024 15:16:13 GMT</lastBuildDate>
    <item>
      <title>ML 工程师的职业发展是怎样的？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1g22acb/how_does_ml_engineer_career_progression_look_like/</link>
      <description><![CDATA[从入门级到中级/高级 ML 工程师的职业发展是什么样的？随着人们的经验越来越丰富，他们的日常工作/角色/和期望是什么样的或会发生变化？可以期待什么？    提交人    /u/Sea-Highway4576   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1g22acb/how_does_ml_engineer_career_progression_look_like/</guid>
      <pubDate>Sat, 12 Oct 2024 15:13:58 GMT</pubDate>
    </item>
    <item>
      <title>如何在本地运行 OpenAI 的 Whisper 文本转语音模型</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1g21nwc/how_to_run_openais_whisper_text_to_speech_model/</link>
      <description><![CDATA[        由    /u/jakecoolguy  提交  [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1g21nwc/how_to_run_openais_whisper_text_to_speech_model/</guid>
      <pubDate>Sat, 12 Oct 2024 14:44:58 GMT</pubDate>
    </item>
    <item>
      <title>需要帮助学习如何制作抹布！！</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1g21mr2/need_help_with_learning_how_to_make_a_rag/</link>
      <description><![CDATA[我正在构建一个可以读取 word 文档并回答有关该 word 文档的问题的 rag。我希望它能够将聊天记录保存到 mongo db，并且输出包含从哪个文档获取信息的来源和页码。我还在使用 google collab，因为我的笔记本电脑无法运行 doom。到目前为止，这是我已经下载的代码： 来自 langchain_community.document_loaders 导入 Docx2txtLoader 来自 langchain.text_splitter 导入 RecursiveCharacterTextSplitter 来自 langchain.chains 导入 RetrievalQA 来自 langchain.vectorstores 导入 Chroma 来自 langchain.embeddings 导入 HuggingFaceEmbeddings 来自 transformers 导入 AutoModelForCausalLM、AutoTokenizer、pipeline 来自 langchain.llms 导入 HuggingFacePipeline 来自 langchain.memory 导入 ConversationBufferMemory 来自 langchain_core.output_parsers 导入 StrOutputParser 来自 langchain.prompts 导入 PromptTemplate 来自 langchain_core.runnables 导入 RunnablePassthrough 来自 pymongo 导入 MongoClient 导入 o​​s 导入 torch # 从本地文件加载文档 doc_paths = [&quot;./Minecraft Basics for AI.docx&quot;, &quot;./Minecraft Mining for AI.docx&quot;] all_documents = [] for doc_path in doc_paths: if os.path.isfile(doc_path): loader = Docx2txtLoader(doc_path) data = loader.load() for page_num, doc in enumerate(data): doc.metadata = {&quot;source&quot;: doc_path, &quot;page_number&quot;: page_num + 1} all_documents.append(doc) else: print(f&quot;文件 {doc_path} 不存在。&quot;) # 使用更小、更高效的模型创建嵌入 embeddings = HuggingFaceEmbeddings(model_name=&quot;sentence-transformers/all-MiniLM-L6-v2&quot;) # 如果有有效文档，则创建检索器 if all_documents: text_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=200) splits = text_splitter.split_documents(all_documents) # 创建 Chroma 向量存储 vectorstore = Chroma.from_documents(documents=splits, embedding=embeddings) # 创建检索器 triester = vectorstore.as_retriever(search_type=&quot;similarity&quot;, search_kwargs={&quot;k&quot;: 6}) else: print(&quot;No valid documents were loaded.&quot;) trieser = None # 使用较小的模型设置 LLM 模型以减少 RAM 使用量 model_name = &quot;EleutherAI/gpt-neo-1.3B&quot; tokenizer = AutoTokenizer.from_pretrained(model_name) pipe = pipeline(&quot;text-generation&quot;, model=model_name, tokenizer=tokenizer, max_length=512, device=&#39;cuda&#39; if torch.cuda.is_available() else -1) # 如果可用，使用 GPU llm = HuggingFacePipeline(pipeline=pipe) # 定义提示模板 prompt_template = &quot;&quot;&quot; &lt;|system|&gt; 根据您的知识回答问题。使用以下上下文来帮助： {context} &lt;/s&gt; &lt;|user|&gt; {question} &lt;/s&gt; &lt;|assistant|&gt; &quot;&quot;&quot; prompt = PromptTemplate( input_variables=[&quot;context&quot;, &quot;question&quot;], template=prompt_template, ) # MongoDB 设置 mongo_client = MongoClient(&quot;mongodb://localhost:27017/&quot;) db = mongo_client[&quot;chat_history_db&quot;] chat_collection = db[&quot;chats&quot;] # 设置对话缓冲区内存 memory = ConversationBufferMemory(memory_key=&quot;chat_history&quot;, return_messages=True) # 使用文档组合器设置 QA 链 llm_chain = prompt | llm | StrOutputParser() rag_chain = {&quot;context&quot;: trieser, &quot;question&quot;: RunnablePassthrough()} | llm_chain # 通过终端与机器人交互的函数 def chat_with_bot(): print(&quot;开始与机器人聊天（输入&#39;exit&#39;停止）&quot;) while True: user_input = input(&quot;你：&quot;) if user_input.lower() == &#39;exit&#39;: break response = rag_chain.run(user_input) # 将聊天记录保存到 MongoDB chat_record = { &quot;user&quot;: user_input, &quot;bot&quot;: response, } chat_collection.insert_one(chat_record) # 显示机器人回复 print(f&quot;Bot: {response}&quot;) if __name__ == &quot;__main__&quot;: chat_with_bot()     submitted by    /u/HistoricalDraft6708   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1g21mr2/need_help_with_learning_how_to_make_a_rag/</guid>
      <pubDate>Sat, 12 Oct 2024 14:43:26 GMT</pubDate>
    </item>
    <item>
      <title>ISL，即使用 Scikit-Learn 和 TensorFlow 进行动手机器学习，或机器学习数学（Deisenroth 等）：作为业余爱好者，我应该从哪里开始？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1g21f99/isl_or_handson_machine_learning_with_scikitlearn/</link>
      <description><![CDATA[嗨，我愿意深入了解 ML 以构建项目，我对所需的最低线性代数主题感到满意，但不熟悉多元微积分或概率论。哪一本书能达到良好的平衡？ 欢迎提出建议，我不是大学本科生，所以我没有正式的知识。 我之前曾使用 TensorFlow 进行过基本项目，但感觉就像货物编程 + 冒名顶替综合症。 学历：12 年级    提交人    /u/Apprehensive-Key9995   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1g21f99/isl_or_handson_machine_learning_with_scikitlearn/</guid>
      <pubDate>Sat, 12 Oct 2024 14:33:29 GMT</pubDate>
    </item>
    <item>
      <title>您认为哪个平台最适合设计基于人工智能的聊天机器人？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1g21cxg/which_platform_would_you_consider_the_most/</link>
      <description><![CDATA[如果有人有想法，请在评论中告诉我。    提交人    /u/protectivedominion1   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1g21cxg/which_platform_would_you_consider_the_most/</guid>
      <pubDate>Sat, 12 Oct 2024 14:30:24 GMT</pubDate>
    </item>
    <item>
      <title>从哪里学习 ML 和 AI</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1g21asf/from_where_to_learn_ml_and_ai/</link>
      <description><![CDATA[  由    /u/karansingh2024  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1g21asf/from_where_to_learn_ml_and_ai/</guid>
      <pubDate>Sat, 12 Oct 2024 14:27:30 GMT</pubDate>
    </item>
    <item>
      <title>T 检验说明</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1g200jz/ttest_explained/</link>
      <description><![CDATA[        提交人    /u/Personal-Trainer-541   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1g200jz/ttest_explained/</guid>
      <pubDate>Sat, 12 Oct 2024 13:22:22 GMT</pubDate>
    </item>
    <item>
      <title>图论项目构想</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1g1ylmd/graph_theory_project_idea/</link>
      <description><![CDATA[大家好，我是三年级计算机科学和数学专业的学生。我们被要求做一个图论项目以获得一定的分数，但必须是独特而新颖的。我真的无法用我现有的知识想出任何新的东西。请提出一些建议。我愿意为该项目的竞争而学习。    提交人    /u/Acceptable_Ad466   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1g1ylmd/graph_theory_project_idea/</guid>
      <pubDate>Sat, 12 Oct 2024 12:02:52 GMT</pubDate>
    </item>
    <item>
      <title>OpenAI 的多代理编排框架：Swarm</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1g1xpzy/multiagent_orchestration_framework_by_openai_swarm/</link>
      <description><![CDATA[OpenAI 发布了 Swarm，这是一个与 CrewAI 和 AutoGen 非常相似的多代理编排框架。乍一看很不错，有很多选项（目前仅支持 OpenAI API）https://youtu.be/ELB48Zp9s3M    提交人    /u/mehul_gupta1997   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1g1xpzy/multiagent_orchestration_framework_by_openai_swarm/</guid>
      <pubDate>Sat, 12 Oct 2024 11:04:51 GMT</pubDate>
    </item>
    <item>
      <title>我学习深度学习、机器学习等的路线正确吗？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1g1xgaw/am_i_on_right_track_to_learn_deep_learning/</link>
      <description><![CDATA[我的目标是使用任何编程语言（对我来说无所谓）实现这篇关于深度学习的论文。但我要做的是 Python。https://ieeexplore.ieee.org/document/9461296 这是我的项目/基于目标的学习。我应该如何进行？关于我：我是巴基斯坦的计算机科学毕业生，目前在顶级公司担任支持工程师。 我正在考虑这个路线图：  sql R excel power bi/tableau python  之后我可以写那个项目吗？或者我需要一些严肃的知识？比如什么应该是正确的路线图？我想开始动手。以上是我的目标。    提交人    /u/No_Place_6696   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1g1xgaw/am_i_on_right_track_to_learn_deep_learning/</guid>
      <pubDate>Sat, 12 Oct 2024 10:45:20 GMT</pubDate>
    </item>
    <item>
      <title>哪个 Python 库可用于简单的 ML 文本分类？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1g1x677/which_python_library_to_use_for_a_simple_ml_text/</link>
      <description><![CDATA[假设我有一小组预定义的文章类别 - 例如“娱乐”、“政治”、“金融”、“育儿”和“体育”。对于给定的一篇英文小文本文章，我想计算它属于哪个类别。或者，更好的是，给定的文章 80% 是关于财务，20% 是关于政治，3% 是关于体育。 当然，我有一个大约 10,000 篇文章的训练集，其中已经分配了正确的类别。 我应该使用哪个 Python 库来对这 10,000 篇文章进行模型训练，然后计算给定新文章的类别（或每个类别的概率）？ 我认为词袋模型 + 贝叶斯分类器（或最大熵分类器）完全可以满足我的需求。我想要一些轻量级和简单的东西，可以在我的笔记本电脑上运行，并且不依赖于外部 API…… 谢谢！    提交人    /u/pachura3   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1g1x677/which_python_library_to_use_for_a_simple_ml_text/</guid>
      <pubDate>Sat, 12 Oct 2024 10:24:22 GMT</pubDate>
    </item>
    <item>
      <title>（端到端）Apache Spark 中的 20 个机器学习项目</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1g1s2z7/end_to_end_20_machine_learning_project_in_apache/</link>
      <description><![CDATA[大家好， 希望你一切都好。 关于 Apache Spark 和 Scala 中的机器学习项目（端到端）的免费教程，附带代码和说明  使用机器学习进行预期寿命预测 使用机器学习预测可能的贷款违约 机器学习项目 - 贷款批准预测 使用 Apache Spark 中的机器学习进行客户细分 机器学习项目 - 使用 Apache Spark 构建电影推荐引擎 销售预测或销售预报的机器学习项目 蘑菇分类机器学习项目（可食用还是有毒） 发电厂的机器学习管道应用。 机器学习项目 - 预测森林覆盖率 机器学习项目预测澳大利亚明天会下雨吗 预测广告点击 - 实践数据分析和逻辑回归预测 机器学习项目 - 药物分类 预测任务是确定一个人的年收入是否超过 50K 机器学习项目 - 根据个人喜好对性别进行分类 机器学习项目 - 移动价格分类 机器学习项目 - 预测昨天的细胞定位位点 机器学习项目 - YouTube 垃圾评论预测 根据可用属性识别动物类型（7 种类型） 机器学习项目- 玻璃识别 通过物理测量预测鲍鱼的年龄  希望您会喜欢这些教程。    提交人    /u/bigdataengineer4life   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1g1s2z7/end_to_end_20_machine_learning_project_in_apache/</guid>
      <pubDate>Sat, 12 Oct 2024 04:09:51 GMT</pubDate>
    </item>
    <item>
      <title>问：有完整的 ML 项目吗？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1g1j6bn/question_any_complete_ml_projects/</link>
      <description><![CDATA[嗨，我正在寻找完整的机器学习项目，其中的代码利用了回归、决策树和 SVM（但不是 LLM）等基本算法。在大学学习期间，我们单独讨论了机器学习主题 - 例如，一周讨论回归，另一周讨论超参数优化，然后是分类、深度学习等。但是，我们没有涵盖将所有内容整合在一起或专注于部署模型的完整项目。 您能否推荐任何包含代码的综合示例，涵盖整个过程 - 数据预处理、测试多个模型、超参数调整和部署？ 再次。代码会很好。理想情况下还有一篇已发表的论文（可选）或者它可以是您的私人项目。 谢谢！    提交人    /u/Odd-Establishment604   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1g1j6bn/question_any_complete_ml_projects/</guid>
      <pubDate>Fri, 11 Oct 2024 20:23:30 GMT</pubDate>
    </item>
    <item>
      <title>Ilya Sutskevers AI 阅读清单摘要</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1g1hx5i/a_summary_of_ilya_sutskevers_ai_reading_list/</link>
      <description><![CDATA[  由   提交  /u/AccomplishedCat4770   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1g1hx5i/a_summary_of_ilya_sutskevers_ai_reading_list/</guid>
      <pubDate>Fri, 11 Oct 2024 19:27:03 GMT</pubDate>
    </item>
    <item>
      <title>机器学习相关的简历审查帖</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</link>
      <description><![CDATA[请礼貌地将任何关于简历审查的帖子重定向到这里 对于那些正在寻找简历审查的人，请先在 imgur.com 上发布它们，然后将链接作为评论发布，或者甚至先在 /r/resumes 或 r/EngineeringResumes 上发布，然后在此处交叉发布。     提交人    /u/techrat_reddit   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</guid>
      <pubDate>Wed, 05 Jun 2024 12:11:43 GMT</pubDate>
    </item>
    </channel>
</rss>