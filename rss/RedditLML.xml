<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>学习机器学习</title>
    <link>https://www.reddit.com/r/learnmachinelearning/</link>
    <description>一个致力于学习机器学习的 subreddit</description>
    <lastBuildDate>Fri, 19 Jul 2024 09:15:28 GMT</lastBuildDate>
    <item>
      <title>在康复中心期间制作了成瘾康复模型</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1e6yztu/made_an_addiction_recovery_model_while_in_rehab/</link>
      <description><![CDATA[      我们可以将任何成瘾的恢复过程建模为隐马尔可夫模型。    提交人    /u/travis1bickle   [link] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1e6yztu/made_an_addiction_recovery_model_while_in_rehab/</guid>
      <pubDate>Fri, 19 Jul 2024 08:45:41 GMT</pubDate>
    </item>
    <item>
      <title>Tensorflow 与 PyTorch</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1e6x3if/tensorflow_vs_pytorch/</link>
      <description><![CDATA[嗨，同学们， 我已经涉足 Tensorflow 和 PyTorch 一段时间了。我觉得 TF 在语法上比 PT 更容易。相当简单。但 PT 占主导地位，比 TF 使用更广泛。为什么会这样？我天真的理解是，更容易编写的东西应该被更多地采用。PT 有什么重要意义，以至于它在采用竞赛中把 TF 远远甩在后面？    提交者    /u/SimpleCharacter4748   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1e6x3if/tensorflow_vs_pytorch/</guid>
      <pubDate>Fri, 19 Jul 2024 06:31:28 GMT</pubDate>
    </item>
    <item>
      <title>我需要使用 ANN 解决一个问题，需要帮助</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1e6wrvf/need_help_regarding_a_problem_i_need_to_solve/</link>
      <description><![CDATA[      我一直在做一个项目，即利用剪切速率、温度和粒度来预测非牛顿流体的粘度。但我似乎无法取得任何progress.It，如果有人能帮助我，那就太好了。 数据集是这样的 https://preview.redd.it/mzg0w2v23fdd1.png?width=352&amp;format=png&amp;auto=webp&amp;s=b790d6180381451b7a9843b58fde07c7a635c147 我参考了 youtube 上的视频构建了一个人工神经网络，但是错误非常大，准确率为 0 。我该如何解决这个问题？    提交人    /u/Silly_Cash_2698   [link] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1e6wrvf/need_help_regarding_a_problem_i_need_to_solve/</guid>
      <pubDate>Fri, 19 Jul 2024 06:10:33 GMT</pubDate>
    </item>
    <item>
      <title>软件工程师的机器学习准备</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1e6whws/ml_prep_for_a_software_engineer/</link>
      <description><![CDATA[大家好，我是一名软件工程师，但想在空闲时间学习机器学习。我买了使用 Scikit-Learn、Keras 和 TensorFlow 进行机器学习，因为一个朋友向我推荐了这本书。我现在读到了第 50 页，到目前为止还不错。 我的问题是，这本书很厚，有 700 多页，我不知道该学哪一部分，该跳过哪一部分。我想打好机器学习的基础，并充满信心，因为我想成为一名机器学习工程师。 你建议从头到尾阅读吗？我似乎找不到以这本书为主要参考的课程。你能建议我应该优先学习哪些章节吗？ 你能推荐一本补充书籍吗？我对使用 Python 很有信心，学习库应该不是问题。此外，我对理解背后的数学很有耐心，所以也欢迎数学书籍。 谢谢！    提交人    /u/CompetitionHorror55   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1e6whws/ml_prep_for_a_software_engineer/</guid>
      <pubDate>Fri, 19 Jul 2024 05:52:49 GMT</pubDate>
    </item>
    <item>
      <title>制定机器学习面试准备策略</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1e6v9mj/strategizing_your_preparation_for_machine/</link>
      <description><![CDATA[大家好，ML 社区 机器学习面试可能很难，我也遇到过很多次被拒绝的情况。但每次失败都教会了我宝贵的教训：坚持学习和有针对性的准备。 在我的最新文章中，我以更主观的角度深入探讨了 ML 面试。每个 ML 工作角色都是独一无二的，需要根据您面试的工作、团队和公司量身定制策略。 请在此处查看：https://mlengineerinsights.substack.com/p/strategizing-your-preparation-for 希望这能帮助人们制定面试准备策略！    提交人    /u/tobeflyer   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1e6v9mj/strategizing_your_preparation_for_machine/</guid>
      <pubDate>Fri, 19 Jul 2024 04:36:03 GMT</pubDate>
    </item>
    <item>
      <title>学习 Transformer</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1e6tk8s/learning_transformers/</link>
      <description><![CDATA[嗨，我正在寻找研究 transformers 网络的方法，以便在项目中应用一些建议或资源来研究 transformers     提交人    /u/Creador270   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1e6tk8s/learning_transformers/</guid>
      <pubDate>Fri, 19 Jul 2024 03:00:15 GMT</pubDate>
    </item>
    <item>
      <title>让我们从头开始构建 AI 代理</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1e6sj7x/lets_build_ai_agent_from_scratch/</link>
      <description><![CDATA[      https://i.redd.it/olh3lop7vddd1.gif https://preview.redd.it/c30at0cavddd1.png?width=1102&amp;format=png&amp;auto=webp&amp;s=1e0485ef2fd0ad78860fe345e9e33bb9e1b82648 ******************  完整文章 | 完整代码库 ****************** ● 本文主题是什么？  本文介绍了如何从头开始构建用于文本分析的简单 AI 代理。 它展示了如何创建一个可以理解用户问题、选择正确的分析工具并提供有关文本的详细信息的 AI。 该系统使用语言模型来了解用户想要什么以及定制的文本分析工具。 这些工具可以计算字符和单词，查找最长的单词并发现文本中的唯一单词。 本文展示了如何使用名为 Streamlit 的工具使此 AI 易于使用。  ● 为什么要阅读本文？  读者将了解 AI 代理的基本部分。 它展示了如何AI 可以用于商业，例如查看客户反馈或处理大量文档。 本文证明，制造 AI 并不总是需要大量资金或专业知识。 它对企业领导者、开发人员以及任何有兴趣将 AI 用于商业用途的人都很有用。  ● 让我们设计  本文使用图表解释了 AI 代理的设计。 它展示了 AI 代理的工作原理，从设置到向用户提供答案。  ● 让我们开始烹饪  本节提供了 GitHub 上的项目链接并解释了项目结构。  ● AI 代理大脑模块  解释与语言模型对话的 AI 代理的主要部分。 展示如何组织代码以使其易于使用和更改。  ● 我们的简单 AI 代理模块  描述 AI 中处理文本分析的部分。 解释它如何与不同的工具一起工作并向用户提供结果。  ● 工具  讨论 AI 代理使用的文本分析工具。 解释每个工具：计数字符、查找最长单词、发现唯一单词和计数单词。  ● 让我们设置  提供有关如何设置项目的说明的链接。  ● 让我们运行  展示 AI 代理工作的示例。  ● 结束语  讨论未来 AI 如何在商业中使用。 建议 AI 代理可能会做更复杂的事情未来的任务。 提醒读者，文章中的基本思想对于制作优秀的AI工具仍然很重要。     提交人    /u/AssistanceOk2217   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1e6sj7x/lets_build_ai_agent_from_scratch/</guid>
      <pubDate>Fri, 19 Jul 2024 02:05:54 GMT</pubDate>
    </item>
    <item>
      <title>通过向 RL 代理提供实时屏幕截图，训练其玩自定义 Fortnite 地图。以下是卷积过滤器的可视化效果。</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1e6rakc/trained_a_rl_agent_to_play_a_custom_fortnite_map/</link>
      <description><![CDATA[        提交人    /u/voidupdate   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1e6rakc/trained_a_rl_agent_to_play_a_custom_fortnite_map/</guid>
      <pubDate>Fri, 19 Jul 2024 01:02:11 GMT</pubDate>
    </item>
    <item>
      <title>将权重梯度标准化（为 1 或 -1）是否可以显著提高准确性并减少训练时间？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1e6nm00/normalizing_weight_gradients_to_1_or_1/</link>
      <description><![CDATA[tim154753/Neural-Net-Better：使用 numpy 的更好的神经网络 (github.com) （github repo 包含我的代码） TLDR：标题。我有一个简单的 3 层前馈网络（MNIST 数字分类器），仅使用 numpy 构建，似乎标题中描述的策略比我尝试过的任何其他方法都能更快地收敛到更好的最小值。为什么会这样，这对数据和我的网络意味着什么？有没有其他人在自己的实验中发现类似的东西？ 我正在用我的网络（3 层前馈网络在 MNIST 数据集上训练后对数字进行分类）进行实验，实施各种优化策略，如动量和 RMSprop。我发现（虽然测试很少）这些策略确实让我的网络比仅使用简单的小批量梯度下降（15 个 epoch 内）收敛得更快，但总是在次优最小值上，测试集上的准确率约为 92%。然而，当我将 beta1 和 beta2（动量和 RMSprop 的 beta 值）初始化为 0 时，我偶然发现了一种策略，可以在仅 1 个 epoch 后持续实现 90-92% 的准确率，在大约 12 个 epoch 后实现 96% 的准确率。我本想让这些策略对训练不产生影响（作为基线简单 GD 测试），但我忘记了 RMSprop 将梯度除以 RMSprop 公式的结果，而 beta2 为 0 时，这意味着梯度被其自身的绝对值除以（加上一个小的 epsilon）。这使我的网络在仅几个 epoch 后就实现了前所未有的（对我来说）准确率。这是一种已知的优化策略吗，还是只适用于非常特定的数据集和网络架构？如果仅使用方向（梯度中每个条目为 1 或 -1）来采取梯度下降的步骤，网络能够更快地收敛到非常好的最小值，那么这对我的网络的数据和/或结构（直观地）意味着什么？    提交人    /u/InteractionQuiet9169   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1e6nm00/normalizing_weight_gradients_to_1_or_1/</guid>
      <pubDate>Thu, 18 Jul 2024 22:07:05 GMT</pubDate>
    </item>
    <item>
      <title>对于那些有兴趣了解如何在英特尔 Tiber 开发者云上构建和实施 ML 工作负载的人，请查看文章。</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1e6iqw3/for_those_who_are_interested_in_learning_how_to/</link>
      <description><![CDATA[        提交人    /u/ramyaravi19   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1e6iqw3/for_those_who_are_interested_in_learning_how_to/</guid>
      <pubDate>Thu, 18 Jul 2024 18:44:23 GMT</pubDate>
    </item>
    <item>
      <title>DeepLearning.ai 高级算法课程</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1e6hhd9/deeplearningai_advanced_algorithms_course/</link>
      <description><![CDATA[      在观看 Andrew ng 的机器学习专业第二门课程中的前向传播视频时，我注意到如图所示的权重每个单元的权重都是按列计算的 W[:,j]，而不是按行计算的。我真的觉得这不仅从编程的角度而且从理论上来说都与正常的行权重向量相悖。有人能告诉我他为什么这样做吗？我一点也不为此辩护，但我真的想知道为什么，因为我确实认为当我自己实现神经网络时我会犯错。    提交人    /u/Extension-Group2131   [link] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1e6hhd9/deeplearningai_advanced_algorithms_course/</guid>
      <pubDate>Thu, 18 Jul 2024 17:46:59 GMT</pubDate>
    </item>
    <item>
      <title>ML 系统设计：450 个值得学习的案例研究（Airtable 数据库）</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1e6h0k0/ml_system_design_450_case_studies_to_learn_from/</link>
      <description><![CDATA[大家好！想分享来自 100 多家公司的 450 个 ML 用例的数据库链接，这些用例详细介绍了 ML 和 LLM 系统设计。您可以按行业或 ML 用例进行筛选。 如果这里有人着手设计 ML 系统，我希望你会发现它很有用！ 数据库链接：https://www.evidentlyai.com/ml-system-design  免责声明：我是 Evidently 背后的团队成员，这是一个开源 ML 和 LLM 可观察性框架。我们整理了这个数据库。    提交人    /u/dmalyugina   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1e6h0k0/ml_system_design_450_case_studies_to_learn_from/</guid>
      <pubDate>Thu, 18 Jul 2024 17:27:18 GMT</pubDate>
    </item>
    <item>
      <title>对人工智能炒作的共识？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1e6gouc/consensus_on_ai_hype/</link>
      <description><![CDATA[您的看法是什么？我在参加 GPT 之前就对 AI 很感兴趣，但无法深入了解数学或要求。但我最近从这个小组和其他 AI 小组看到，AI 被炒作了。尽管如此，它还是很有用的。由于对数据感兴趣，我仍在学习它，但您认为 5 年后 AI 会成为一种实用工具吗？我正在尝试过渡到它。但我想知道您的答案，因为我知道 AI 炒作会逐渐消退，全球对它的兴趣也会逐渐消退。顺便说一下，我有金融背景。     提交人    /u/bliss22_23   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1e6gouc/consensus_on_ai_hype/</guid>
      <pubDate>Thu, 18 Jul 2024 17:13:52 GMT</pubDate>
    </item>
    <item>
      <title>你们在进入机器学习领域之前喜欢数学吗？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1e68syz/did_you_guys_enjoy_maths_before_getting_into_ml/</link>
      <description><![CDATA[我已经好几年没学过数学了，所以我一直在努力复习线性代数、统计学等。其实我真的很喜欢。我认为看到我所学知识的实际意义让事情变得更有趣了。并不是说我以前讨厌数学，但我绝对没有想过自己会在空闲时间做数学。 我注意到很多从事机器学习的人已经对数学产生了兴趣。无论是数学或统计学学位，还是数据科学学位等。只是希望听到一些程序员变成数学家的成功故事，而不是数学家变成程序员的故事。    提交人    /u/remerdy1   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1e68syz/did_you_guys_enjoy_maths_before_getting_into_ml/</guid>
      <pubDate>Thu, 18 Jul 2024 11:11:36 GMT</pubDate>
    </item>
    <item>
      <title>机器学习相关的简历审查帖</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</link>
      <description><![CDATA[请礼貌地将任何关于简历审查的帖子重定向到这里 对于那些正在寻找简历审查的人，请先在 imgur.com 上发布它们，然后将链接作为评论发布，或者甚至先在 /r/resumes 或 r/EngineeringResumes 上发布，然后在此处交叉发布。     提交人    /u/techrat_reddit   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</guid>
      <pubDate>Wed, 05 Jun 2024 12:11:43 GMT</pubDate>
    </item>
    </channel>
</rss>