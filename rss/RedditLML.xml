<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>学习机器学习</title>
    <link>https://www.reddit.com/r/learnmachinelearning/</link>
    <description>一个致力于学习机器学习的 subreddit</description>
    <lastBuildDate>Sat, 28 Sep 2024 21:15:00 GMT</lastBuildDate>
    <item>
      <title>生成式 AI 和 AWS 竞赛及指导机会</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1frocy5/generative_ai_aws_competition_with_mentorship/</link>
      <description><![CDATA[嘿 r/learnmachinelearning ！ 有一个生成式 AI 项目竞赛，参与者可以使用 AWS 云资源 开发和部署他们的 AI 想法。4 人团队将定期获得导师指导，以协助项目开发。 以下是包含的内容：  访问 AWS 以构建和部署项目。 整个过程中由技术专业人士提供指导。 向行业专家进行演示，并为顶级团队提供资金和可能的工作机会。  注册并请于 10 月 7 日前通过 [AIOktoberFest@bizcloudexperts.com]() 提交问题 &amp; 可虚拟参与！    提交人    /u/Negative-Okra1928   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1frocy5/generative_ai_aws_competition_with_mentorship/</guid>
      <pubDate>Sat, 28 Sep 2024 21:14:22 GMT</pubDate>
    </item>
    <item>
      <title>ChatGPT-4o 数据分析快速工程 - 我想免费分享 - 把你的问题告诉我</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fro2kv/chatgpt4o_prompt_engineering_for_data_analysis_i/</link>
      <description><![CDATA[今天，我们的团队举办了一场黑客马拉松，我们在其中试验了最新版本的 ChatGPT，主要侧重于分析结构化财务数据。通过最新更新，我们发现现在可以用人类语言（当然不是机器代码）完成一系列令人印象深刻的任务。然而，我们还发现实现这一点需要一些独特的技术或方法，可以将其描述为快速工程。我们渴望免费与大家分享这些信息。无论您是刚开始学习 Python 还是有其他想要探索的项目，我们都很乐意听到您的想法和反馈。谢谢，我们期待与大家互动！    提交人    /u/Dry-Beyond-1144   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fro2kv/chatgpt4o_prompt_engineering_for_data_analysis_i/</guid>
      <pubDate>Sat, 28 Sep 2024 21:00:30 GMT</pubDate>
    </item>
    <item>
      <title>IT硬件供应经理角色的最佳模型/方法？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1frnnbk/best_modelapproach_for_it_hardware_supply_manager/</link>
      <description><![CDATA[大家好， 作为 IT 硬件供应经理，我负责管理组织内的所有移动设备（生命周期、物流、CMDB、维修、退役），以及保持产品组合的最新状态。 我想改进和自动化流程，并确保我们的文档（手册、任务描述）清晰准确。我还在考虑为我的部门创建一个 AI 助手。 在类似的职位上，哪些方法、工具或策略对您有效？ 提前致谢！    提交人    /u/GipsyLeGendz   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1frnnbk/best_modelapproach_for_it_hardware_supply_manager/</guid>
      <pubDate>Sat, 28 Sep 2024 20:40:38 GMT</pubDate>
    </item>
    <item>
      <title>救命！想学习人工智能来从事我的工作——我该从哪里开始？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1frnbos/help_want_to_learn_ai_for_my_jobwhere_do_i_begin/</link>
      <description><![CDATA[我是一名对 Python 了解有限的软件工程师，我想学习 AI 来提高我的工作技能。我现在不想深入研究创建模型或底层数学和统计数据。相反，我有兴趣利用现有的 AI 模型、RAG 等框架和工具将 AI 有效地集成到我的工作中。 除了常规课程外，我还想在我的 Mac 上尝试一些实际项目，但我不知道从哪里开始。有人可以指导我如何开始吗？ 我应该专注于生成 AI 等领域，还是应该探索其他关键概念？对于我这样的人，您有什么特定的课程或资源推荐吗？    提交人    /u/Confident-Rain6958   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1frnbos/help_want_to_learn_ai_for_my_jobwhere_do_i_begin/</guid>
      <pubDate>Sat, 28 Sep 2024 20:25:38 GMT</pubDate>
    </item>
    <item>
      <title>这里是否发生了过度拟合？</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1frn5ho/is_over_fitting_happening_here/</link>
      <description><![CDATA[我的 training_set _accuracy 约为 99.16%。 在测试 ds 上，我得到了大约 88.98%（大约 90）。我相信这不是过度拟合，但聊天 gpt 和其他 llm，如 Gemini、llama 等，却说不是这样。过度拟合背后的想法是模型对于训练数据非常有效，而对于测试/看不见的数据，它表现非常差。但 88.98 在多标签分类问题上的准确率并不算太差。测试 ds 上的模型分类报告也表明模型表现良好。此外，训练准确率和测试准确率之间的差距并不大。如果测试准确率在 60/50/40% 左右，那么差距就会很大。那么这里实际上是过度拟合吗？希望对此有一些见解    提交人    /u/Good_Minimum_1853   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1frn5ho/is_over_fitting_happening_here/</guid>
      <pubDate>Sat, 28 Sep 2024 20:17:29 GMT</pubDate>
    </item>
    <item>
      <title>使用带修剪的 Optuna 在 PyTorch 中进行超参数优化</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1frmrx6/hyperparameter_optimization_in_pytorch_using/</link>
      <description><![CDATA[       由    /u/BjBodner  提交  [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1frmrx6/hyperparameter_optimization_in_pytorch_using/</guid>
      <pubDate>Sat, 28 Sep 2024 20:00:11 GMT</pubDate>
    </item>
    <item>
      <title>[R] 需要人们玩 Lockdown Protocol 的视频作为测谎 AI 的训练数据</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1frlsfo/r_need_videos_of_people_playing_lockdown_protocol/</link>
      <description><![CDATA[需要 Lockdown Protocol 的流作为 LIE DETECTION 的训练数据 嗨，reddit 的朋友们。我请求你们帮助收集人们玩 LOCKDOWN PROTOCOL 的视频。 我想使用这些视频作为欺骗检测的训练数据。这些视频呈现了大量易于验证、高风险、真实的谎言。如果您有其他社交推理游戏的视频链接（包括我们和所有变体） 请请请链接它们    提交人    /u/Inevitable_Code_222   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1frlsfo/r_need_videos_of_people_playing_lockdown_protocol/</guid>
      <pubDate>Sat, 28 Sep 2024 19:14:35 GMT</pubDate>
    </item>
    <item>
      <title>导师</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1frlcqu/mentor/</link>
      <description><![CDATA[嗨，我是计算机工程专业的大四学生，我的期末研究论文是关于使用机器学习诊断疾病。 由于我的人工智能背景并不先进，所以我需要一些帮助，但我想尽我所能实现这个目标。 因此，如果有人研究过一种机器学习方法来使用语音记录数据集进行诊断，并且愿意提供帮助，我将不胜感激    提交人    /u/Soft_Television_7854   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1frlcqu/mentor/</guid>
      <pubDate>Sat, 28 Sep 2024 18:55:15 GMT</pubDate>
    </item>
    <item>
      <title>免费开源深度学习测试</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1frkdu2/free_open_source_deep_learning_test/</link>
      <description><![CDATA[您好，我是一名深度学习研究员。我已经创建了我的深度学习测试的第一个迭代。这是一个包含 15 个问题的多项选择测试，内容涉及有用/实用的深度学习信息，我发现这些信息在阅读论文或实施想法时很有用。我很乐意收到反馈，以便我可以扩展和改进测试。 支持我们和我们所做工作的最好方式是给我们的仓库加星。 测试链接：https://pramallc.github.io/DeepLearningTest/ 测试仓库：https://github.com/PramaLLC/DeepLearningTest    提交人    /u/PramaLLC   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1frkdu2/free_open_source_deep_learning_test/</guid>
      <pubDate>Sat, 28 Sep 2024 18:10:45 GMT</pubDate>
    </item>
    <item>
      <title>TextGrad 教程 - 用于提示优化的文本梯度下降 [D]</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1frjx8l/textgrad_tutorial_text_gradient_descent_for/</link>
      <description><![CDATA[      分享一个关于 TextGrad 的教程视频，TextGrad 是斯坦福大学一个相当新的文本优化库。他们有一个类似 PyTorch 的框架来评估、计算损失并通过 LLM 提示图提供反馈信号。    提交人    /u/AvvYaa   [link] [comments] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1frjx8l/textgrad_tutorial_text_gradient_descent_for/</guid>
      <pubDate>Sat, 28 Sep 2024 17:50:03 GMT</pubDate>
    </item>
    <item>
      <title>需要帮助寻找去年关于使用 ML/AI 进行语音增强的一些优秀研究论文。</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1frgvju/need_help_finding_some_good_research_papers_on/</link>
      <description><![CDATA[我必须开始撰写关于上述主题的本科论文。我如何获得一些具有良好引用的最新论文。任何帮助都将不胜感激。    提交人    /u/SureIndependence1113   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1frgvju/need_help_finding_some_good_research_papers_on/</guid>
      <pubDate>Sat, 28 Sep 2024 15:32:32 GMT</pubDate>
    </item>
    <item>
      <title>模型如何预测特定时间点的胜率。</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fre5ac/how_can_a_modle_predict_win_rate_at_a_particular/</link>
      <description><![CDATA[      我最近偶然看到了这个视频，视频中这个人解释了为什么 lol 中某些物品的胜率会被夸大，因为某些物品只有当玩家领先时才会购买  为了计算修正值，他使用 ML 模型来计算购买物品时的胜率。  他只是提到了那个模型，但没有提供任何相关信息 我认为训练一个可以预测胜率的模型应该很难，因为胜负只有在最后才确定，所以我很好奇想了解更多。     提交人    /u/Seamen_demon_lord   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fre5ac/how_can_a_modle_predict_win_rate_at_a_particular/</guid>
      <pubDate>Sat, 28 Sep 2024 13:20:08 GMT</pubDate>
    </item>
    <item>
      <title>写给六个月前自己的一封信</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fre362/a_note_to_my_six_month_younger_self/</link>
      <description><![CDATA[大约六个月前，我为自己设定了精通机器学习的目标。在实现这个完全模糊的目标的过程中，我犯了不少错误，经常走错路。我相信我们社区每天都会有新人深入研究机器学习这个话题。为了避免您犯同样的错误，以下是我过去六个月的五大收获：   1. 实施项目 &gt; 观看课程  我注意到，当我实施自己的项目时，我学到的东西最多。思考各个子问题帮助我了解了哪些概念我还没有完全掌握。从那里，我可以在此基础上进行更多研究。 从非常小的项目开始对我有帮助。我想出了小问题和合适的数据，然后尝试自己解决它们。对于初学者来说，这比处理庞大的数据集要好得多。我真的可以推荐它。   2. 第一原理方法（理解模型背后的数学和逻辑）  我经常会跳过数学推导或没有完全参与底层逻辑。然而，我意识到解决这些问题确实很重要。加倍努力确实有所不同。建立在这种逻辑之上的一切几乎都自然而然地实现了。不是开玩笑。   3. 学习最先进的库  就我个人而言，当我知道我目前正在学习的东西正在被大型科技公司使用时，我会更有动力。这就是为什么我现在更有动力学习 PyTorch，尽管我认为 TensorFlow 作为一个整体也很重要。我认识到，不学习所有现有的知识，而是专注于行业标准，这是很有意义的。至少，对我来说是这样。   4. 在现有知识的基础上进行构建（Numpy -&gt; PyTorch）  在深入研究 ML 之前，我已经掌握了 Python 的基础知识（Numpy、Pandas）。当我将 PyTorch 中的函数与 Numpy 进行比较并能够在脑海中转移逻辑时，我的学习进度感觉成倍增加。我强烈建议先在 Numpy 中解决问题，然后在 ML 库中重新创建解决方案。   5. 可视化学习进度和模型  尽管乍一听像是额外的工作，但可视化模型和数据（尤其是在解决简单问题时）非常有价值。人们常说有视觉学习者和非视觉学习者。我认为那是胡说八道。每个人（包括我自己）都可以从可视化他们的 ML 问题和训练进度中受益。   如果我可以和六个月前的自己交谈，我会强调这五点。我希望其中至少有一点对你有帮助。 顺便说一句，如果有人对我当前的小型学习项目感兴趣：我最近先在 Numpy 中构建了一个简单的模型，然后在 PyTorch 中构建了一个简单的模型，以更好地理解 PyTorch 的功能。对于那些感兴趣的人，我会在下面的评论中添加链接。   让我知道在你的 ML 路径上什么对你有用。也许你也可以在未来的项目中为我节省一些时间。    提交人    /u/vtimevlessv   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fre362/a_note_to_my_six_month_younger_self/</guid>
      <pubDate>Sat, 28 Sep 2024 13:16:59 GMT</pubDate>
    </item>
    <item>
      <title>请有人解释一下答案</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1fr9vz0/somebody_please_explain_the_answer/</link>
      <description><![CDATA[        提交人    /u/SmallSoup7223   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1fr9vz0/somebody_please_explain_the_answer/</guid>
      <pubDate>Sat, 28 Sep 2024 08:35:51 GMT</pubDate>
    </item>
    <item>
      <title>机器学习相关的简历审查帖</title>
      <link>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</link>
      <description><![CDATA[请礼貌地将任何关于简历审查的帖子重定向到这里 对于那些正在寻找简历审查的人，请先在 imgur.com 上发布它们，然后将链接作为评论发布，或者甚至先在 /r/resumes 或 r/EngineeringResumes 上发布，然后在此处交叉发布。     提交人    /u/techrat_reddit   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/learnmachinelearning/comments/1d8odje/machinelearningrelated_resume_review_post/</guid>
      <pubDate>Wed, 05 Jun 2024 12:11:43 GMT</pubDate>
    </item>
    </channel>
</rss>