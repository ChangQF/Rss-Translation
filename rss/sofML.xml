<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>标记为机器学习的活跃问题 - 堆栈内存溢出</title>
    <link>https://stackoverflow.com/questions/tagged/?tagnames=machine-learning&sort=active</link>
    <description>来自 stackoverflow.com 的最新 30 条</description>
    <lastBuildDate>Tue, 10 Sep 2024 12:32:49 GMT</lastBuildDate>
    <item>
      <title>zero123 的更大分辨率输出</title>
      <link>https://stackoverflow.com/questions/78969143/bigger-resolution-output-of-zero123</link>
      <description><![CDATA[我在 instantMesh 上下文中使用 zero123，我想知道 zero123 是否有可能输出更大分辨率的图像？
目前分辨率为 320x320，对于从 InstantMesh 的 3d 重建管道获得良好的输出纹理来说，这个分​​辨率有点低。
代码使用方式如下：
import torch
import request
from PIL import Image
from diffusers import DiffusionPipeline, EulerAncestralDiscreteScheduler

# 加载管道
pipeline = DiffusionPipeline.from_pretrained(
&quot;sudo-ai/zero123plus-v1.1&quot;, custom_pipeline=&quot;sudo-ai/zero123plus-pipeline&quot;,
torch_dtype=torch.float16
)

# 随意调整调度程序！
# `timestep_spacing` 参数在旧版本的 `diffusers` 中不受支持
# 因此可能会降低性能
# 我们建议使用 `diffusers==0.20.2`
pipeline.scheduler = EulerAncestralDiscreteScheduler.from_config(
pipeline.scheduler.config, timestep_spacing=&#39;trailing&#39;
)
pipeline.to(&#39;cuda:0&#39;)

# 下载示例图像。
cond = Image.open(requests.get(&quot;https://d.skis.ltd/nrp/sample-data/lysol.png&quot;, stream=True).raw)

# 运行管道！
result = pipeline(cond, num_inference_steps=75).images[0]
# 对于一般物体的一般真实和合成图像
# 通常大约有 28 个推理步骤就足够了
# 对于具有面部等精细细节的图像（真实或动漫）
# 您可能需要 75-100 个步骤来构建细节

result.show()
result.save(&quot;output.png&quot;)
]]></description>
      <guid>https://stackoverflow.com/questions/78969143/bigger-resolution-output-of-zero123</guid>
      <pubDate>Tue, 10 Sep 2024 10:55:23 GMT</pubDate>
    </item>
    <item>
      <title>如何在HuggingFace中组织机器学习项目？</title>
      <link>https://stackoverflow.com/questions/78969051/how-to-organize-a-machine-learning-project-in-huggingface</link>
      <description><![CDATA[虽然我同意没有一种适用于每种用例的“理想”组织方案，但我正在寻找一种标准化的方式来组织 HuggingFace 环境中机器学习 (ML) 项目中编译的代码、脚本、模型和数据。
根据我的经验，机器学习项目包括：

数据：用于训练和评估模型的一个或多个数据集（理想情况下，版本受控）。
模型：ML 模型的权重（同样，版本受控）
代码：用于以下操作的脚本集合：

收集和探索数据；

预处理、聚合数据并创建数据集；和

训练、调整和评估模型。




其他项目可能有其他组件，我有兴趣了解任何其他解决方案。例如，就我而言，我有一个应用程序的源代码，该应用程序利用模型实现特定目标。此应用程序使用 GitHub 进行版本控制。
为了使我的 ML 研究最开放和可重复，我希望将数据集和模型与脚本一起发布。这样，任何人都可以以与我完全相同的方式以最自动化的方式收集数据并训练模型。我发现 HuggingFace 是存储模型和数据集的绝佳场所，尽管无法找到一种结构化的方式将数据和模型脚本包含在各自的存储库中。
目前，我一直将模型和数据集上传到 HuggingFace，但脚本与应用程序源代码一起存储在 GitHub 中。我认为这并不正确，因为脚本与 ML 管道的关系比与后来使用它们的应用程序的关系更密切。]]></description>
      <guid>https://stackoverflow.com/questions/78969051/how-to-organize-a-machine-learning-project-in-huggingface</guid>
      <pubDate>Tue, 10 Sep 2024 10:30:42 GMT</pubDate>
    </item>
    <item>
      <title>Gradcam 与预期结果不符</title>
      <link>https://stackoverflow.com/questions/78968918/gradcam-doesnt-match-with-expected-results</link>
      <description><![CDATA[我为胸部 X 光 (CXR) 图像创建了 GradCAM 可视化，但结果并不如我所料。通常，GradCAM 热图会突出显示整个相关模式，如狗的脸或猫的腿，如下例所示：
我在互联网上看到的任何地方都能看到那些漂亮的热图，它们包裹着应该找到的整个模式
示例：

在这里，您可以清楚地看到模型专注于狗的脸或猫腿后部的图案。这也是人类会解读为猫或狗的部分。
但是，我的 GradCAM 结果看起来不同：

在我的可视化中，倒数第二层（Conv3_1）关注边缘，最后一层（Conv3_2）显示随机点，主要在心脏或胸骨上。尽管如此，我的模型的性能指标确实很好：
我只是假设我的模型只是做出了错误的预测，但准确率约为 96%，模型没有过度拟合，指标非常好
测试准确率：0.9570
测试损失：0.1253
测试 AUC：0.9896
测试精度：0.9719
测试召回率：0.9412

有人能向我解释一下为什么我制作的 gradcam 没有覆盖整个肺部吗？或者病理部位？
它学习的模式是否如此具体，以至于在最后一层只发现一小部分区域？]]></description>
      <guid>https://stackoverflow.com/questions/78968918/gradcam-doesnt-match-with-expected-results</guid>
      <pubDate>Tue, 10 Sep 2024 09:57:16 GMT</pubDate>
    </item>
    <item>
      <title>Prophet 模型如何进行预测？它也能处理损坏的数据吗？</title>
      <link>https://stackoverflow.com/questions/78968204/how-prophet-model-make-predictions-can-it-deal-with-broken-data-too</link>
      <description><![CDATA[我知道 lstm。如果序列长度为 7，那么模型将使用前 7 天的数据来预测第 8 天，然后采用滑动窗口方法。现在我听说了先知模型，它也用于时间序列预测。所以有人能告诉我先知模型如何进行预测吗？如果它是时间序列数据，那么它是否也需要连续的先前数据来进行预测？]]></description>
      <guid>https://stackoverflow.com/questions/78968204/how-prophet-model-make-predictions-can-it-deal-with-broken-data-too</guid>
      <pubDate>Tue, 10 Sep 2024 06:44:57 GMT</pubDate>
    </item>
    <item>
      <title>甜甜圈模型在预测时出现拼写错误</title>
      <link>https://stackoverflow.com/questions/78968086/donut-model-making-spelling-errors-while-predicting</link>
      <description><![CDATA[模型在预测时会随机出现拼写错误和拼写错误
假设单词“Battery”在图像中出现了 2 次，那么它会正确预测并且不会出现拼写错误，但第二次出现时，它会出现拼写错误，如“Batery”或“baery”，只是省略单词和其他错误，例如预测“.1”作为&quot;.I&quot;
我已使用这个在我的自定义数据集上对 naver-clova-ix/donut-base-finetuned-cord-v2 模型进行了微调，现在当我测试模型时，模型正确地预测了结构，我的发票的项目是存在的，但它在预测时会出现拼写错误，有时甚至完全遗漏了项目，尽管我已经提供了充足的数据集。]]></description>
      <guid>https://stackoverflow.com/questions/78968086/donut-model-making-spelling-errors-while-predicting</guid>
      <pubDate>Tue, 10 Sep 2024 06:03:43 GMT</pubDate>
    </item>
    <item>
      <title>调整 GAN 参数的最佳方法是什么？我试过网格搜索，但它的计算成本太高，而且速度很慢</title>
      <link>https://stackoverflow.com/questions/78968083/what-is-the-best-way-to-hypertune-parameters-for-gans-ive-tried-grid-search-bu</link>
      <description><![CDATA[我尝试过网格搜索，但它的计算成本太高，而且速度很慢。如果有其他方法，请告诉我。此外，我的一位同事发现网格搜索并不总能保证 GAN 的最佳参数值。
花费了太多时间，而且整个过程非常困难。]]></description>
      <guid>https://stackoverflow.com/questions/78968083/what-is-the-best-way-to-hypertune-parameters-for-gans-ive-tried-grid-search-bu</guid>
      <pubDate>Tue, 10 Sep 2024 06:02:30 GMT</pubDate>
    </item>
    <item>
      <title>跨多个超市类别树的类别映射</title>
      <link>https://stackoverflow.com/questions/78967341/category-mapping-across-multiple-supermarket-category-trees</link>
      <description><![CDATA[我有来自多家超市的数据，包括他们的产品数据库和按产品描述分类的销售记录。我的数据被组织成一个自定义树结构，有 700 个叶节点和 7 个级别，所有产品都位于这些叶子中。我合作的一些超市有自己的分类，有些多达 2,000 个叶子。
我的目标是将我的类别无缝映射到超市的类别。由于他们想要按照他们的分类标准而不是我的分类标准来获取数据，因此手动映射 40 多家超市是不可行的。
最初，我考虑为每个超市训练一个单独的模型来预测我数据库中的所有描述并重新分类，但管理 40 多个模型并不实​​际。另一种策略是使用来自 neuromind/bert-base-portuguese-cased 模型的嵌入（因为数据是葡萄牙语）。我连接了树的各个层级（例如，食物 - 冷食 - 奶酪 - 穆扎雷拉奶酪），并使用 sklearn.metrics.pairwise 中的余弦相似度来查找超市结构中最相似的类别。然而，结果令人失望，即使有明显相似的类别，类别匹配也经常不准确。
我正在考虑大型语言模型方法（可能使用 LangChain 之类的方法）是否可以改进嵌入过程，或者是否有更好的方法。
是否有人解决过类似的问题，或者您对更有效的方法有什么建议？
def get_embedding(text):
inputs = tokenizer(text, return_tensors=&quot;pt&quot;, padding=True, truncation=True, max_length=512)
with torch.no_grad():
outputs = model(**inputs)
return outputs.last_hidden_​​state.mean(dim=1).squeeze().numpy()
]]></description>
      <guid>https://stackoverflow.com/questions/78967341/category-mapping-across-multiple-supermarket-category-trees</guid>
      <pubDate>Mon, 09 Sep 2024 22:14:57 GMT</pubDate>
    </item>
    <item>
      <title>神经元组织学图像分割的最佳方法</title>
      <link>https://stackoverflow.com/questions/78966320/optimal-methods-for-segmenting-histology-images-of-neurons</link>
      <description><![CDATA[我正在研究分割用 H&amp;E 染色的神经元组织学图像。
我很好奇分割这些图像的最有效方法。
我希望从图像中准确地分割出神经元。
我以前使用过细胞姿势分割，但它似乎对我的数据不太适用。
]]></description>
      <guid>https://stackoverflow.com/questions/78966320/optimal-methods-for-segmenting-histology-images-of-neurons</guid>
      <pubDate>Mon, 09 Sep 2024 16:00:24 GMT</pubDate>
    </item>
    <item>
      <title>在函数中创建 VLLM 对象时会导致内存错误，即使明确清除 GPU 缓存也是如此，只有共享引用才能使代码不会崩溃</title>
      <link>https://stackoverflow.com/questions/78959131/vllm-objects-cause-memory-errors-when-created-in-a-function-even-when-explicitly</link>
      <description><![CDATA[我在 Python 中使用 VLLM 库时遇到了问题。具体来说，当我在函数内部创建 VLLM 模型对象时，我遇到了内存问题，并且无法有效清除 GPU 内存，即使在删除对象并使用 torch.cuda.empty_cache() 之后也是如此。
当我尝试在函数内部实例化 LLM 对象时会出现问题，但如果我在父进程或全局范围内实例化该对象，则不会发生这种情况。这表明 VLLM 在函数中创建和管理对象时存在问题，从而导致内存保留和 GPU 耗尽。
以下是代码的简化版本：
import torch
import gc
from vllm import LLM

def run_vllm_eval(model_name, samples_params, path_2_eval_dataset):
# 在函数中实例化 LLM
llm = LLM(model=model_name, dtype=torch.float16, trust_remote_code=True)

# 在此处运行一些 VLLM 推理或评估（简化）
result = llm.generate([path_2_eval_dataset], samples_params)

# 推理后清理
del llm
gc.collect()
torch.cuda.empty_cache()

# 在此之后，GPU 内存不会被清除正确并导致 OOM 错误
run_vllm_eval()
run_vllm_eval()
run_vllm_eval()

但是
llm = run_vllm_eval2()
llm = run_vllm_eval2(llm)
llm = run_vllm_eval2(llm)

有效。
即使明确删除 LLM 对象并清除缓存后，GPU 内存仍未正确释放，导致在尝试加载或运行同一脚本中的另一个模型时出现内存不足 (OOM) 错误。
我尝试过的方法：

使用 del 删除 LLM 对象。
运行 gc.collect() 以触发 Python 的垃圾集合。
使用 torch.cuda.empty_cache() 清除 CUDA 内存。
确保父进程中没有实例化 VLLM 对象。

当在函数内创建 LLM 对象时，这些似乎都无法解决问题。
问题：

在函数内创建 VLLM 对象时，有人遇到过类似的内存问题吗？
是否有推荐的方法来管理或清除函数中的 VLLM 对象以防止 GPU 内存保留？
在这种情况下，是否存在与标准 Hugging Face 或 PyTorch 模型不同的特定 VLLM 处理技术？
]]></description>
      <guid>https://stackoverflow.com/questions/78959131/vllm-objects-cause-memory-errors-when-created-in-a-function-even-when-explicitly</guid>
      <pubDate>Sat, 07 Sep 2024 00:58:59 GMT</pubDate>
    </item>
    <item>
      <title>自定义模型聚合器 TensorFlow Federated</title>
      <link>https://stackoverflow.com/questions/78835380/custom-model-aggregator-tensorflow-federated</link>
      <description><![CDATA[我正在尝试使用 TensorFlow Federated，使用 FedAvg 算法模拟训练过程。
def model_fn():
# 包装 Keras 模型以用于 TensorFlow Federated
keras_model = get_uncompiled_model()

# 对于联合过程，模型必须是未编译的
return tff.learning.models. functional_model_from_keras(
keras_model,
loss_fn=tf.keras.losses.BinaryCrossentropy(),
input_spec=(
tf.TensorSpec(shape=[None, X_train.shape[1]], dtype=tf.float32),
tf.TensorSpec(shape=[None], dtype=tf.int32)
),
metrics_constructor=collections.OrderedDict(
accuracy=tf.keras.metrics.BinaryAccuracy,
precision=tf.keras.metrics.Precision,
recall=tf.keras.metrics.Recall,
false_positives=tf.keras.metrics.FalsePositives,
false_negatives=tf.keras.metrics.FalseNegatives,
true_positives=tf.keras.metrics.TruePositives,
true_negatives=tf.keras.metrics.TrueNegatives
)
)

trainer = tff.learning.algorithms.build_weighted_fed_avg(
model_fn= model_fn(),
client_optimizer_fn=client_optimizer,
server_optimizer_fn=server_optimizer
)

我想使用自定义权重来聚合客户端的更新，而不是使用它们的样本。我知道 tff.learning.algorithms.build_weighted_fed_avg() 有一个名为 client_weighting 的参数，但唯一接受的值来自类 tff.learning.ClientWeighting，它是一个枚举。
因此，唯一的方法似乎是编写自定义 WeightedAggregator。我尝试按照本教程中的说明编写无加权聚合器，但我无法将其转换为加权聚合器。
这是我尝试做的：
class CustomWeightedAggregator(tff.aggregators.WeightedAggregationFactory):
def __init__(self):
pass

def create(self, value_type, weight_type):

@tff.federated_computation
def initialize(self):
return tff.federated_value(0.0, tff.SERVER)

@tff.federated_computation(
lambda self: self.initialize.type_signature.result,
tff.FederatedType(tff.types.to_type(np.float32), tff.CLIENTS),
tff.FederatedType(tff.types.to_type(np.float32), tff.CLIENTS)
)
def next(self, state, value, weight):
aggregate_value = tff.federated_map(custom_weighted_aggregate, (value, weight))
return state,aggregate_value

@property
def is_weighted(self):
return True

return tff.templates.AggregationProcess(self.initialize, self.next)

我必须更改什么才能使其工作并使用自定义权重？]]></description>
      <guid>https://stackoverflow.com/questions/78835380/custom-model-aggregator-tensorflow-federated</guid>
      <pubDate>Mon, 05 Aug 2024 16:06:48 GMT</pubDate>
    </item>
    <item>
      <title>卷积神经网络（CNN）在决策中使用黑色背景——LIME [关闭]</title>
      <link>https://stackoverflow.com/questions/78640044/convolutional-neural-network-cnn-using-black-background-in-decision-making-l</link>
      <description><![CDATA[我的二元分类卷积神经网络在验证数据上具有非常高的准确率 (&gt;96%)，在测试数据集上的表现也同样出色。然而，当我使用 LIME 可视化图像中对其决策很重要的部分时，它往往会突出显示背景。所以我的问题是：
为什么会这样，以前有人见过吗？
当它在做决定时实际上是看着黑色面具时，它是如何达到 96% 的准确率的？
我在图像上应用黑色面具的原因是，我得到的整个数据集具有完全相同的背景，即白色滚轮，并且正如您从我上传的其中一张图片中看到的那样，该模型在决策过程中严重依赖滚轮，因此我将背景预处理为完全黑色 (0, 0, 0)RGB 像素，但现在模型似乎以某种方式使用了它。
我只是被难住了，非常感谢任何帮助！
模型架构
滚轮问题示例
我尝试了各种架构，其中一些使用 keras 层构建，甚至尝试了预训练的 ResNet50。我还改变了大多数重要的超参数，但行为仍然存在。如果有帮助，我可以提供任何细节。
]]></description>
      <guid>https://stackoverflow.com/questions/78640044/convolutional-neural-network-cnn-using-black-background-in-decision-making-l</guid>
      <pubDate>Wed, 19 Jun 2024 00:05:44 GMT</pubDate>
    </item>
    <item>
      <title>准确度和验证预训练模型的准确度没有改变[关闭]</title>
      <link>https://stackoverflow.com/questions/73032032/accuracy-and-validation-accuracy-of-pretrained-model-is-not-changed</link>
      <description><![CDATA[我有 600 000 张图像，我想使用 keras 对它们进行分类。我只是在灰度图像上尝试预训练模型。我正在尝试使用预训练模型的模型架构，如 resnet50、inceptionv3 等。但模型的准确度和验证准确度没有改变，停留在 67%。我尝试改变网络，应用更多 epoch，也改变预训练模型，但我总是得到相同的结果，比如 67% 的准确度和验证准确度。我不明白为什么我会得到相同的结果。请推荐一些关于如何解决这个问题的想法。这是我的代码。在此 steps_per_epochs = no。图像/批次大小，批次大小为 128。训练数据集中的图像数量为 479369，验证数据集中的图像数量为 136962。这是代码的输出。]]></description>
      <guid>https://stackoverflow.com/questions/73032032/accuracy-and-validation-accuracy-of-pretrained-model-is-not-changed</guid>
      <pubDate>Tue, 19 Jul 2022 06:22:43 GMT</pubDate>
    </item>
    <item>
      <title>我的卷积神经网络过度拟合</title>
      <link>https://stackoverflow.com/questions/59998763/my-convolutional-neural-network-is-overfitting</link>
      <description><![CDATA[我构建了一个简单的卷积神经网络，用于手势图像识别，使用背景减法使手在屏幕上呈现白色形状，背景为黑色。它主要使用 keras Conv2D 构建。我的数据集有 1000 张用于训练的图片和 100 张用于验证和测试的图片。奇怪的是，问题在第一个 epoch 之后立即出现，在此期间模型的损失大幅下降。它通常会在第二个 epoch 开始时从 183 这样的大数字下降到 1。数据集中的所有图片都是使用 cv2 从我自己的手上获取的，但我只用自己的手进行了测试，所以这应该不会有什么问题。如果数据集是问题所在，我尝试获取 3 个不同的数据集，一个使用 cv2 的 Canny 方法，该方法本质上是描绘手的一条线，并将图片的其余部分变为黑色，以查看是否有差异。无论如何，同样的事情继续发生。此外，我在不同的地方添加了多个 Dropout 层来观察效果，​​总是发生同样的事情，即损失急剧减少，并且显示出过度拟合的迹象。我还实现了 EarlyStopping 和多层来查看是否有帮助，但似乎总是会出现相同的结果。
model = Sequential()
model.add(Conv2D(32, (3,3),activation = &#39;relu&#39;,
input_shape = (240, 215, 1)))
model.add(MaxPooling2D((2,2)))
model.add(Dropout(0.25))
model.add(Conv2D(64, (3,3),activation = &#39;relu&#39;))
model.add(Conv2D(64, (3,3),activation = &#39;relu&#39;))
model.add(MaxPooling2D((2,2)))
model.add(Dropout(0.25))
model.add(Conv2D(128, (3,3),activation = &#39;relu&#39;))
model.add(MaxPooling2D((2,2)))
model.add(Dropout(0.25))
model.add(Conv2D(256, (3,3), 激活 = &#39;relu&#39;))
model.add(MaxPooling2D((2,2)))
model.add(Dropout(0.25))
#model.add(Conv2D(256, (3,3), 激活 = &#39;relu&#39;))
#model.add(MaxPooling2D((2,2)))
#model.add(Conv2D(128, (3,3), 激活 = &#39;relu&#39;))
#model.add(MaxPooling2D((2,2)))
#model.add(Conv2D(64, (3,3), 激活 = &#39;relu&#39;))
#model.add(MaxPooling2D((2,2)))
model.add(Flatten())
model.add(Dense(150, 激活 = &#39;relu&#39;))
#model.add(Dropout(0.25))
#model.add(Dense(1000, 激活 = &#39;relu&#39;))
model.add(Dropout(0.75))
model.add(Dense(6, 激活 = &#39;softmax&#39;))
model.summary()
model.compile(optimizer = &#39;adam&#39;, loss = &#39;categorical_crossentropy&#39;,
metrics = [&#39;acc&#39;])
callbacks_list = [EarlyStopping(monitor = &#39;val_loss&#39;, waiting = 10),
ModelCheckpoint(filepath = &#39;model.h6&#39;, monitor = &#39;val_loss&#39;,
save_best_only = True),]

代码中注释的部分是我尝试实施的更改。我还对 Dropout 值和它们的位置进行了很大的改变，但没有什么重大变化。有人能提供一些建议，说明为什么我的模型会这么快过拟合吗？]]></description>
      <guid>https://stackoverflow.com/questions/59998763/my-convolutional-neural-network-is-overfitting</guid>
      <pubDate>Fri, 31 Jan 2020 06:14:18 GMT</pubDate>
    </item>
    <item>
      <title>我怎样才能提高 CNN 的准确性？[关闭]</title>
      <link>https://stackoverflow.com/questions/57834240/how-can-i-improve-my-cnns-accuracy-evolution</link>
      <description><![CDATA[因此，我正在尝试创建一个 CNN，它可以预测胸部 x 射线图像中是否有任何“支撑设备”，但在训练我的模型时，它似乎没有学到任何东西。
我正在使用一个名为“CheXpert”的数据集，它有超过 200,000 张图像可供使用。经过一些“清理”后，最终数据集最终有 100,000 张图像。
就模型而言，我导入了 vgg16 预训练模型的卷积基，并自行添加了 2 个完全连接的层。然后，我冻结了所有卷积基，只训练完全连接的层。这是代码：
from keras.layers import GlobalAveragePooling2D
from keras.models import Model

pretrained_model = VGG16(weights=&#39;imagenet&#39;, include_top=False)

pretrained_model.summary()

for layer in pretrained_model.layers:
layer.trainable = False

x = pretrained_model.output
x = GlobalAveragePooling2D()(x)

dropout = Dropout(0.25)

# 让我们添加一个全连接层
x = Dense(1024,activation=&#39;relu&#39;)(x)
x = dropout(x)
x = Dense(1024,activation =&#39;relu&#39;)(x)
predictions = Dense(1,activation=&#39;sigmoid&#39;)(x)

final_model = Model(inputs=pretrained_model.input, output=predictions)

final_model.compile(loss=&#39;binary_crossentropy&#39;, optimizer=&#39;rmsprop&#39;, metrics=[&#39;accuracy&#39;])

据我所知，正常行为应该是准确率从低开始，然后随着时期的推移而增长。但在这里，它只在相同的值（0.93 和 0.95）之间波动。很抱歉，我无法上传图片来向您展示图表。
总而言之，我想知道准确率的微小差异是否意味着模型没有学到任何东西。
我有一个假设：在数据集的所有 100,000 张图像中，95,000 张带有标签“1”，只有 5,000 张带有标签“0”。我认为，如果将带有“1”的图像减少并使其与带有“0”的图像相等，结果就会改变。]]></description>
      <guid>https://stackoverflow.com/questions/57834240/how-can-i-improve-my-cnns-accuracy-evolution</guid>
      <pubDate>Sat, 07 Sep 2019 13:42:46 GMT</pubDate>
    </item>
    <item>
      <title>什么是 Killed:9 以及如何在 macOS 终端中修复？</title>
      <link>https://stackoverflow.com/questions/51833310/what-is-killed9-and-how-to-fix-in-macos-terminal</link>
      <description><![CDATA[我有一段用于机器学习项目的简单 Python 代码。我有一个相对较大的自发语音数据库。我开始训练我的语音模型。由于这是一个庞大的数据库，我让它连夜工作。早上我醒来时看到终端中出现一个神秘的
Killed: 9
行。没有其他内容。没有其他错误消息或需要处理的内容。代码运行良好约 6 小时，占整个过程的 75%，所以我真的不明白哪里出了问题。
什么是 Killed:9 以及如何修复它？浪费数小时的计算时间非常令人沮丧……
如果这很重要，我正在使用 macOS Mojave 测试版。提前谢谢您！]]></description>
      <guid>https://stackoverflow.com/questions/51833310/what-is-killed9-and-how-to-fix-in-macos-terminal</guid>
      <pubDate>Tue, 14 Aug 2018 03:28:58 GMT</pubDate>
    </item>
    </channel>
</rss>