<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>标记为机器学习的活跃问题 - 堆栈内存溢出</title>
    <link>https://stackoverflow.com/questions/tagged/?tagnames=machine-learning&sort=active</link>
    <description>来自 stackoverflow.com 的最新 30 条</description>
    <lastBuildDate>Sun, 08 Sep 2024 01:17:07 GMT</lastBuildDate>
    <item>
      <title>我是否正确地实现了带有反向传播的感知器？</title>
      <link>https://stackoverflow.com/questions/78961133/am-i-implementing-my-perceptron-with-backpropagation-correctly</link>
      <description><![CDATA[我在课堂上学习了感知器以及如何使用反向传播来训练模型。我目前在实施过程中遇到了麻烦，因为它仅能为我提供 50% 的准确率，而班上大多数同学的准确率都达到 90%。我在实施过程中是否忽略了什么？这是我目前从我查看过的资料中得到的结果。
class Perceptron():
def __init__(self, num_features):
self.num_features = num_features
self.weights = np.random.rand(num_features) * 0.1 # 这将创建一个用零填充的数组，形状为 num_features
self.bias = 0.0

def forward(self, x):
linear = np.dot(x, self.weights) + self.bias
print(linear)
predictions = np.where(linear &gt; 0, 1, 0)
return predictions

def behind(self, x, y, predictions):
errors = y - predictions
self.weights += self.learning_rate * np.dot(x.T, errors)
self.bias += self.learning_rate * np.sum(errors)
return errors

def train(self, x, y, epochs, learning_rate = 0.01):
self.learning_rate = learning_rate
for e in range(epochs):
for i in range(y.shape[0]):
x_i, y_i = x[i], y[i]
prediction = self.forward(x_i)
self.backward(x_i, y_i, prediction)

def assess(self, x, y):
predictions = self.forward(x)
accuracy = np.mean(predictions == y)
return accuracy

到目前为止，我已经尝试了不同的学习率，并询问了班上的其他人，说实话，这并没有真正改变我的实施结果。我期望准确率约为 90%，但实际只有 50%。
编辑：以下是一些示例数据：
 0.77 -1.14 0
-0.33 1.44 0
0.91 -3.07 0
-0.37 -1.91 0
-1.84 -1.13 0
-1.50 0.34 0
-0.63 -1.53​​ 0
-1.08 -1.23 0
0.39 -1.99 0
-1.26 -2.90 0
-5.27 -0.78 0
-0.49 -2.74 0
1.48 -3.74 0
-1.64 -1.96 0
0.45 0.36    0 -1.48 -1.17 0 -2.94 -4.47 0 -2.19 -1.48 0 0.02 -0.02 0 -2.24 -2.12 0 -3.17 -3.69 0 -4.09 1.03 0 -2.41 -2.31 0 -3.45 -0.61 0 -3.96 -2.00 0 - 2.95 -1.16 0 -2.42 -3.35 0 -1.74 -1.10 0 -1.61 -1.28 0 -2.59 -2.21 0 -2.64 -2.20 0 -2.84 -4.12 0 -1.45 -2.26 0 -3.98   -1.05 0 -2.97 -1.63 0 -0.68 -1.52 0 -0.10 -3.43 0 -1.14 -2.66 0 -2.92 -2.51 0 -2.14 -1.62 0 -3.33 -0.44 0 -1.05 -3.85 0 0.38 0.95 0 -0.05 -1。 95 0 -3.20 -0.22 0 -2.26 0.01 0 -1.41 -0.33 0 -1.20 -0.71 0 -1.69 0.80 0 -1.52 -1.14 0 3.88 0.65 1 0.73 2.97 1
    0.83 3.94 1 1.59 1.25 1 3.92 3.48 1 3.87 2.91 1 1.14 3.91 1 1.73 2.80 1 2.95 1.84 1 2.61 2.92 1 2.38 0.90 1 2.30 3.33 1 31 1.85 1 1.56 3.85 1 2.67 2.41 1 1.23 2.54 1 1.33 2.03 1 1.36 2.68 1 2.58 1.79 1 2.40 0.91 1 0.51 2.44    1 2.17 2.64 1 4.38 2.94 1 1.09 3.12 1 0.68 1.54 1 1.93 3.71 1 1.26 1.17 1 1.90 1.34 1 3.13 0.92 1 0.85 1.56 1 1.50 3.93 1 2.95 2.09 1 0.77 2.84 1 1.00 0.46 1 3.19 2.32 1 2.92 2.32 1 2.86 1.35 1 0.97 2.68 1 1.20 1.31 1 1.54 2.02 1
1.65 0.63 1
1.36 -0.22 1
2.63 0.40 1
0.90 2.05 1
1.26 3.54 1
0.71 2.27 1
1.96 0.83 1
2.52 1.83 1
2.77 2.82 1
4.16 3.34 1

在使用感知器模型之前，此代码首先进行随机化，然后分成2部分：原始数据的2/3用于训练，另外1/3用于测试。之后，对训练和测试数据集的前 2 个特征执行 z 分数标准化。
这是我使用该类的方式：
perceptron = Perceptron(num_features = 2)
perceptron.train(combined_x_train[:, :2], combined_x_train[:, 2], epochs = 5, learning_rate=0.1)
accuracy = perceptron.evaluate(x_train, y_train)
print(f&#39;Final Accuracy: {accuracy * 100:.2f}%&#39;)
]]></description>
      <guid>https://stackoverflow.com/questions/78961133/am-i-implementing-my-perceptron-with-backpropagation-correctly</guid>
      <pubDate>Sat, 07 Sep 2024 21:05:33 GMT</pubDate>
    </item>
    <item>
      <title>如何计算 DataFrame 中坐标数量不同的两条路线之间的距离差？在 Python 中</title>
      <link>https://stackoverflow.com/questions/78961128/how-to-calculate-distance-difference-between-two-routes-with-varying-number-of-c</link>
      <description><![CDATA[我有一个包含两列的 DataFrame：一列表示实际路线，另一列表示估计路线。每行包含一个长度不等的坐标 [纬度、经度] 列表。即使是同一条路线，可用点的数量也可能不同。我有 500 个不同路线的示例。如何计算两条路线之间的公里数差异，以确定它们是同一条路线、相似路线还是完全不同的路线？
例如：
data[0][&#39;estimated_route&#39;]=[[-12.11149, -77.04675],
[-12.11145, -77.04671],
[-12.11139, -77.04664],
[-12.11134, -77.04659],
[-12.11123, -77.04648],
[-12.11122, -77.04646],
[-12.11122, -77.04646],
[-12.1118, -77.04589],
[-12.11193, -77.04576]]

data[0][&#39;real_route&#39;]= [[-12.111973, -77.047275],
[-12.111933, -77.047236],
[-12.111811, -77.047122],
[-12.111683, -77.046984]]
]]></description>
      <guid>https://stackoverflow.com/questions/78961128/how-to-calculate-distance-difference-between-two-routes-with-varying-number-of-c</guid>
      <pubDate>Sat, 07 Sep 2024 21:03:24 GMT</pubDate>
    </item>
    <item>
      <title>安装 Snap ML 时出错 | 未找到与 snapml 匹配的发行版</title>
      <link>https://stackoverflow.com/questions/78960743/error-on-installing-snap-ml-no-matching-distribution-found-for-snapml</link>
      <description><![CDATA[danilovpavel@Pauls-MacBook-Pro snapml-examples % pip install snapml
错误：找不到满足要求 snapml 的版本（来自版本：无）
错误：未找到与 snapml 匹配的发行版]]></description>
      <guid>https://stackoverflow.com/questions/78960743/error-on-installing-snap-ml-no-matching-distribution-found-for-snapml</guid>
      <pubDate>Sat, 07 Sep 2024 17:39:40 GMT</pubDate>
    </item>
    <item>
      <title>GNN 中的拉普拉斯矩阵</title>
      <link>https://stackoverflow.com/questions/78960651/the-laplacian-matrix-in-gnn</link>
      <description><![CDATA[我对拉普拉斯矩阵在 GNN 中的作用有点困惑。在经典的 GNN 论文中，例如 GCN 和 GraphSAGE，我们只需要规范化的邻接矩阵进行消息传递。为什么许多论文即使最终没有使用拉普拉斯矩阵，仍然会引入它？]]></description>
      <guid>https://stackoverflow.com/questions/78960651/the-laplacian-matrix-in-gnn</guid>
      <pubDate>Sat, 07 Sep 2024 16:51:11 GMT</pubDate>
    </item>
    <item>
      <title>使用 RandomizedSearchCV 获得最佳成绩[关闭]</title>
      <link>https://stackoverflow.com/questions/78960494/best-score-with-randomizedsearchcv</link>
      <description><![CDATA[我正在尝试使用 RandomizedSearchCV 为以 XGBoost 为估计器的回归模型找到最佳参数。该模型试图预测下一次股价上涨/下跌。对于所有测试，都使用了相同的股票 (AA) 和相同的种子。
这些是已测试的 XGBoost 参数：
grid_params_gbtree = {&#39;booster&#39;: [&#39;gbtree&#39;],
&#39;learning_rate&#39;: [0.01, 0.1, 0.3, 0.0001, 0.5, 0.001],
&#39;n_estimators&#39;: [100, 1, 10, 50, 5]

随机搜索已按以下方式初始化：
clf = RandomizedSearchCV(estimator=reg_xgb,
param_distributions=grid_params_gbtree,
scoring=&#39;neg_mean_absolute_error&#39;,
n_jobs=-1,
n_iter=50,
verbose=1,
cv=3)

如上所示，用于评估参数的指标是负平均绝对值 (MAE)。最佳结果如下：

所有搜索到的参数的最佳得分：
-0.0008637746175044944
所有搜索到的参数的最佳参数：
{&#39;n_estimators&#39;: 100, &#39;learning_rate&#39;: 0.5, &#39;booster&#39;: &#39;gbtree&#39;&gt;

-0.0008637746175044944 是一个很小的值，那么我预计使用具有最佳参数的 XGBoost，该股票的预测涨幅/跌幅将非常接近实际股价。相反，我得到的预测结果比实际结果大得多：

-36.6（实际）189.13945（预测）

此外，如果我自己使用以下方法计算 MAE：
mean_absolute_error(real_y, predict_y)

我得到 225.74，即使我使用 RandomizedSearchCV 找到的最佳参数，这两个值之间的差异也是如此。
为什么 RandomizedSearchCV 得分如此低（-0.0008637746175044944），但如果我使用找到的最佳参数使用 XGBoost 运行测试，预测值与实际值相差甚远？
使用其他股票进行测试并没有太大变化：无论最好的分数。]]></description>
      <guid>https://stackoverflow.com/questions/78960494/best-score-with-randomizedsearchcv</guid>
      <pubDate>Sat, 07 Sep 2024 15:29:19 GMT</pubDate>
    </item>
    <item>
      <title>使用来自 transformers 的 GPT-2 开发生成式 AI 聊天机器人</title>
      <link>https://stackoverflow.com/questions/78960411/developing-a-generative-ai-chatbot-using-gpt-2-from-transformers</link>
      <description><![CDATA[]]></description>
      <guid>https://stackoverflow.com/questions/78960411/developing-a-generative-ai-chatbot-using-gpt-2-from-transformers</guid>
      <pubDate>Sat, 07 Sep 2024 14:42:14 GMT</pubDate>
    </item>
    <item>
      <title>拟合过程中功能模型出现错误[重复]</title>
      <link>https://stackoverflow.com/questions/78960201/getting-error-in-functional-model-during-fitting</link>
      <description><![CDATA[错误 - `output_signature` 必须包含 `tf.TypeSpec` 子类的对象，但发现 &lt;class &#39;list&#39;&gt; 不是。

我正在制作一个功能模型来预测人物图像的年龄和性别
数据集链接 - https://www.kaggle.com/datasets/jangedoo/utkface-new
age = []
gender = []
img_path = []
for file in os.listdir(file_path):
age.append(int(file.split(&#39;_&#39;)[0]))
gender.append(int(file.split(&#39;_&#39;)[1]))
img_path.append(file)

df = pd.DataFrame({&#39;age&#39;:age , &#39;gender&#39;:gender , &#39;img_path&#39;:img_path})

train_df = df.sample(frac = 1 , random_state = 0).iloc[:20000]
test_df = df.sample(frac = 1, random_state=0).iloc[20000:]

# generator

train_datagen = ImageDataGenerator(rescale= 1./255,
rotation_range = 30,
width_shift_range = 0.2,
height_shift_range = 0.2,
sher_range = 0.2,
zoom_range = 0.2,
Horizo​​ntal_flip = True)
test_datagen = ImageDataGenerator(rescale = 1./255)

train_generator = train_datagen.flow_from_dataframe(
dataframe=train_df,
directory=file_path,
x_col=&#39;img_path&#39;,
y_col=[&#39;age&#39;, &#39;gender&#39;], # 仍然指定列以供参考
target_size=(200, 200),
class_mode= &#39;multi_output&#39;,
batch_size=32
)

test_generator = test_datagen.flow_from_dataframe(
dataframe=test_df,
directory=file_path,
x_col=&#39;img_path&#39;,
y_col=[&#39;age&#39;, &#39;gender&#39;],
target_size=(200, 200),
class_mode=&#39;multi_output&#39;, # 此处相同
batch_size=32
)


vggnet = VGG16(include_top = False , input_shape = (200 , 200 , 3))

vggnet = VGG16(include_top = False , input_shape = (200 , 200 , 3))

vggnet.trainable = False
output = vggnet.layers[-1].output

flatten = Flatten()(output)

dense1 = Dense(512 , 激活 = &#39;relu&#39;)(flatten)
dense2 = Dense(512 , 激活 = &#39;relu&#39;)(flatten)

dense3 = Dense(512 , 激活 = &#39;relu&#39;)(dense1)
dense4 = Dense(512 , 激活 = &#39;relu&#39;)(dense2)

output1 = Dense(1 , 激活 = &#39;linear&#39; , name = &#39;age&#39;)(dense3)
output2 = Dense(1 , 激活= &#39;sigmoid&#39; , name = &#39;gender&#39;)(dense4)


model = Model(inputs = vggnet.input , output = [output1,output2])

model.compile(optimizer = &#39;adam&#39; , loss = {&#39;age&#39;:&#39;mae&#39; , &#39;gender&#39;:&#39;binary_crossentropy&#39;} , metrics = {&#39;age&#39;:&#39;mae&#39; , &#39;gender&#39;:&#39;accuracy&#39;},loss_weights = {&#39;age&#39;:1 , &#39;gender&#39;:99})

model.fit(train_generator, batch_size=32, epochs=10, validation_data=test_generator)


错误 - `output_signature` 必须包含属于的子类的对象
`tf.TypeSpec` 但发现 &lt;class &#39;list&#39;&gt; 不是。
]]></description>
      <guid>https://stackoverflow.com/questions/78960201/getting-error-in-functional-model-during-fitting</guid>
      <pubDate>Sat, 07 Sep 2024 13:10:05 GMT</pubDate>
    </item>
    <item>
      <title>使用 imageDataGenerator 对象执行 Keras model.fit 时出错[关闭]</title>
      <link>https://stackoverflow.com/questions/78960164/error-while-executing-keras-model-fit-with-imagedatagenerator-object</link>
      <description><![CDATA[在使用 Cats &amp; 时执行以下代码行时出现错误狗数据集。
EPOCHS = 100
history = model.fit(
train_data_gen,
steps_per_epoch=int(np.ceil(2000 / float(BATCH_SIZE))),
epochs=EPOCHS,
validation_data=val_data_gen,
validation_steps=int(np.ceil(1000 / float(BATCH_SIZE)))
)

错误
Epoch 1/100
/usr/local/lib/python3.10/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:121: UserWarning: 您的 `PyDataset` 类应在其构造函数中调用 `super().__init__(**kwargs)`。 `**kwargs` 可以包括 `workers`、`use_multiprocessing`、`max_queue_size`。不要将这些参数传递给 `fit()`，因为它们将被忽略。
self._warn_if_super_not_called()
20/20 ━━━━━━━━━━━━━━━━━━━━━━━ 17s 311ms/step - 准确度：0.4858 - 损失：0.7865 - val_accuracy：0.5000 - val_loss：0.6925
Epoch 2/100
/usr/lib/python3.10/contextlib.py:153：UserWarning：您的输入数据不足；中断训练。确保您的数据集或生成器至少可以生成 `steps_per_epoch * epochs` 批次。构建数据集时，您可能需要使用 `.repeat()` 函数。
self.gen.throw(typ, value, traceback)
---------------------------------------------------------------------------
AttributeError Traceback (most recent call last)
&lt;ipython-input-22-f495897bdf8d&gt; in &lt;cell line: 2&gt;()
1 EPOCHS = 100
----&gt; 2 history = model.fit(
3 train_data_gen,
4 steps_per_epoch=int(np.ceil(total_train / float(BATCH_SIZE))),
5 epochs=EPOCHS,

1 帧
/usr/local/lib/python3.10/dist-packages/keras/src/backend/tensorflow/trainer.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq)
352 )
353 val_logs = {
--&gt; 354 &quot;val_&quot; + name: val for name, val in val_logs.items()
355 }
356 epoch_logs.update(val_logs)

AttributeError: &#39;NoneType&#39; 对象没有属性 &#39;items&#39;

错误提到输入用尽数据，但步骤大小对于训练和验证数据集都是正确的。
我找到了一些使用 fit_generator 的示例，但该方法在 tensorflow 2.1.0 中已弃用。
有什么解决该问题的建议吗？]]></description>
      <guid>https://stackoverflow.com/questions/78960164/error-while-executing-keras-model-fit-with-imagedatagenerator-object</guid>
      <pubDate>Sat, 07 Sep 2024 12:52:02 GMT</pubDate>
    </item>
    <item>
      <title>高效的 PyTorch 带矩阵到密集矩阵乘法</title>
      <link>https://stackoverflow.com/questions/78959447/efficient-pytorch-band-matrix-to-dense-matrix-multiplication</link>
      <description><![CDATA[问题：在我的某个程序中，我需要计算矩阵乘法 A @ B，其中两个矩阵的大小均为 N x N，但 N 相当大。我推测使用 band_matrix(A, width) @ B 来近似该乘积即可满足需求，其中 band_matrix(A, width) 表示 A 的带状矩阵部分，宽度为 width。例如，width = 0 给出对角矩阵，对角线元素取自 A，而 width = 1 给出以类似方式获取的三对角矩阵。
我的尝试：我尝试提取三对角矩阵，例如，以以下方式：
# 步骤 1：提取主对角线
main_diag = torch.diagonal(A, dim1=-2, dim2=-1) # 形状：[d1, d2, N]

# 步骤 2：提取上对角线（偏移量=1）
upper_diag = torch.diagonal(A, offset=1, dim1=-2, dim2=-1) # 形状：[d1, d2, N-1]

# 步骤 3：提取下对角线(offset=-1)
lower_diag = torch.diagonal(A, offset=-1, dim1=-2, dim2=-1) # 形状：[d1, d2, N-1]

# 步骤 4：重建三对角矩阵
# 主对角线
tridiag = torch.diag_embed(main_diag) # 形状：[d1, d2, N, N]

# 上对角线（移动值以创建第一个上对角线）
tridiag += torch.diag_embed(upper_diag, offset=1)

# 下对角线（移动值以创建第一个下对角线）
tridiag += torch.diag_embed(lower_diag, offset=-1)

但我不确定 tridiag @ B 是否比原始 A 更有效率@ B 或者只是相同的复杂性，因为 Torch 可能不知道 tridiag 的具体结构。理论上，使用三对角矩阵的计算应该快 N 倍。

任何有助于理解 PyTorch 在这种情况下的行为或实施一些替代的 GPU 优化方法的帮助都将不胜感激。]]></description>
      <guid>https://stackoverflow.com/questions/78959447/efficient-pytorch-band-matrix-to-dense-matrix-multiplication</guid>
      <pubDate>Sat, 07 Sep 2024 05:46:17 GMT</pubDate>
    </item>
    <item>
      <title>如何在 Flutter 中实现 flex 委托</title>
      <link>https://stackoverflow.com/questions/78959407/how-to-implement-flex-delegate-in-flutter</link>
      <description><![CDATA[当我尝试使用 python 将模型保存在 .tflite 文件中时，我使用 tf_ops，它以将模型保存在 .tflite 文件中的方式实现 flex 委托。
以下是我的示例代码供参考：
converter = tf.lite.TFLiteConverter.from_keras_model(model)

# 仅使用受支持的 TensorFlow Lite 操作和 Flex 委托

converter.target_spec.supported_ops = \[tf.lite.OpsSet.TFLITE_BUILTINS, tf.lite.OpsSet.SELECT_TF_OPS\]

当我使用 tflite_flutter 包在 Flutter 中加载模型时，它会抛出错误：无法加载模型
供参考的 Flutter 代码。
import &#39;package:flutter/services.dart&#39;;
import &#39;package:tflite_flutter/tflite_flutter.dart&#39;;
import &#39;dart:convert&#39;;

class TFLiteService {
late Interpreter \_interpreter;
\_interpreter = await Interpreter.fromAsset(&#39;assets/ml_simple_rnn.tflite&#39;);
print(&#39;TFLite 模型已成功加载&#39;);
}

我尝试了 tflite_flutter_helper 包，但没有得到预期的结果。]]></description>
      <guid>https://stackoverflow.com/questions/78959407/how-to-implement-flex-delegate-in-flutter</guid>
      <pubDate>Sat, 07 Sep 2024 05:27:57 GMT</pubDate>
    </item>
    <item>
      <title>在函数中创建 VLLM 对象时会导致内存错误，即使明确清除 GPU 缓存也是如此，只有共享引用才能使代码不会崩溃</title>
      <link>https://stackoverflow.com/questions/78959131/vllm-objects-cause-memory-errors-when-created-in-a-function-even-when-explicitly</link>
      <description><![CDATA[我在 Python 中使用 VLLM 库时遇到了问题。具体来说，当我在函数内部创建 VLLM 模型对象时，我遇到了内存问题，并且无法有效清除 GPU 内存，即使在删除对象并使用 torch.cuda.empty_cache() 之后也是如此。
当我尝试在函数内部实例化 LLM 对象时会出现问题，但如果我在父进程或全局范围内实例化该对象，则不会发生这种情况。这表明 VLLM 在函数中创建和管理对象时存在问题，从而导致内存保留和 GPU 耗尽。
以下是代码的简化版本：
import torch
import gc
from vllm import LLM

def run_vllm_eval(model_name, samples_params, path_2_eval_dataset):
# 在函数中实例化 LLM
llm = LLM(model=model_name, dtype=torch.float16, trust_remote_code=True)

# 在此处运行一些 VLLM 推理或评估（简化）
result = llm.generate([path_2_eval_dataset], samples_params)

# 推理后清理
del llm
gc.collect()
torch.cuda.empty_cache()

# 在此之后，GPU 内存不会被清除正确并导致 OOM 错误
run_vllm_eval()
run_vllm_eval()
run_vllm_eval()

但是
llm = run_vllm_eval2()
llm = run_vllm_eval2(llm)
llm = run_vllm_eval2(llm)

有效。
即使明确删除 LLM 对象并清除缓存后，GPU 内存仍未正确释放，导致在尝试加载或运行同一脚本中的另一个模型时出现内存不足 (OOM) 错误。
我尝试过的方法：

使用 del 删除 LLM 对象。
运行 gc.collect() 以触发 Python 的垃圾集合。
使用 torch.cuda.empty_cache() 清除 CUDA 内存。
确保父进程中没有实例化 VLLM 对象。

当在函数内创建 LLM 对象时，这些似乎都无法解决问题。
问题：

在函数内创建 VLLM 对象时，有人遇到过类似的内存问题吗？
是否有推荐的方法来管理或清除函数中的 VLLM 对象以防止 GPU 内存保留？
在这种情况下，是否存在与标准 Hugging Face 或 PyTorch 模型不同的特定 VLLM 处理技术？
]]></description>
      <guid>https://stackoverflow.com/questions/78959131/vllm-objects-cause-memory-errors-when-created-in-a-function-even-when-explicitly</guid>
      <pubDate>Sat, 07 Sep 2024 00:58:59 GMT</pubDate>
    </item>
    <item>
      <title>TypeError：'DataLoader' 对象在 SuperGradients Trainer 中不可下标</title>
      <link>https://stackoverflow.com/questions/78917847/typeerror-dataloader-object-is-not-subscriptable-in-supergradients-trainer</link>
      <description><![CDATA[]]></description>
      <guid>https://stackoverflow.com/questions/78917847/typeerror-dataloader-object-is-not-subscriptable-in-supergradients-trainer</guid>
      <pubDate>Tue, 27 Aug 2024 08:28:38 GMT</pubDate>
    </item>
    <item>
      <title>来自segmentation_models_pytorch 的 Unet 在训练中停滞</title>
      <link>https://stackoverflow.com/questions/78798820/unet-from-segmentation-models-pytorch-stalling-in-training</link>
      <description><![CDATA[我一直在遵循一个关于在自定义数据集上训练分割模型的教程，但它拒绝在训练模型方面取得任何进展。
这是我的模型设置
import fragmentation_models_pytorch as smp
import torch

ENCODER = &#39;efficientnet-b0&#39;
ENCODER_WEIGHTS = &#39;imagenet&#39;
CLASSES = [&#39;ship&#39;]
ACTIVATION = &#39;sigmoid&#39;
DEVICE = torch.device(&#39;cuda:0&#39; if torch.cuda.is_available() else &#39;cpu&#39;)

model = smp.Unet(
coder_name=ENCODER, 
coder_weights=ENCODER_WEIGHTS, 
classes=len(CLASSES), 
activation=ACTIVATION,
).to(DEVICE)

from fragmentation_models_pytorch import utils as smp_utils

loss = smp_utils.losses.DiceLoss()
metrics = [
smp_utils.metrics.IoU(threshold=0.5),
]

optimizer = torch.optim.Adam([ 
dict(params=model.parameters(), lr=0.0001),
])


和 epochs 运行器
train_epoch = smp_utils.train.TrainEpoch(
model, 
loss=loss, 
metrics=metrics, 
optimizer=optimizer,
device=DEVICE,
verbose=True,
)

valid_epoch = smp_utils.train.ValidEpoch(
model, 
loss=loss, 
metrics=metrics, 
device=DEVICE,
verbose=True,
)

并且，当我运行训练，模型只是停留在第一个 epoch 上，没有任何进展
max_score = 0

for i in range(0, 40):

print(&#39;\nEpoch: {}&#39;.format(i))
train_logs = train_epoch.run(train_loader)
valid_logs = valid_epoch.run(valid_loader)

# 执行某些操作（保存模型、更改 lr 等）
if max_score &lt; valid_logs[&#39;iou_score&#39;]:
max_score = valid_logs[&#39;iou_score&#39;]
torch.save(model, &#39;./best_model.pth&#39;)
print(&#39;模型已保存！&#39;)

if i == 25:
optimizer.param_groups[0][&#39;lr&#39;] = 1e-5
print(&#39;将解码器学习率降低至 1e-5！&#39;)

结果：
Epoch：0
train：0%| | 0/3851 [00:00&lt;?, ?it/s]

我这样把它放了 3 个小时，它一点变化都没有
我在 CPU (i7-10710U) 上运行（我知道它比 GPU 慢得多，但我的 GPU (GeForce 1650mq) 不支持 cuda），内存为 32 GB，我之前运行过类似的模型，没有任何问题。
有人能帮帮我吗？也许我漏掉了什么？也许有一个更轻的模型可以在我的系统上运行？
我已经尝试了一些其他设置和模型，YOLOv8 和 YOLOv3 也拒绝训练。]]></description>
      <guid>https://stackoverflow.com/questions/78798820/unet-from-segmentation-models-pytorch-stalling-in-training</guid>
      <pubDate>Fri, 26 Jul 2024 15:14:45 GMT</pubDate>
    </item>
    <item>
      <title>PyTorch“在 DataLoader 工作进程 0 中捕获 IndexError”、“IndexError：数组索引太多”</title>
      <link>https://stackoverflow.com/questions/61900138/pytorch-caught-indexerror-in-dataloader-worker-process-0-indexerror-too-man</link>
      <description><![CDATA[]]></description>
      <guid>https://stackoverflow.com/questions/61900138/pytorch-caught-indexerror-in-dataloader-worker-process-0-indexerror-too-man</guid>
      <pubDate>Tue, 19 May 2020 20:25:06 GMT</pubDate>
    </item>
    <item>
      <title>Pytorch 中的“unsqueeze”起什么作用？</title>
      <link>https://stackoverflow.com/questions/57237352/what-does-unsqueeze-do-in-pytorch</link>
      <description><![CDATA[PyTorch 文档中写道：

返回一个在指定位置插入维度为 1 的新张量。[...]
&gt;&gt;&gt; x = torch.tensor([1, 2, 3, 4])
&gt;&gt;&gt; torch.unsqueeze(x, 0)
tensor([[ 1, 2, 3, 4]])
&gt;&gt;&gt; torch.unsqueeze(x, 1)
tensor([[ 1],
[ 2],
[ 3],
[ 4]])

]]></description>
      <guid>https://stackoverflow.com/questions/57237352/what-does-unsqueeze-do-in-pytorch</guid>
      <pubDate>Sun, 28 Jul 2019 01:43:43 GMT</pubDate>
    </item>
    </channel>
</rss>