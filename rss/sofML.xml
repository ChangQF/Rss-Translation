<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>标记为机器学习的活跃问题 - 堆栈内存溢出</title>
    <link>https://stackoverflow.com/questions/tagged/?tagnames=machine-learning&sort=active</link>
    <description>来自 stackoverflow.com 的最新 30 条</description>
    <lastBuildDate>Fri, 01 Nov 2024 12:32:01 GMT</lastBuildDate>
    <item>
      <title>如何在 PyTorch 中将卷积转换为具有集成偏差的全连接模型</title>
      <link>https://stackoverflow.com/questions/79147359/how-to-convert-a-convolutional-to-a-fully-connected-ones-in-pytorch-with-integra</link>
      <description><![CDATA[如何向 Toepletiz 矩阵添加偏差？
以下方法仅显示如何转换核矩阵，使得
Y = A*X

但我想要类似的东西
Y = A*X + B
]]></description>
      <guid>https://stackoverflow.com/questions/79147359/how-to-convert-a-convolutional-to-a-fully-connected-ones-in-pytorch-with-integra</guid>
      <pubDate>Fri, 01 Nov 2024 08:34:09 GMT</pubDate>
    </item>
    <item>
      <title>在机器学习中，是否应该从训练集和测试集中删除异常值？[关闭]</title>
      <link>https://stackoverflow.com/questions/79147038/should-outliers-be-removed-from-both-training-and-test-sets-in-machine-learning</link>
      <description><![CDATA[我正在研究回归模型，需要对异常值处理有一定了解，特别是关于测试集。我读到过异常值应该只从训练数据中删除，但我想知道这对测试集的准确性和泛化能力有何影响。

将异常值留在测试集中是否有助于避免过度拟合？我想知道保留测试集异常值是否比删除它们更能提高泛化能力。

从训练集和测试集中删除异常值是否会导致数据泄露？从测试集中删除异常值会如何影响模型评估和性能指标？


这是我目前的方法：

将数据分为训练集和测试集。
使用 IQR 方法仅从训练集中删除异常值。
]]></description>
      <guid>https://stackoverflow.com/questions/79147038/should-outliers-be-removed-from-both-training-and-test-sets-in-machine-learning</guid>
      <pubDate>Fri, 01 Nov 2024 05:39:35 GMT</pubDate>
    </item>
    <item>
      <title>根据列数据对表标题进行分类</title>
      <link>https://stackoverflow.com/questions/79147000/classifying-table-headers-from-column-data</link>
      <description><![CDATA[我有一组包含数字和文本数据的 CSV；下面是示例：



公司 ID
公司名称
组 ID
货币
金额
...




8494494
Acme Inc
F942G
EUR
$1.56
...


9283422A
Walmart
XXH3F3
AUD
$5.64
...


...
...
...
...
...
...



我有一组单独的 CSV，其标题可能为标记错误。我想构建分类器来确定另一组中的列是公司 ID、公司名称还是组 ID。
这 3 列中的数据非常复杂，我无法仅使用正则表达式来解决这个问题；但是，从目测来看，我相信可以训练一个简单的分类器来区分它们（并且对其他杂项数据（例如“AUD”）返回 False）。
这里最好使用哪种模型？我考虑过将这些字符串传递给 BERT，然后在嵌入之上构建一个分类器。我也考虑过只在字符级别训练 RNN。
~
PS：我还有两个更复杂的想法：

将这些字符串传递给 NER 模型是否合适？或者说，由于这里没有太多“顺序”信息，这样做是不是有点过头了？
另一个想法是采用“word2vec”方法并尝试创建我自己的自定义嵌入，但使用我的训练数据将不同列的嵌入“推”得彼此远离。
]]></description>
      <guid>https://stackoverflow.com/questions/79147000/classifying-table-headers-from-column-data</guid>
      <pubDate>Fri, 01 Nov 2024 05:09:46 GMT</pubDate>
    </item>
    <item>
      <title>通过 ART2 对音频信号进行在线聚类</title>
      <link>https://stackoverflow.com/questions/79145752/online-clustering-of-audio-signals-via-art2</link>
      <description><![CDATA[我为 ART2 聚类编写了此代码，但它不起作用。我期望输出的是真实值与预测值的图表。需要帮助找出它不起作用的原因以及我可以做些什么来修复它。此外，需要输出准确率超过 90% 的输出。
这是特征生成的代码：
import librosa
import numpy as np
import math
import pandas as pd
from art2 import Art2

def load_audio(file_path):
# 加载音频文件
audio_signal, sample_rate = librosa.load(
file_path, sr=None) # 使用原始采样率
return audio_signal, sample_rate

def extract_features(audio_signal, sample_rate, n_fft):
mfccs = librosa.feature.mfcc(
y=audio_signal, sr=sample_rate, n_mfcc=13, n_fft=n_fft)
mfsc = librosa.feature.melspectrogram(
y=audio_signal, sr=sample_rate, n_mels=40, n_fft=n_fft)
return mfccs, mfsc

def divide_into_frames(audio_signal, frame_size, sample_freq, override):
# 将 frame_size ms 转换为样本
frame_length = int(frame_size * sample_freq / 1000)
hop_size = math.floor(frame_length * (1 - override))
# 创建重叠帧
frames = librosa.util.frame(
audio_signal, frame_length=frame_length, hop_length=hop_size)
return frames.T # 转置以使帧作为行

def main():

# 配置变量
mp3_file = &quot;dataset/trimmed_crowd_talking.mp3&quot;
frame_size = 10 # 每帧的样本数
overlap = 0.1 # 下一帧要移动的样本数

n_fft = 256
# 加载音频并创建帧
audio_signal, sample_rate = load_audio(mp3_file)
frames = divide_into_frames(audio_signal, frame_size, sample_rate, override)

mfccs_list = []
mfsc_list = []

for frame in frames:
mfccs, mfsc = extract_features(frame, sample_rate, n_fft)
mfccs_list.append(mfccs.flatten()) # 展平为 1D 数组
mfsc_list.append(mfsc.flatten()) # 展平为 1D 数组

# 创建 DataFrame
index = np.arange(len(mfccs_list))
# 计算以秒为单位的时间戳
timestamps = (index * (len(frames[0]) / sample_rate)).round(2)
df = pd.DataFrame(mfccs_list, index=index)
df.columns = [f&#39;MFCC_{i}&#39; for i in range(df.shape[1])]

# 添加时间戳
df.insert(0, &#39;Index&#39;, index)
df.insert(1, &#39;Timestamp&#39;, timestamps)

# 添加 MFSC 作为附加列
mfsc_df = pd.DataFrame(mfsc_list, index=index)
mfsc_df.columns = [f&#39;MFSC_{i}&#39; for i in range(mfsc_df.shape[1])]
combined_df = pd.concat([df, mfsc_df], axis=1)

# 保存为 CSV
#combined_df.to_csv(&quot;output.csv&quot;, index=False)

print(combined_df.head())

if __name__ == &quot;__main__&quot;:
main()

这是 ART2 Clustering 的代码：
class Art2:
def __init__(self, max_clusters, vigilance_threshold, creation_buffer_size):
self.max_clusters = max_clusters
self.vigilance_threshold = vigilance_threshold
self.creation_buffer_size = creation_buffer_size
self.num_clusters = 0
self.cluster_weights = []
self.cluster_creation_buffer = 0
return

# 计算到已经存在的簇的曼哈顿距离
def distance_2_clusters(self, input_features):
distances = np.sum(
np.abs(self.cluster_weights - input_features), axis=1)
返回距离

def process_new_sample(self, input_features):
if self.num_clusters &gt; 0：
距离 = self.distance_2_clusters（输入特征）

best_cluster_index = np.argmin（距离）
best_distance = distances[best_cluster_index]

如果best_distance &lt;= self.vigilance_threshold：
self.update_cluster（best_cluster_index，输入特征）
self.cluster_creation_buffer = 0
否则：
self.cluster_creation_buffer += 1

如果self.cluster_creation_buffer &gt;= self.creation_buffer_size：
如果self.num_clusters &lt; self.max_clusters:
self.create_new_cluster(input_features)
else:
print(&quot;已达到最大簇数。&quot;)
self.cluster_creation_buffer = 0

def create_new_cluster(self, input_features):
self.cluster_weights.append(input_features)
self.num_clusters += 1

def update_cluster(self, cluster_index, input_features):
# 简单平均权重更新；您可能希望使用更复杂的方法
self.cluster_weights[cluster_index] = (
self.cluster_weights[cluster_index] + input_features
) / 2

def cluster_data_as_stream():
return

我期望得到准确率超过 90% 的地面实况与预测值之间的图表。]]></description>
      <guid>https://stackoverflow.com/questions/79145752/online-clustering-of-audio-signals-via-art2</guid>
      <pubDate>Thu, 31 Oct 2024 17:23:28 GMT</pubDate>
    </item>
    <item>
      <title>是否可以使用 Candle 从 NV-Embed 获取嵌入？</title>
      <link>https://stackoverflow.com/questions/79145419/is-it-possible-to-get-embeddings-from-nv-embed-using-candle</link>
      <description><![CDATA[我想要做的是一个输出任意输入的嵌入的 CLI 程序。
为此，我想使用嵌入模型进行推理，我选择了 NV-Embed-v2。我选择的框架是 Candle，但我也查看了 Mistral-RS。
基本上，我想做的是这个代码片段：
https://huggingface.co/nvidia/NV-Embed-v2
但使用 Rust 和 Candle。
我尝试从 Mistral Candle 的示例，因为 NV-Embed 的 HF 页面显示：模型详细信息/仅基础解码器 LLM：Mistral-7B-v0.1。
我将原始代码中的模型 ID 替换为 nvidia/NV-Embed-v2，并能够从 Hugging Face 下载权重，但在加载配置时，我得到了这个：
错误：缺少第 101 行第 1 列的字段“vocab_size”

然后我将从 HF 加载的 JSON 配置中的值硬编码到新创建的 candle_transformers::models::mistral::Config 实例中。之后，Mistral::new(&amp;config, vb) 失败，并显示：
错误：找不到张量 model.embed_tokens.weight

有没有办法解决这个问题 — 也许还有其他一些基于 Candle 的开源作品可以作为我的灵感？或者，也许这是一个很容易诊断的常见错误？]]></description>
      <guid>https://stackoverflow.com/questions/79145419/is-it-possible-to-get-embeddings-from-nv-embed-using-candle</guid>
      <pubDate>Thu, 31 Oct 2024 15:55:49 GMT</pubDate>
    </item>
    <item>
      <title>训练 IP-Adapter plus 模型后的推理错误</title>
      <link>https://stackoverflow.com/questions/79140091/inference-error-after-training-an-ip-adapter-plus-model</link>
      <description><![CDATA[我从 https://github.com/tencent-ailab/IP-Adapter 下载了软件包
运行命令来训练 IP-Adapter plus 模型（输入：文本 + 图像，输出：图像）：
accelerate launch --num_processes 2 --multi_gpu --mixed_precision &quot;fp16&quot; \
tutorial_train_plus.py \
--pretrained_model_name_or_path=&quot;stable-diffusion-v1-5/&quot; \
--image_encoder_path=&quot;models/image_encoder/&quot; \
--data_json_file=&quot;assets/prompt_image.json&quot; \
--data_root_path=&quot;assets/train/&quot; \
--mixed_precision=&quot;fp16&quot; \
--resolution=512 \
--train_batch_size=2 \
--dataloader_num_workers=4 \
--learning_rate=1e-04 \
--weight_decay=0.01 \
--output_dir=&quot;out_model/&quot; \
--save_steps=3

训练过程中，出现提示，但训练可以继续：
已删除共享张量 {&#39;adapter_modules.27.to_k_ip.weight&#39;, &#39;adapter_modules.1.to_v_ip.weight&#39;, &#39;adapter_modules.31.to_k_ip.weight&#39;, &#39;adapter_modules.15.to_k_ip.weight&#39;, &#39;adapter_modules.31.to_v_ip.weight&#39;, &#39;adapter_modules.11.to_k_ip.weight&#39;, &#39;adapter_modules.23.to_k_ip.weight&#39;, &#39;adapter_modules.3.to_k_ip.weight&#39;, &#39;adapter_modules.25.to_v_ip.weight&#39;, &#39;adapter_modules.21.to_k_ip.weight&#39;, &#39;adapter_modules.17.to_v_ip.weight&#39;, &#39;adapter_modules.13.to_k_ip.weight&#39;, &#39;adapter_modules.17.to_k_ip.weight&#39;, &#39;adapter_modules.19.to_v_ip.weight&#39;, &#39;adapter_modules.13.to_v_ip.weight&#39;, &#39;adapter_modules.7.to_v_ip.weight&#39;, &#39;adapter_modules.7.to_k_ip.weight&#39;, &#39;adapter_modules.29.to_k_ip.weight&#39;, &#39;adapter_modules.3.to_v_ip.weight&#39;, &#39;adapter_modules.5.to_v_ip.weight&#39;, &#39;adapter_modules.21.to_v_ip.weight&#39;, &#39;adapter_modules.5.to_k_ip.weight&#39;, &#39;adapter_modules.23.to_v_ip.weight&#39;, &#39;adapter_modules.25.to_k_ip.weight&#39;, &#39;adapter_modules.1.to_k_ip.weight&#39;, &#39;adapter_modules.9.to_v_ip.weight&#39;, &#39;adapter_modules.9.to_k_ip.weight&#39;, &#39;adapter_modules.15.to_v_ip.weight&#39;, &#39;adapter_modules.27.to_v_ip.weight&#39;, &#39;adapter_modules.29.to_v_ip.weight&#39;, &#39;adapter_modules.19.to_k_ip.weight&#39;, &#39;adapter_modules.11.to_v_ip.weight&#39;}。这应该没问题，但请检查重新加载时是否收到任何警告

训练完成后，转换权重以生成 ip_adapter.bin，然后使用此文件中的以下模型路径运行推理代码 ip_adapter-plus_demo.py：
base_model_path = &quot;SG161222/Realistic_Vision_V4.0_noVAE&quot;
vae_model_path = &quot;stabilityai/sd-vae-ft-mse&quot;
image_encoder_path = &quot;models/image_encoder&quot;
ip_ckpt = &quot;out_model/demo_plus_checkpoint/ip_adapter.bin&quot;

显示错误：
raise RuntimeError(&#39;Error(s) in loading state_dict for {}:\n\t{}&#39;.format(
RuntimeError: Error(s) in loading state_dict for ModuleList:
state_dict 中缺少键：&quot;1.to_k_ip.weight&quot;, &quot;1.to_v_ip.weight&quot;, &quot;3.to_k_ip.weight&quot;, &quot;3.to_v_ip.weight&quot;, &quot;5.to_k_ip.weight&quot;, &quot;5.to_v_ip.weight&quot;, &quot;7.to_k_ip.weight&quot;, &quot;7.to_v_ip.weight&quot;, &quot;9.to_k_ip.weight&quot;, &quot;9.to_v_ip.weight&quot;, “11.to_k_ip.weight”, “11.to_v_ip.weight”, “13.to_k_ip.weight”, “13.to_v_ip.weight”, “15.to_k_ip.weight”, “15.to_v_ip.weight”, “17.to_k_ip.weight”, “17.to_v_ip.weight”, “19.to_k_ip.weight”, “19.to_v_ip.weight”, “21.to_k_ip.weight”, “21.to_v_ip.weight”, “23.to_k_ip.weight”, “23.to_v_ip.weight”, &quot;25.to_k_ip.weight&quot;, &quot;25.to_v_ip.weight&quot;, &quot;27.to_k_ip.weight&quot;, &quot;27.to_v_ip.weight&quot;, &quot;29.to_k_ip.weight&quot;, &quot;29.to_v_ip.weight&quot;, &quot;31.to_k_ip.weight&quot;, &quot;31.to_v_ip.weight&quot;.

什么步骤出错导致此错误？]]></description>
      <guid>https://stackoverflow.com/questions/79140091/inference-error-after-training-an-ip-adapter-plus-model</guid>
      <pubDate>Wed, 30 Oct 2024 07:32:22 GMT</pubDate>
    </item>
    <item>
      <title>如何对数据框中的单个列进行单列编码？</title>
      <link>https://stackoverflow.com/questions/79114762/how-do-i-onehotencode-a-single-column-in-a-dataframe</link>
      <description><![CDATA[我有一个名为“vehicles”的数据框，它有 8 列。其中 7 列是数字，但名为“Car_name”的列在数据框中是索引 1，是分类的。我需要对其进行编码
我试过这个代码，但不起作用
ohe = OneHotEncoding(categorical_features = [1])

vehicles_enc = ohe.fit_transform(vehicles).toarray()

TypeError: OneHotEncoder.__init__() 获得了一个意外的关键字参数“categorical_features”

然而，这在我使用的 YouTube 视频中运行良好。]]></description>
      <guid>https://stackoverflow.com/questions/79114762/how-do-i-onehotencode-a-single-column-in-a-dataframe</guid>
      <pubDate>Tue, 22 Oct 2024 15:12:04 GMT</pubDate>
    </item>
    <item>
      <title>尝试训练 yolo 自定义模型时，data.yaml 文件中的相对路径出现问题</title>
      <link>https://stackoverflow.com/questions/79075311/issue-with-relative-paths-in-data-yaml-file-when-trying-to-train-yolo-custom-mod</link>
      <description><![CDATA[我正在尝试创建一个训练管道，以使用用户输入的带标签图像来训练自定义 yolov9 模型。
我遇到一个问题，如果我让我的 data.yaml 文件使用相对路径，我会收到错误：
RuntimeError：数据集“OIT_model/customOIT/customdatasetyolo/data.yaml”错误
数据集“OIT_model/customOIT/customdatasetyolo/data.yaml”图像未找到，缺少路径“C:\GitHub\Anomaly_detection_combine\OIT_model\Anomaly_detection_combine\OIT_model\customOIT\customdatasetyolo\Anomaly_detection_combine\OIT_model\customOIT\customdatasetyolo\val”

更奇怪的是，错误路径提及，
&#39;C:\\GitHub\\Anomaly_detection_combine\\OIT_model\\Anomaly_detection_combine\\OIT_model\\customOIT\\customdatasetyolo\\Anomaly_detection_combine\\OIT_model\\customOIT\\customdatasetyolo\\val&#39;

不是存在或正在任何地方请求的路径。实际路径是
&#39;C:\\GitHub\\Anomaly_detection_combine\\OIT_model\\customOIT\\customdatasetyolo\\val&#39;

由于某种原因，它重复了路径的第一部分 3 次。
这是 data.yaml 文件：
path: OIT_model/customOIT/customdatasetyolo
train: OIT_model/customOIT/customdatasetyolo/train
val: OIT_model/customOIT/customdatasetyolo/val
nc: 1
names: [&#39;5&#39;]

这是开始训练的代码：
def train_custom_dataset_yolo(data_path, epochs=100, imgsz=64, verbose=True):
model = YOLO(&quot;OIT_model/yolov9c.pt&quot;)
# 指定训练运行的保存目录
save_dir = &#39;OIT_model/customOIT/yolocustomtrainoutput&#39;
if os.path.exists(save_dir):
for file in os.listdir(save_dir):
file_path = os.path.join(save_dir, file)
if os.path.isfile(file_path) or os.path.islink(file_path):
os.unlink(file_path)
elif os.path.isdir(file_path):
shutter.rmtree(file_path)
os.makedirs(save_dir, exist_ok=True)
model.train(data=data_path, epochs=epochs, imgsz=imgsz, verbose=verbose, save_dir=save_dir)
返回
train_custom_dataset_yolo(&#39;OIT_model/customOIT/customdatasetyolo/data.yaml&#39;, epochs=1,imgsz=64, verbose=True)

然而，非常奇怪的是，当我用绝对路径替换相对路径时，如下所示：
path: C:/GitHub/fix/Anomaly_detection_combine/OIT_model/customOIT/customdatasetyolo
train: C:/GitHub/fix/Anomaly_detection_combine/OIT_model/customOIT/customdatasetyolo/train
val: C:/GitHub/fix/Anomaly_detection_combine/OIT_model/customOIT/customdatasetyolo/val
nc: 1
names: [&#39;5&#39;]

训练没有问题。对于我来说，使用绝对路径不是一个选择，因为这个应用程序需要在其他机器上可重现。]]></description>
      <guid>https://stackoverflow.com/questions/79075311/issue-with-relative-paths-in-data-yaml-file-when-trying-to-train-yolo-custom-mod</guid>
      <pubDate>Thu, 10 Oct 2024 16:13:09 GMT</pubDate>
    </item>
    <item>
      <title>我可以将模型从 MMDetection 提取回 Pytorch 吗？</title>
      <link>https://stackoverflow.com/questions/78927061/can-i-extract-model-from-mmdetection-back-to-pytorch</link>
      <description><![CDATA[我可以从 MMDetection 中提取模型回 Pytorch 吗？
我知道，可以通过 ONNX 进行推理。
也可以进行训练吗？]]></description>
      <guid>https://stackoverflow.com/questions/78927061/can-i-extract-model-from-mmdetection-back-to-pytorch</guid>
      <pubDate>Thu, 29 Aug 2024 09:27:23 GMT</pubDate>
    </item>
    <item>
      <title>带有值向量的回归模型的 pytorch 损失函数</title>
      <link>https://stackoverflow.com/questions/68370248/pytorch-loss-function-for-regression-model-with-a-vector-of-values</link>
      <description><![CDATA[我正在训练 CNN 架构以使用 PyTorch 解决回归问题，其中我的输出是一个包含 25 个值的张量。输入/目标张量可以是全零，也可以是 sigma 值为 2 的高斯分布。4 个样本批次的示例如下：
[[0.13534, 0.32465, 0.60653, 0.8825, 1.0000, 0.88250,0.60653, 0.32465, 0.13534, 0.043937, 0.011109, 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
[0., 0., 0., 0., 0., 0., 0., 0.13534, 0.32465, 0.60653, 0.8825, 1.0000, 0.88250,0.60653, 0.32465, 0.13534, 0.043937, 0.011109, 0., 0., 0., 0., 0., 0., 0., 0.], 0.、0.、0.、0.、0.、0.、0.、0.、0.、0.、0.、0.、0.、0.、0.、0.、0.13534、0.32465、0.60653、0.8825、1.0000、 0.88250,0.60653, 0.32465, 0.13534 ],
[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]

我的问题是如何为模型设计一个损失函数，有效地学习具有 25 个值的回归输出。
我尝试了两种类型的损失，torch.nn.MSELoss() 和 torch.nn.MSELoss()-torch.nn.CosineSimilarity()。它们有点管用。但是，有时网络很难收敛，特别是当有大量样本全为“零”时，这会导致网络输出一个包含所有 25 个小值的向量。
我的问题是，还有其他我们可以尝试的损失吗？]]></description>
      <guid>https://stackoverflow.com/questions/68370248/pytorch-loss-function-for-regression-model-with-a-vector-of-values</guid>
      <pubDate>Tue, 13 Jul 2021 23:15:32 GMT</pubDate>
    </item>
    <item>
      <title>具有元数据的时间序列自动编码器</title>
      <link>https://stackoverflow.com/questions/67141033/time-series-autoencoder-with-metadata</link>
      <description><![CDATA[我正在尝试构建一个自动编码器来检测时间序列数据中的异常。
我的方法基于本教程：https://keras.io/examples/timeseries/timeseries_anomaly_detection/
但我的数据比这个简单的教程更复杂。
我有两个不同的时间序列，来自两个传感器和一些元数据，例如从哪台机器记录了时间序列。
使用普通的 MLP 网络，您可以为时间序列建立一个网络，为元数据建立一个网络，并将它们合并到更高的层中。但是你如何将这些数据用作自动编码器的输入？
你有什么想法、教程链接或我没有找到的论文吗？]]></description>
      <guid>https://stackoverflow.com/questions/67141033/time-series-autoencoder-with-metadata</guid>
      <pubDate>Sat, 17 Apr 2021 17:30:19 GMT</pubDate>
    </item>
    <item>
      <title>多变量时间序列异常检测</title>
      <link>https://stackoverflow.com/questions/64720842/multivariate-time-series-anomaly-detection</link>
      <description><![CDATA[我有一个时间序列数据，类似于下面的示例数据。如您所见，我有四个事件以及不同小时内每个事件的总发生次数。
一小时后，我将获得每个事件的新发生次数，因此我想根据其历史水平判断该事件的发生次数是否异常。
我认为如果我为每个事件构建四个不同的回归很容易，但在现实生活中，我可能会有很多事件，这会降低效率，所以我想知道解决这个问题的最佳方法是什么？我应该尝试什么模型？我读过关于 KNN 的文章，但它不需要分类标签，而我的情况没有？]]></description>
      <guid>https://stackoverflow.com/questions/64720842/multivariate-time-series-anomaly-detection</guid>
      <pubDate>Fri, 06 Nov 2020 19:55:46 GMT</pubDate>
    </item>
    <item>
      <title>pytorch中实现的vgg16的训练loss并没有减少</title>
      <link>https://stackoverflow.com/questions/57605094/the-training-loss-of-vgg16-implemented-in-pytorch-does-not-decrease</link>
      <description><![CDATA[我想在 pytorch 中尝试一些小例子，但训练损失在训练中并没有减少。
这里提供了一些信息：

模型是 vgg16，由 13 个卷积层和 3 个密集层组成。
数据是 pytorch 中的 cifar100。
我选择交叉熵作为损失函数。

代码如下
# encoding: utf-8

import torch
import torch.optim as optim
import torch.nn as nn
import torch.nn. functional as F
import torchvision.transforms as transforms
import torchvision

import numpy as np

class VGG16(torch.nn.Module):
def __init__(self, n_classes):
super(VGG16, self).__init__()

# 构建模型
self.conv1_1 = nn.Conv2d(3, 64, 3, padding=1)
self.conv1_2 = nn.Conv2d(64, 64, 3, padding=1)
self.conv2_1 = nn.Conv2d(64, 128, 3, padding=1)
self.conv2_2 = nn.Conv2d(128, 128, 3, padding=1)
self.conv3_1 = nn.Conv2d(128, 256, 3, padding=1)
self.conv3_2 = nn.Conv2d(256, 256, 3, padding=1)
self.conv3_3 = nn.Conv2d(256, 256, 3, 填充=1)
self.conv4_1 = nn.Conv2d(256, 512, 3, 填充=1)
self.conv4_2 = nn.Conv2d(512, 512, 3, 填充=1)
self.conv4_3 = nn.Conv2d(512, 512, 3, 填充=1)
self.conv5_1 = nn.Conv2d(512, 512, 3, 填充=1)
self.conv5_2 = nn.Conv2d(512, 512, 3, 填充=1)
self.conv5_3 = nn.Conv2d(512, 512, 3, 填充=1)

self.fc6 = nn.Linear(512, 512)
self.fc7 = nn.Linear(512, 512)
self.fc8 = nn.Linear(512, n_classes)

def forward(self, x):
x = F.relu(self.conv1_1(x))
x = F.relu(self.conv1_2(x))
x = F.max_pool2d(x, (2, 2))

x = F.relu(self.conv2_1(x))
x = F.relu(self.conv2_2(x))
x = F.max_pool2d(x, (2, 2))

x = F.relu(self.conv3_1(x))
x = F.relu(self.conv3_2(x))
x = F.relu(self.conv3_3(x))
x = F.max_pool2d(x, (2, 2))

x = F.relu(self.conv4_1(x))
x = F.relu(self.conv4_2(x))
x = F.relu(self.conv4_3(x))
x = F.max_pool2d(x, (2, 2))

x = F.relu(self.conv5_1(x))
x = F.relu(self.conv5_2(x))
x = F.relu(self.conv5_3(x))
x = F.max_pool2d(x, (2, 2))

x = x.view(-1, self.num_flat_features(x))

x = F.relu(self.fc6(x))
x = F.relu(self.fc7(x))
x = self.fc8(x)
返回x

def num_flat_features(self, x):
size = x.size()[1:]

num_features = 1
for s in size:
num_features *= s
return num_features

if __name__ == &#39;__main__&#39;:

BATCH_SIZE = 128
LOG_INTERVAL = 5

# 数据
transform = transforms.Compose([
transforms.ToTensor()
])

trainset = torchvision.datasets.CIFAR100(
root=&#39;./data&#39;,
train=True,
download=True,
transform=transform
)

testset = torchvision.datasets.CIFAR100(
root=&#39;./data&#39;,
train=False,
download=True,
transform=transform
)

trainloader = torch.utils.data.DataLoader(trainset, batch_size=BATCH_SIZE, shuffle=True)
testloader = torch.utils.data.DataLoader(testset, batch_size=BATCH_SIZE, shuffle=False)

# 模型
vgg16 = VGG16(100)
vgg16.cuda()

# 优化器
optimizer = optim.SGD(vgg16.parameters(), lr=0.01)

# 损失
criterion = nn.CrossEntropyLoss()

print(&#39;———— Train Start —————&#39;)
for epoch in range(20):
running_loss = 0.
for step, (batch_x, batch_y) in enumerate(trainloader):
batch_x, batch_y = batch_x.cuda(), batch_y.cuda()

# 
o​​ptimizer.zero_grad()

output = vgg16(batch_x)
loss =标准（输出，batch_y）
损失。向后（）
优化器。步骤（）

running_loss + = loss.item（）

如果步骤 % LOG_INTERVAL == 0：
打印（&#39;[%d，%4d] 损失：%.4f&#39; % (epoch，步骤，running_loss / LOG_INTERVAL))
running_loss = 0。

def test（）：
打印（&#39;———— 测试开始 ————&#39;）
正确 = 0
总计 = 0

# 
使用 torch.no_grad（）：
对于 test_x，test_y 在 testloader 中：
图像，标签 = test_x.cuda（），test_y.cuda（）
输出 = vgg16（图像）
_，预测 = torch.max（输出数据，1）
总计 + = 标签。大小（0）
正确 + = (预测 == 标签).sum（）。item（）

准确率 = 100 * 正确 / 总计
print(&#39;网络准确率为：%.4f %%&#39; % 准确率)
print(&#39;———— 测试完成 ————&#39;)

test()

print(&#39;———— 训练完成 —————&#39;)


损失保持在 4.6060 左右，从未减少。我尝试了不同的学习率，但没有效果。]]></description>
      <guid>https://stackoverflow.com/questions/57605094/the-training-loss-of-vgg16-implemented-in-pytorch-does-not-decrease</guid>
      <pubDate>Thu, 22 Aug 2019 08:27:53 GMT</pubDate>
    </item>
    <item>
      <title>传感器异常检测的最新进展</title>
      <link>https://stackoverflow.com/questions/43565003/state-of-art-for-sensors-anomaly-detection</link>
      <description><![CDATA[我正在研究异常检测问题。我有一个传感器，用于记录偶发性时间序列数据。例如，传感器偶尔会激活 10 秒，并以毫秒为间隔记录值。我的任务是确定记录的模式是否不正常。换句话说，我需要检测该模式与其他记录模式相比的异常情况。
最先进的方法是什么？]]></description>
      <guid>https://stackoverflow.com/questions/43565003/state-of-art-for-sensors-anomaly-detection</guid>
      <pubDate>Sat, 22 Apr 2017 21:48:12 GMT</pubDate>
    </item>
    <item>
      <title>如何计算 R 中的决策树规则</title>
      <link>https://stackoverflow.com/questions/23961445/how-to-count-decision-tree-rules-in-r</link>
      <description><![CDATA[我使用 RPart 构建决策树。我这样做没有问题。但是，我需要了解（或计算）树被拆分了多少次？我的意思是，树有多少条规则（if-else 语句）？
例如：
 X
- - 
if (a&lt;9)- - if(a&gt;=9)
Y H
-
if(b&gt;2)- 
Z

有 3 条规则。 
当我写 summary(model):

summary(model_dt)

调用：
rpart(formula = Alert ~ ., data = train)
n= 18576811 

CP nsplit rel error xerror xstd
1 0.9597394 0 1.00000000 1.00000000 0.0012360956
2 0.0100000 1 0.04026061 0.05290522 0.0002890205

变量重要性
ip.src frame.protocols tcp.flags.ack tcp.flags.reset frame.len 
20 17 17 17 16 
ip.ttl 
` 12 

节点号 1：18576811 个观测值，复杂度参数 = 0.9597394
预测类别 = 是 预期损失 = 0.034032 P（节点） = 1
类别计数：632206 1.79446e+07
概率：0.034 0.966 
左子 = 2（627091 个观测值）右子 = 3（17949720 个观测值）
主要分割：
ip.src 分割为 LLLLLLLRRRLLRR ............ LLRLRLRRRRRRRRRRRRRRRRRR
改进 = 1170831.0，（0 个缺失）

ip.dts 分割为 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL， improve=1013082.0，（0 缺失）
tcp.flags.ctl &lt; 1.5 向右，improve=1007953.0，（2645 缺失）
tcp.flags.syn &lt; 1.5 向右，improve=1007953.0，（2645 缺失）
frame.len &lt; 68 向右，improve= 972871.3，（30 缺失）
代理拆分：
frame.protocols 拆分为 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL，agree=0.995，adj=0.841，（0 拆分）
tcp.flags.ack &lt; 1.5 向右，agree=0.994，adj=0.836，（0 拆分）
tcp.flags.reset &lt; 1.5 向右，同意=0.994，调整=0.836，（0 分割）
frame.len &lt; 68 向右，同意=0.994，调整=0.809，（0 分割）
ip.ttl &lt; 230.5 向右，同意=0.987，adj=0.612，（0 分割）

节点号 2：627091 个观测值
预测类别=否 预期损失=0.01621615 P（节点）=0.03375666
类别计数：616922 10169
概率：0.984 0.016

节点号 3：17949720 个观测值
预测类别=是 预期损失=0.0008514896 P（节点）=0.9662433
类别计数：15284 1.79344e+07
概率：0.001 0.999

如果有人帮助我理解它，我会感激不尽
诚挚的
Eray]]></description>
      <guid>https://stackoverflow.com/questions/23961445/how-to-count-decision-tree-rules-in-r</guid>
      <pubDate>Fri, 30 May 2014 18:46:27 GMT</pubDate>
    </item>
    </channel>
</rss>