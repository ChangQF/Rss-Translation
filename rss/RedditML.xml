<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>机器学习</title>
    <link>https://www.reddit.com/r/MachineLearning/</link>
    <description>此 Reddit 子版块暂时关闭，以抗议 Reddit 终止第三方应用程序，请参阅 /r/ModCoord 和 /r/Save3rdPartyApps 了解更多信息。</description>
    <lastBuildDate>Sun, 25 Feb 2024 03:13:55 GMT</lastBuildDate>
    <item>
      <title>[D] Open AI的Sora是什么？它是如何工作的、用例、替代方案等等</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1azcn61/d_what_is_open_ais_sora_how_it_works_use_cases/</link>
      <description><![CDATA[       由   提交 /u/pythoncoursesonline   [链接] [评论] &lt; /表&gt;]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1azcn61/d_what_is_open_ais_sora_how_it_works_use_cases/</guid>
      <pubDate>Sun, 25 Feb 2024 02:23:42 GMT</pubDate>
    </item>
    <item>
      <title>[D] 拥抱面部加速与闪电织物</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1azck48/d_hugging_face_accelerate_versus_lightning_fabric/</link>
      <description><![CDATA[TL; DR：正如标题所述，我的问题非常简单：使用过这两个库的人，两者的优缺点是什么，您会推荐哪个？ ​ &lt;我不想像 PyTorch Lightning 那样引入抽象，并且希望尽可能多地控制训练循环。这主要是因为我不想重构我的代码以最适合闪电的最佳实践。但是，我仍然想使用多 GPU、多节点和混合精度训练，这两个似乎是最明显的候选者。 ​  拥抱面部加速和Lightning Fabric 从“从 PyTorch 转换”的角度看，两者看起来很相似。指南：  初始化设备对象。 通过库的  包装模型、优化器和数据加载器.setup()/.prepare() 功能。 删除 .to(device) 调用。 &lt; li&gt;更新 .backward() 调用以通过对象反向传播损失。  ​ 所以我的问题是：其中一个比另一个有优势吗？我是否遗漏了任何明显的问题。我没有详细查看他们的文档，所以如果有人使用过这些库，如果您能分享任何经验/建议，那就太好了。谢谢。   由   提交 /u/DaredevilMeetsL   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1azck48/d_hugging_face_accelerate_versus_lightning_fabric/</guid>
      <pubDate>Sun, 25 Feb 2024 02:19:41 GMT</pubDate>
    </item>
    <item>
      <title>[P] 在 Ryzen AI NPU 上运行法学硕士？</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1az5mte/p_running_llms_on_ryzen_ai_npu/</link>
      <description><![CDATA[大家好， 我对机器学习还很陌生，但我最近买了一台内置 Ryzen 的新笔记本电脑AI NPU 和我想看看这个东西能做什么。我下载了驱动程序并尝试了AMD提供的演示，但现在我想尝试在本地运行一个小型LLM模型。 整个过程看起来相当复杂，所以我想知道是否有人已经尝试过这个或知道任何可以提供帮助的东西。 顺便说一句，如果有人对此感兴趣，这就是我到目前为止发现的： 起初我想让它通过 Ollama 或其他东西运行，但他们似乎不支持它，所以我在谷歌上疯狂搜索，我找到的唯一方法是通过 Transformers 库。似乎也不可能直接在其上运行变压器模型，因为它们需要采用特定的格式。据我所知，过程是这样的：  从 Huggingface 下载模型 使用最佳导出器将其导出为 ONNX 格式 将其量化为使用一些校准数据的 RyzenAI 格式 运行它  整个事情非常复杂，但这是我到目前为止所做的： 首先我按照以下概述设置了 Ryzen AI 环境：https://ryzenai.docs.amd.com /en/latest/inst.html . 之后我安装了huggingface变压器和最佳化： https://huggingface.co/docs/transformers/installation https://huggingface.co/docs/optimum/installation  并且还升级了与 AMD Ryzen AI 配合使用的最佳效果 这似乎是将 Transformer 模型转换为 AMD NPU 格式的整个过程https://huggingface.co/mohitsha/transformers-resnet18-onnx-quantized-ryzen/blob/main/quantize.py 这似乎是在 NPU 上运行翻译模型的指南：https://huggingface.co/docs/optimum/main/en/amd/ryzenai/overview 说实话，我还没有尝试过很多东西（我正忙于我的考试😅）但是我遇到了很多错误等等，所以我只是想问是否有人熟悉一些更简单的方法来做到这一点。感谢您提前提供帮助   由   提交/u/Cultural_Somewhere34  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1az5mte/p_running_llms_on_ryzen_ai_npu/</guid>
      <pubDate>Sat, 24 Feb 2024 21:16:21 GMT</pubDate>
    </item>
    <item>
      <title>[D] 广告问题（优化、因果关系、选择正确的目标、Google 购物）</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1az3pou/d_ads_question_optimization_causality_picking_the/</link>
      <description><![CDATA[ 由   提交/u/Daytona116595RBOW   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1az3pou/d_ads_question_optimization_causality_picking_the/</guid>
      <pubDate>Sat, 24 Feb 2024 19:57:47 GMT</pubDate>
    </item>
    <item>
      <title>[D] Layernorm 只是两个投影，可以改进</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1az1bto/d_layernorm_is_just_two_projections_and_can_be/</link>
      <description><![CDATA[我正在考虑如何可视化向量的层范数，并发现它只是在学习参数为空时应用两个投影（如果不是） ，然后他们只需添加重新缩放和平移）。 通过删除平均值，您可以将其投影到超平面上，其中分量的平均值（或总和）为空（例如，在 3D x + y + z = 0 中）然后除以标准差，投影到半径 sqrt(D) 的球体上。 鉴于 Layernorm 的理论目标是使数据按照 D 维度的标准高斯重新缩放，则投影到超平面实际上失去了标准高斯通常使用的一维。 在高维 D 中，由于大数定律应用于 D 维的范数，人们可以用 D 维中的超球面来近似标准高斯分布由此生成的向量（对于一维标准高斯，x_i2 的平均值为 1），因此通过获取点并将它们射入超球体来近似这一点在理论上是有动机的，但减少一维会损失表示能力。 上述主张可以通过注意到以下事实来证明：对于向量 x = (x_1, ..., x_D)，x - (x_1 + ... + x_D)/D = x - 1 mu 与超平面上的正交投影相同，其中 mu = 0（1 是所有 1 的向量，因为我们从每个分量中删除了平均值）。  证明：如果取线性函数 M : RD -&gt; R，M(x)＝mu，则M(x)＝&lt;n，x&gt;/&lt;n，n&gt;对于 n = 1，1 的向量。但是 x - M(x) 1 = x - / n 是正交投影和去除所有分量均值的公式。 然后，对于 x&#39; = x - M(x)，layernorm 变为 x&#39; / sqrt( 1/Dnorm(x&#39;)2 ) = sqrt(D) x&#39; /norm(x&#39;)，半径为 sqrt(D) 的超球面投影。 学习到的参数移动这个超球面并单独缩放组件，在初始化时它们不执行任何操作。 您可以想象，在 3D 中，这对应于在 x + y 平面内绘制半径 sqrt(3) 的圆+ z = 0。在未学习的层范数之后，所有点都会在那里结束，请注意这是一个圆，而不是一个完整的球体。 我认为，考虑到层范数最终会被线性层进一步转换为一个网络中，如果需要，这些层可以进行投影，但像这样，它们没有选择不进行投影。 tl;dr：Layernorm 投影到超平面上，然后投影到半径球体上开方（D）。我声称超平面上的投影是浪费的，并且减少了一个自由度，而这个自由度可以由网络中进一步的线性层来处理。   由   提交 /u/mgostIH   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1az1bto/d_layernorm_is_just_two_projections_and_can_be/</guid>
      <pubDate>Sat, 24 Feb 2024 18:19:11 GMT</pubDate>
    </item>
    <item>
      <title>[R] 2D Matryoshka 句子嵌入 🪆🪆</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1az19nl/r_2d_matryoshka_sentence_embeddings/</link>
      <description><![CDATA[    &lt; /a&gt;  论文：https://arxiv.org/pdf/2402.14776.pdf 📢介绍2D Matryoshka句子嵌入 (2DMSE)  TL;DR OpenAI 使用 Matryoshka 表示学习 (MRL 🪆) 来缩短嵌入向量，为下游任务提供灵活性和效率。但它仍然有一个昂贵的推理阶段。  论文提出 2DMSE 将 MRL 扩展到所有层，显着提高浅层 Transformer 层的嵌入质量。通过 2DMSE，BERT-base 实现了平均。 Spearman 在仅使用一层层的 STS 基准上的相关性得分为 70.09（使用最后一层时为 82.65）。  2DMSE 使嵌入尺寸和模型深度均可配置，提供了极大的灵活性和可扩展性。值得注意的是，它可以将微调后的 BERT-base 模型（12 层，768 维）缩小到与 BERT-small（4 层，512 维）和 BERT-tiny（2 层，128 维）相似的大小，并超越它们！ 📄 https://arxiv.org/abs/2402.14776 𝕏 https://x.com/_zongxi/status/1761074342715371643?s=20  &lt; p&gt;𝕏 https://x.com/_reachsumit/status/1760902388842729672?s=20  𝕏 https://x.com/xmlee97/status/1760879476760834460?s=20   由   提交/u/Prof_Li   [链接] [评论] &lt; /表&gt;]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1az19nl/r_2d_matryoshka_sentence_embeddings/</guid>
      <pubDate>Sat, 24 Feb 2024 18:16:40 GMT</pubDate>
    </item>
    <item>
      <title>[P] [D] 自托管开源模型或使用 chatgpt 等 API</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1ayzxt5/p_d_self_hosting_an_open_source_model_or_using_an/</link>
      <description><![CDATA[开发小型 LLM 应用程序的更好方法是什么， 用例是：提供一些数据（可能包含 PII）并使用LLM从文档中提取某些信息 问题是，如果我使用OpenAI等第三方API，那么我将提供我事先没有任何方式屏蔽的个人信息 另一种选择是在服务器上运行 llm 模型，但模型大小相当大，成本会更高（不确定，但这是我的观点，考虑到它需要体面的资源） 我运行ollama 在我的 8gb mac m2 上使用新的 gemma 模型，响应简单的查询非常慢 那么这两种方法更好的方法是什么，或者是否有其他方法，以及流行的方法现在的市场？   由   提交/u/sjdevelop  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1ayzxt5/p_d_self_hosting_an_open_source_model_or_using_an/</guid>
      <pubDate>Sat, 24 Feb 2024 17:22:25 GMT</pubDate>
    </item>
    <item>
      <title>[N] 来自复制的 ML 项目的自动化脚本集合</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1ayzkb0/n_collection_of_automation_scripts_from/</link>
      <description><![CDATA[嗨！只是分享一些我们在过去几年复制各种 AI/ML 项目时收集的自动化脚本。我们提供了统一的命令行、Python API 和简单的可移植层，以便重用它们来组成新的 AI/ML 项目。我们一直在努力让构建人工智能系统和应用程序变得更加容易 - 非常欢迎提供反馈！   由   提交 /u/gfursin   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1ayzkb0/n_collection_of_automation_scripts_from/</guid>
      <pubDate>Sat, 24 Feb 2024 17:07:31 GMT</pubDate>
    </item>
    <item>
      <title>[P] 使用法学硕士进行文本分类</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1ayx6xf/p_text_classification_using_llms/</link>
      <description><![CDATA[您好，我正在寻找一种解决方案，对分布在 7000 多个标记数据实例中的 10-20 个不同类别进行监督文本分类。我有 xlsx 和 jsonl 格式的数据，但可以轻松转换为所需的任何格式。我也尝试过基本的机器学习技术和深度学习，但我认为由于变压器架构，法学硕士会提供更高的准确性。我正在研究 Gemini 提供的函数调用功能，但它有点复杂。是否有任何好的框架和易于理解的示例可以帮助我对任何法学硕士进行零镜头、少量镜头和微调培训？ Colab 会议将不胜感激。如果需要，我也可以访问 Colab pro。不是任何其他付费服务，但最多可花费 5 美元 (USD)。这是一个个人研究项目，因此预算相当紧张。如果您能指导我找到任何对这项任务有用的资源，我将非常感激。任何 LLM 都可以。 我还研究了通过 ollama 使用自定义 LLM，并能够在 Colab 实例上设置 Mistra 13b 的 6 位量化版本，但还无法使用它进行分类。另外，我认为 Gemini 是我的最佳选择，因为可用的 VRAM 数量有限。即使我可以在 Colab 上临时加载高端模型，我也需要很长时间，经过大量的试验和错误才能使代码正常工作，即使在那之后，也需要很长时间来预测类。也许我们可以使用数据集的子集来实现此目的，但这仍然需要很长时间，而且 Colab 有 12 小时的限制   由   提交/u/Shubham_Garg123  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1ayx6xf/p_text_classification_using_llms/</guid>
      <pubDate>Sat, 24 Feb 2024 15:29:40 GMT</pubDate>
    </item>
    <item>
      <title>[P] 理解、使用和微调 Gemma</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1ayvnno/p_understanding_using_and_finetuning_gemma/</link>
      <description><![CDATA[    /u/seraschka   [链接] [评论] &lt; /表&gt;]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1ayvnno/p_understanding_using_and_finetuning_gemma/</guid>
      <pubDate>Sat, 24 Feb 2024 14:21:37 GMT</pubDate>
    </item>
    <item>
      <title>[R] LoRA+：大型模型的高效低秩自适应</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1ayrfpt/r_lora_efficient_low_rank_adaptation_of_large/</link>
      <description><![CDATA[论文：https:// arxiv.org/abs/2402.12354 代码：https ://github.com/nikhil-ghosh-berkeley/loraplus 摘要：  在本文中，我们展示了Hu 等人最初引入的低秩适应 (LoRA)。 （2021）导致大宽度（嵌入维度）模型的微调不理想。这是因为 LoRA 中的适配器矩阵 A 和 B 以相同的学习率更新。使用大宽度网络的缩放参数，我们证明对 A 和 B 使用相同的学习率并不能实现有效的特征学习。然后我们证明，只需通过为 LoRA 适配器矩阵 A 和 B 设置不同的学习率以及精心选择的比率，即可纠正 LoRA 的这种次优性。我们将此提议的算法称为LoRA+。在我们广泛的实验中，LoRA+ 提高了性能（1-2% 的改进）和微调速度（高达 ~ 2 倍加速），而计算成本与 LoRA 相同。    由   提交 /u/SunsetOneSix   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1ayrfpt/r_lora_efficient_low_rank_adaptation_of_large/</guid>
      <pubDate>Sat, 24 Feb 2024 10:28:28 GMT</pubDate>
    </item>
    <item>
      <title>[D] 与变形金刚相比，曼巴的根本缺点是什么？</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1ayog60/d_what_are_the_fundamental_drawbacks_of_mamba/</link>
      <description><![CDATA[你好！ 我思考这个问题有一段时间了。澄清一下，我并不是指“它尚未经过广泛测试”之类的方面。 “它的可扩展性是不确定的，”或“缺乏工业基础设施。”相反，我有兴趣了解 Transformer 和 Mamba 架构之间的核心差异，特别是这些差异如何使 Mamba 与 Transformers 相比处于劣势。 致以诚挚的问候！ &lt;强&gt;编辑： 据我从您的回答中了解到，变形金刚“更好”与 Mamba 相比，在以下意义上：  Transformers 不会压缩输入。 Transformers 可以处理非顺序数据。 Transformer处理位于输入末尾的指令可能会更好。  编辑 2： 总结一下：&lt; /p&gt;  变形金刚：在更大的环境中进行更多计算，但可以访问更多信息，尽管可能是一些无用的信息 Mamba： Less计算更大的上下文，但访问的信息较少，因此存在丢失信息的风险。    由   提交 /u/Alarmed-Profile5736   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1ayog60/d_what_are_the_fundamental_drawbacks_of_mamba/</guid>
      <pubDate>Sat, 24 Feb 2024 07:11:08 GMT</pubDate>
    </item>
    <item>
      <title>[D] 编写 ML 软件时 - 如何使用 TDD？</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1ayiq45/d_when_writing_ml_software_how_do_you_use_tdd/</link>
      <description><![CDATA[请告诉我是否有更好的子程序。 测试驱动开发。 &lt; p&gt;我已经在 ML 软件上工作了一段时间，我觉得我突然想要更好地遵循 TDD 并尝试将其应用到更细致的 ML 用例中。 有一件事多年来我注意到需求和设计对于我们的工作来说可能是模糊的——我所做的很多事情至少从最简单的设计开始，然后我们依靠迭代和强大的评估框架来证明某些改进是否合理。已实施（如果不能提高性能，为什么要实施任何东西）。在这些类型的原型设计场景中，TDD 可能会成为一个巨大的时间杀手，并且在您确定设计之前有点无用。 不过，当需求明确时，TDD 非常好，所以我正在努力变得更好将其纳入我的武器库中。 您对 TDD 有何看法以及如何/何时使用它？   由   提交 /u/Due-Function4447    reddit.com/r/MachineLearning/comments/1ayiq45/d_when_writing_ml_software_how_do_you_use_tdd/&quot;&gt;[链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1ayiq45/d_when_writing_ml_software_how_do_you_use_tdd/</guid>
      <pubDate>Sat, 24 Feb 2024 02:05:15 GMT</pubDate>
    </item>
    <item>
      <title>[D] 现代降维</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1ayab0e/d_modern_dimensionality_reduction/</link>
      <description><![CDATA[大家好， 我熟悉更经典的降维技术，如 SVD、PCA 和因子分析。但是，有没有一些现代技术或者人们多年来学到的一些技巧可以分享。对于上下文来说，这适用于表格数据。谢谢！   由   提交 /u/MuscleML   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1ayab0e/d_modern_dimensionality_reduction/</guid>
      <pubDate>Fri, 23 Feb 2024 20:08:25 GMT</pubDate>
    </item>
    <item>
      <title>[D] 简单问题主题</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1aob7zi/d_simple_questions_thread/</link>
      <description><![CDATA[请在此处发布您的问题，而不是创建新线程。鼓励其他为问题创建新帖子的其他人在此处发帖！ 帖子将保持活跃状态​​，直到下一篇帖子，因此请在标题中的日期之后继续发帖。 感谢大家回答问题在上一个线程中！   由   提交 /u/AutoModerator   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1aob7zi/d_simple_questions_thread/</guid>
      <pubDate>Sun, 11 Feb 2024 16:00:18 GMT</pubDate>
    </item>
    </channel>
</rss>