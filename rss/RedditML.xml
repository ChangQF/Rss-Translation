<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>机器学习</title>
    <link>https://www.reddit.com/r/MachineLearning/</link>
    <description>此 Reddit 子版块暂时关闭，以抗议 Reddit 终止第三方应用程序，请参阅 /r/ModCoord 和 /r/Save3rdPartyApps 了解更多信息。</description>
    <lastBuildDate>Fri, 19 Jan 2024 01:01:47 GMT</lastBuildDate>
    <item>
      <title>[D] 说话者分类，通过视频识别嘴唇运动</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/19a4u80/d_speaker_diarization_with_video_recognition_of/</link>
      <description><![CDATA[您好！我目前正在使用 Whisperx 进行说话人识别，效果非常好。不过，我记得读到过另一个说话者分类框架，它使用图像识别来识别说话者嘴唇何时移动，以提供更精确的识别。有谁知道这是什么框架吗？我已经找了一整个星期了，但还是找不到。谢谢！   由   提交/u/Fun-Medium8799  /u/Fun-Medium8799 reddit.com/r/MachineLearning/comments/19a4u80/d_speaker_diarization_with_video_recognition_of/&quot;&gt;[链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/19a4u80/d_speaker_diarization_with_video_recognition_of/</guid>
      <pubDate>Thu, 18 Jan 2024 23:53:00 GMT</pubDate>
    </item>
    <item>
      <title>[P] PyTorch 2 内部结构</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/19a1mup/p_pytorch_2_internals/</link>
      <description><![CDATA[嗨，刚刚分享了关于 PyTorch 内部结构的幻灯片，涵盖了 Dynamo、Inductor、ExecuTorch 等最近的项目，我认为这里可能会有一些人感兴趣。 &lt;!-- SC_ON - -&gt;  由   提交 /u/perone   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/19a1mup/p_pytorch_2_internals/</guid>
      <pubDate>Thu, 18 Jan 2024 21:37:58 GMT</pubDate>
    </item>
    <item>
      <title>格斗游戏研究中不断学习MARL[D]</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/19a1c1n/continous_learning_marl_in_fighting_game_research/</link>
      <description><![CDATA[我和我的朋友正在研究在格斗游戏中使用 MARL，其中演员/代理同时提交输入，然后由格斗游戏物理引擎。有许多论文在格斗游戏的背景下讨论 DL / RL / 一些 MARL，但值得注意的是，它们不包含源代码或实际上谈论其方法，而是谈论普遍的发现/见解。 现在我们正在考虑使用 Pytorch（在 CUDA 上运行以提高训练速度）和 Petting Zoo（MARL 体育馆的扩展），特别是使用 AgileRL 库进行超参数优化。我们很清楚，超参数如此之多，当我们试图改进问题时，知道要改变什么是很棘手的。我们设想，我们有 8 个左右的研究游戏引擎实例（我有 10 个核心 CPU）连接到 10 个宠物动物园（可能是敏捷 RL 修改版）训练环境的实例，其中输入/输出在引擎和训练环境，来回。 我想我是在寻求一些关于我们正在使用的工具的一般建议/提示和反馈。如果您知道解决类似问题的特定教科书、GitHub 存储库的研究论文，那可能会非常有帮助。我们有一些关于超参数优化的资源以及一些关于如何摆弄设置的想法，但是仅仅为了进行人工智能学习而设计的项目初始结构/启动代码有点棘手。我们确实有一个 MARL 工作的 Connect 4 训练示例，由 AgileRL 提供。但我们正在寻求将其从依次输入提交改为同时输入提交（这当然是可能的，MARL 用于 MOBA 等实时游戏中）。 您可以向我们提供的任何信息是一种祝福并且有帮助。非常感谢您抽出时间。   由   提交/u/stardoge42  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/19a1c1n/continous_learning_marl_in_fighting_game_research/</guid>
      <pubDate>Thu, 18 Jan 2024 21:25:35 GMT</pubDate>
    </item>
    <item>
      <title>获取标记数据的成本有多大？ [D]</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/199zyfh/how_costly_is_it_to_obtain_labeled_data_d/</link>
      <description><![CDATA[正在做我的主动学习硕士论文。文献中的一个关键点是，主动学习在有大量未标记数据的情况下可能很有用，并且与标记相关的成本很高，因此如果模型可以“选择”一个样本的子集是最“信息丰富”的，然后可以对它们进行标记。 但是，我有点意识到，尽管这种主动学习的东西很有趣并且我可能会继续，但我只是不&#39;不太明白公司中标签数据不可用/成本高昂的现实情况。当然，我知道当我阅读它时，会在某些特定情况下发生这种情况： NLP - 像语音识别这样的任务可能需要对音频进行标记，或者在信息提取中需要注释和语料库中的某些内容来 但是，我正在阅读的文献是 2009 年左右的调查，我想从那时起，像这样的问题就不会真正存在了。所以我想知道有多少次只有一堆未标记的数据等待标记。现在是否还有主动学习的需求？ 我认为我正在“转向”的一个领域可能是在在线“流”数据中寻找主动学习，而我想象的东西并不是这样的。尽快标记。   由   提交/u/Direct-Touch469   reddit.com/r/MachineLearning/comments/199zyfh/how_costly_is_it_to_obtain_labeled_data_d/&quot;&gt;[链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/199zyfh/how_costly_is_it_to_obtain_labeled_data_d/</guid>
      <pubDate>Thu, 18 Jan 2024 20:30:16 GMT</pubDate>
    </item>
    <item>
      <title>[R] 情境感知元学习</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/199yknn/r_contextaware_metalearning/</link>
      <description><![CDATA[arXiv: https:// arxiv.org/abs/2310.10971 OpenReview： https://openreview.net/forum?id=lJYAkDVnRU https： //openreview.net/forum?id=SAu298HU2I 摘要：  像 ChatGPT 这样的大型语言模型表现出了非凡的能力在推理过程中学习新概念，无需任何微调。然而，经过训练以在推理过程中检测新对象的视觉模型无法复制这种能力，而是要么表现不佳，要么需要对类似对象进行元训练和/或微调。在这项工作中，我们提出了一种元学习算法，通过在推理过程中学习新的视觉概念而无需微调来模拟大型语言模型。我们的方法利用冻结的预训练特征提取器，类似于上下文学习，将元学习重新定义为对具有已知标签的数据点和具有未知标签的测试数据点进行序列建模。在 11 个元学习基准中的 8 个上，我们的方法（无需元训练或微调）超过或匹配最先进的算法 P&gt;M&gt;F，该算法在这些基准上进行了元训练基准测试。    由   提交 /u/APaperADay   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/199yknn/r_contextaware_metalearning/</guid>
      <pubDate>Thu, 18 Jan 2024 19:34:05 GMT</pubDate>
    </item>
    <item>
      <title>[R] 令牌混合：通过跨示例聚合实现高效的法学硕士</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/199y7y9/r_mixture_of_tokens_efficient_llms_through/</link>
      <description><![CDATA[论文：https:// arxiv.org/abs/2310.15961 代码：https ://github.com/llm-random/llm-random 博客文章：https://llm-random.github.io/posts/mixture_of_tokens/ 摘要：  尽管专家混合 (MoE) 模型有望增加 Transformer 模型的参数数量，同时保持训练和推理成本，但其应用存在明显的缺点。这些模型的关键策略是，对于每个处理的令牌，最多激活几个专家 - 广泛的前馈层的子集。但这种方法并非没有挑战。匹配专家和代币的操作是离散的，这使得MoE模型容易出现训练不稳定和专家利用率不均匀等问题。旨在解决这些问题的现有技术（例如辅助损失或平衡感知匹配）会导致模型性能较低或更难以训练。针对这些问题，我们提出了代币混合，这是一种完全可微分的模型，它保留了 MoE 架构的优点，同时避免了上述困难。这种方法不是将令牌路由给专家，而是在将不同示例中的令牌提供给专家之前将其混合，从而使模型能够从所有令牌-专家组合中学习。重要的是，可以禁用这种混合，以避免在推理过程中混合不同的序列。至关重要的是，这种方法与屏蔽和因果大语言模型训练和推理完全兼容。  之前的讨论：https://www.reddit.com/r/mlscaling/comments/17ha25s/mixture_of_tokens_efficient_llms_through/ &lt; !-- SC_ON --&gt;  由   提交 /u/APaperADay   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/199y7y9/r_mixture_of_tokens_efficient_llms_through/</guid>
      <pubDate>Thu, 18 Jan 2024 19:19:32 GMT</pubDate>
    </item>
    <item>
      <title>[D] 在前景对象上创建阴影</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/199y7g2/d_creating_shadows_on_foreground_objects/</link>
      <description><![CDATA[我正在尝试计算机视觉并学习基础知识。现在，我正在尝试向 .png 文件中的前景对象添加阴影，然后将其放在浅色背景上。我查找了有关向对象添加阴影的研究论文，但找不到任何论文，除了这个 一篇。似乎也没有任何Python 库可以实现这一点。我想知道为什么。是太难了，还是不需要机器学习？   由   提交 /u/Fluid-Physics-5663   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/199y7g2/d_creating_shadows_on_foreground_objects/</guid>
      <pubDate>Thu, 18 Jan 2024 19:18:56 GMT</pubDate>
    </item>
    <item>
      <title>[P] WhisperSpeech - 开源文本转语音系统</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/199v9kr/p_whisperspeech_an_open_source_texttospeech_system/</link>
      <description><![CDATA[通过反转 Whisper 构建的开源文本转语音系统。  https://github.com/collabora/WhisperSpeech   由   提交/u/eusben  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/199v9kr/p_whisperspeech_an_open_source_texttospeech_system/</guid>
      <pubDate>Thu, 18 Jan 2024 17:17:59 GMT</pubDate>
    </item>
    <item>
      <title>[D] 哪些分析和异常检测可以自动化？</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/199r5jg/d_what_analyses_and_anomaly_detections_could_be/</link>
      <description><![CDATA[我正在开发神经网络调试工具。目前它对于可视化和深入的手动分析很有用，这是张量板和其他工具所缺乏的。 我想扩展它以自动执行许多常见的分析和异常检测，并且我&#39;我正在寻找建议。 它是如何工作的： 您在具有相似任务和不同超参数的相似网络上运行了多次试验。该工具记录所有相关数据并自动检测诸如“梯度消失”之类的异常情况。或“损失具有异常高的方差”。 在第二步中，它在每个试验的超参数与这些试验中检测到的异常之间执行相关性分析。然后，它会为每个具有统计意义的发现生成一个警告列表。例如：  “学习率高于 3e-4 的试验中，有 30% 的梯度消失，而学习率低于 3e-4 的试验中，梯度消失的比例为 0%。” &lt; li&gt;“50% 的架构变体 X 试验在损失方面具有异常高的方差，而其他架构变体的试验只有 10%。”  有大量警告，例如这些自动生成的内容可以让您非常快速地识别错误。此外，如果没有生成警告，那么您可以对模型的稳定性更有信心。 当然，许多警告也可能是不值得调查的误报，但我认为这更好无缘无故地被警告，而不是错过一个真正重要的问题。 你觉得这个想法怎么样？ 你认为什么类型的异常最有意义？寻找？   由   提交 /u/Smart-Emu5581   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/199r5jg/d_what_analyses_and_anomaly_detections_could_be/</guid>
      <pubDate>Thu, 18 Jan 2024 14:18:06 GMT</pubDate>
    </item>
    <item>
      <title>[R] EPU-CNN：用于可解释计算机视觉的广义加法 CNN</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/199qw5i/r_epucnn_generalized_additive_cnn_for/</link>
      <description><![CDATA[论文：https:/ /www.nature.com/articles/s41598-023-38459-1 代码：https ://github.com/innoisys/EPU-CNN 摘要：卷积神经网络（CNN）模型在高风险领域的采用因无法满足社会的需求而受到阻碍。决策的透明度。到目前为止，已经出现了越来越多的方法来开发可通过设计解释的 CNN 模型。然而，此类模型无法在保持良好性能的同时提供符合人类感知的解释。在本文中，我们通过一种新颖的通用框架来应对这些挑战，该框架用于实例化本质上可解释的 CNN 模型，称为 E pluribus unum 可解释 CNN (EPU-CNN)。 EPU-CNN 模型由 CNN 子网络组成，每个子网络接​​收输入图像的不同表示，表达感知特征，例如颜色或纹理。 EPU-CNN 模型的输出由分类预测及其解释（根据输入图像不同区域感知特征的相对贡献）组成。 EPU-CNN 模型已在各种公开可用的数据集以及贡献的基准数据集上进行了广泛的评估。医学数据集用于证明 EPU-CNN 在医学风险敏感决策中的适用性。实验结果表明，EPU-CNN 模型可以实现与其他 CNN 架构相当或更好的分类性能，同时提供人类可感知的解释。    由   提交/u/ashenone420  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/199qw5i/r_epucnn_generalized_additive_cnn_for/</guid>
      <pubDate>Thu, 18 Jan 2024 14:05:30 GMT</pubDate>
    </item>
    <item>
      <title>[R] EarthPT：时间序列变压器基础模型</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/199q0bc/r_earthpt_a_time_series_transformer_foundation/</link>
      <description><![CDATA[想要分享 EarthPT 的代码版本，这是一个在零样本设置下预测未来卫星观测的模型！我是第一作者，所以请向我提出任何问题。 EarthPT 是一个 7 亿参数解码变压器基础模型，以自回归自监督方式训练，并专门针对 EO 用例开发头脑。 EarthPT 可以准确预测未来 400-2300 nm 范围内的卫星观测结果（我们发现了六个月！）。 EarthPT 学到的嵌入包含语义上有意义的信息，可用于下游任务，例如作为高度精细的动态土地利用分类。 对我来说最酷的收获是 EO 数据在理论上为我们提供了千万亿的训练标记。因此，如果我们假设 EarthPT 遵循类似于大型语言模型 (LLM) 导出的神经缩放定律，那么目前对于缩放 EarthPT 和其他类似的“大型观测模型”没有数据强加的限制。(!) 代码：https://github.com/aspiaspace/EarthPT 论文：https://arxiv.org/abs/2309.07207   由   提交/u/Smith4242   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/199q0bc/r_earthpt_a_time_series_transformer_foundation/</guid>
      <pubDate>Thu, 18 Jan 2024 13:21:19 GMT</pubDate>
    </item>
    <item>
      <title>[D] OpenAI 如何增加 GPT-4 迭代的上下文长度？他们是否从头开始重新训练 GPT-4-1106？或者是稀疏注意力、分块等技术的更黑客组合？</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/199n479/d_how_did_openai_increase_context_length_of_the/</link>
      <description><![CDATA[正如标题所述，开始思考 GPT-4 衍生模型及其制作方式。我知道事情发展得很快，而且 OpenAI 绝不是“开放”的，但是关于它是如何完成的猜测是什么？ 我不了解 LLM 进展的所有最新细节，但来自根据我对注意力机制的理解，通常你必须从头开始重新训练变压器以增加上下文大小。 但如果是这样的话，他们是否也必须重做所有 RLHF？或者是否有针对 RLHF 步骤的高效迁移学习技术？ 我很想看到一些将 GPT-4 迭代的评估相互比较的论文（如果您知道的话可以链接）。即使假设 RLHF 是完全可移植的，我们是否仍然期望 GPT-4 系列中的模型之间存在可测量的差异？ 我想知道这些模型之间是否存在任何有洞察力的性能怪癖，例如对于编码任务，32k 0613 模型的性能可能比 8k 基本模型更好，但 128k 1106 比 0613 差，因为在给定相同数量的参数、相同的训练数据等的情况下，上下文大小的回报会下降。   由   提交 /u/great_waldini   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/199n479/d_how_did_openai_increase_context_length_of_the/</guid>
      <pubDate>Thu, 18 Jan 2024 10:28:18 GMT</pubDate>
    </item>
    <item>
      <title>[D]本文的分区是否会导致数据泄露？</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/199l2m9/d_does_this_papers_partitioning_cause_data_leakage/</link>
      <description><![CDATA[我最近对 ​​这项研究。总而言之，他们使用文本嵌入和梯度提升来根据财报电话会议记录来预测 CEO 性格得分。他们分析了约 200 位首席执行官，将每位首席执行官的电话分为多个部分以增加数据点。然而，每位 CEO 都会出现在训练集和验证集中，并具有不同的通话片段。在我看来，这应该会导致数据泄漏，因为该模型可能会发现个别首席执行官语言使用的特殊性，而不是底层数据生成过程的模式。您对此有何看法？   由   提交/u/Expective_Charity293  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/199l2m9/d_does_this_papers_partitioning_cause_data_leakage/</guid>
      <pubDate>Thu, 18 Jan 2024 08:03:13 GMT</pubDate>
    </item>
    <item>
      <title>[R] AlphaGeometry：奥林匹克级几何人工智能系统</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/19932kw/r_alphageometry_an_olympiadlevel_ai_system_for/</link>
      <description><![CDATA[博客：https://deepmind.google/discover/blog/alphageometry-an-olympiad-level-ai-system-for-geometry/ 论文：https://www.nature.com/articles/s41586-023-06747-5 Github：https://github.com/google-deepmind/alphageometry 摘要：  在奥林匹克级别证明数学定理代表着人类水平自动推理的一个显着里程碑，因为它们在世界上最优秀的大学预科数学人才中被认为是困难的。然而，由于将人类证明转换为机器可验证格式的成本高昂，当前的机器学习方法不适用于大多数数学领域。对于几何来说，这个问题更为严重，因为其独特的转换挑战，导致训练数据严重匮乏。我们提出了 AlphaGeometry，这是欧几里得平面几何的定理证明器，它通过综合不同复杂程度的数百万个定理和证明来回避人类演示的需要。 AlphaGeometry 是一个神经符号系统，它使用神经语言模型，在我们的大规模合成数据上从头开始训练，引导符号推演引擎通过具有挑战性的问题的无限分支点。在包含 30 个最新奥林匹克级别问题的测试集上，AlphaGeometry 解决了 25 个问题，超越了之前仅解决了 10 个问题的最佳方法，接近了国际数学奥林匹克 (IMO) 金牌得主的平均表现。值得注意的是，AlphaGeometry 产生了人类可读的证明，在人类专家评估下解决了 IMO 2000 和 2015 中的所有几何问题，并在 2004 年发现了翻译后的 IMO 定理的广义版本。 &lt;!-- SC_ON - -&gt;  由   提交 /u/RobbinDeBank   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/19932kw/r_alphageometry_an_olympiadlevel_ai_system_for/</guid>
      <pubDate>Wed, 17 Jan 2024 18:01:17 GMT</pubDate>
    </item>
    <item>
      <title>[D] 简单问题主题</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/196j1w0/d_simple_questions_thread/</link>
      <description><![CDATA[请在此处发布您的问题，而不是创建新线程。鼓励其他为问题创建新帖子的其他人在此处发帖！ 帖子将保持活跃状态​​，直到下一篇帖子，因此请在标题中的日期之后继续发帖。 感谢大家回答问题在上一个线程中！   由   提交 /u/AutoModerator   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/196j1w0/d_simple_questions_thread/</guid>
      <pubDate>Sun, 14 Jan 2024 16:00:18 GMT</pubDate>
    </item>
    </channel>
</rss>