<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>机器学习</title>
    <link>https://www.reddit.com/r/MachineLearning/</link>
    <description>此 Reddit 子版块暂时关闭，以抗议 Reddit 终止第三方应用程序，请参阅 /r/ModCoord 和 /r/Save3rdPartyApps 了解更多信息。</description>
    <lastBuildDate>Tue, 13 Feb 2024 12:22:44 GMT</lastBuildDate>
    <item>
      <title>[2402.07901] FAST：加速 Transformer 的可分解注意力</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1aprsv9/240207901_fast_factorizable_attention_for/</link>
      <description><![CDATA[ 由   提交/u/Elven77AI   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1aprsv9/240207901_fast_factorizable_attention_for/</guid>
      <pubDate>Tue, 13 Feb 2024 12:00:51 GMT</pubDate>
    </item>
    <item>
      <title>[D] 计算文本和标签之间对齐的想法</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1apotgm/d_ideas_to_calculate_alignment_between_text_and/</link>
      <description><![CDATA[我正在研究预测广告点击率的模型。每个广告都有一个文本，并发送给给定客户的特定用户群（使用客户的移动应用程序）。每个客户端都可以创建代表兴趣的可能标签列表，个人用户可以在应用程序中选择相关标签。 标签由客户端为应用程序指定，并且可以是任意的，例如“护肤”、“食品”、“健康和药物”它们可以是多语言的，并且可以将任意数量的标签分配给给定的文本（也可以是任何语言）。 我想计算给定客户的文本和标签之间的对齐情况，以获得“给定广告文本与某人的兴趣的相关程度如何”的分数。到目前为止我的想法是： - 将标签合并到带有逗号的文本中 - 在对（广告文本、标签文本）上使用句子转换器来获得相似度分数 我发现一个问题，标签的顺序会以这种方式起作用。我可以分别计算每个标签和文本的相似性，但这会a）大大增加计算成本b）不会使用标签之间的相似性/协同作用，例如兼具“护肤”功能和“baby_products”标签比“护肤”更具体。和“钓鱼”。 这有意义吗？您会考虑其他方法吗？   由   提交/u/qalis  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1apotgm/d_ideas_to_calculate_alignment_between_text_and/</guid>
      <pubDate>Tue, 13 Feb 2024 08:36:50 GMT</pubDate>
    </item>
    <item>
      <title>[R]与向量相比，PFAS 可能是更好的单词嵌入空间，甚至可能更高的计算效率</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1apln6p/rpfas_might_be_a_better_embedding_space_for_words/</link>
      <description><![CDATA[https://huggingface.co/blog/TuringsSolutions /pfafresearch 所以这个博客引起了大多数人的注意，但基本上与向量相比，它捕获了更多的单词信息，实际上，当放大时，它可能会比向量更好。与向量相比，它具有更多的维度。其他几何表示形式也正在研究中，例如三角形空间、正方形空间等，以找到单词关系的最佳几何编码，与向量相比，这种编码可能更好地建模信息。它在某些基准测试中的得分略有提高，因此作为概念证明，它似乎确实有效。从本质上讲，它的工作原理是将单词转换为分形样式的数字嵌入，以捕获更丰富的信息。 https://arxiv。 org/abs/2402.06184 具有讽刺意味的是，最近训练也被可视化为分形，因此 word2fractal 风格的嵌入过程也被理论化也就不足为奇了。    由   提交/u/TheCrazyAcademic   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1apln6p/rpfas_might_be_a_better_embedding_space_for_words/</guid>
      <pubDate>Tue, 13 Feb 2024 05:13:48 GMT</pubDate>
    </item>
    <item>
      <title>[2402.07839]通过最佳传输实现元剪枝</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1apl6im/240207839_towards_metapruning_via_optimal/</link>
      <description><![CDATA[ 由   提交/u/Elven77AI   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1apl6im/240207839_towards_metapruning_via_optimal/</guid>
      <pubDate>Tue, 13 Feb 2024 04:49:48 GMT</pubDate>
    </item>
    <item>
      <title>[P] 您将如何训练序列结束预测模型？</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1apk6mc/p_how_would_you_train_a_endofsequence_prediction/</link>
      <description><![CDATA[所以我试图让模型预测序列结尾，例如“你今天好吗？”我出去散步了，感觉棒极了！”，目标是预测“棒极了！”是序列中正确的最后一个单词。我现在正在通过进行二元分类来接近它，负样本是正样本的子序列，因此在这种情况下负样本将是[“怎么样”，“怎么样”，“你怎么样”，.. .， &quot;今天怎么样？我出去散步，感觉很不错”]。我认为不幸的是，这使得总数据中 3% 是正样本，97% 是负样本，因此模型总是被激励去预测负样本，以达到 97%。有哪些方法可以解决这个问题？或者有没有更好的方法来表达这个问题来避免这种情况？你们在解决这样的问题时有什么办法吗？   由   提交 /u/DolantheMFWizard   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1apk6mc/p_how_would_you_train_a_endofsequence_prediction/</guid>
      <pubDate>Tue, 13 Feb 2024 03:57:49 GMT</pubDate>
    </item>
    <item>
      <title>[P] 跟踪医疗保健领域会议截止日期</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1apgsz0/p_tracking_healthcare_domain_conference_deadlines/</link>
      <description><![CDATA[        由   提交 /u/aadityaura   [链接] [评论] &lt; /表&gt;]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1apgsz0/p_tracking_healthcare_domain_conference_deadlines/</guid>
      <pubDate>Tue, 13 Feb 2024 01:14:39 GMT</pubDate>
    </item>
    <item>
      <title>您的 RAG 设置中有什么？ [D]</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1apcp2w/whats_in_your_rag_setup_d/</link>
      <description><![CDATA[您在 RAG 中使用哪些框架和库？  我最好奇LangChain是否像以前一样受欢迎？ 这是我的高级版本：   langchain使用OpenAI用于创建嵌入 Pinecone 用于存储嵌入 langchain 用于加载文档分割器和字符分割器以进行分块 Mongo 用于对话内存  ​   由   提交 /u/EnvironmentalDepth62   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1apcp2w/whats_in_your_rag_setup_d/</guid>
      <pubDate>Mon, 12 Feb 2024 22:14:07 GMT</pubDate>
    </item>
    <item>
      <title>[R] 马尔可夫注意力：通过马尔可夫链对 Transformers 进行原理分析的框架</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1apc855/r_attention_with_markov_a_framework_for/</link>
      <description><![CDATA[大家好，我正在分享我们最近通过马尔可夫链分析变压器的工作。特别是，我们设计了一个框架，可以对这些模型进行系统的理论和实证分析。论文在这里：https://arxiv.org/abs/2402.04161 期待您的建设性意见反馈和意见！ :)   由   提交 /u/pikachuchameleon   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1apc855/r_attention_with_markov_a_framework_for/</guid>
      <pubDate>Mon, 12 Feb 2024 21:55:08 GMT</pubDate>
    </item>
    <item>
      <title>[D] 为什么 RMSNorm 在 Transformer 中比 LayerNorm 更快很重要？</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1apb3th/d_why_does_it_matter_that_rmsnorm_is_faster_than/</link>
      <description><![CDATA[最近发布的 LLM 中很大一部分都使用 RMSNorm 而不是 LayerNorm。 原始 RMSNorm 论文 (https://arxiv.org/pdf/1910.07467.pdf）和我见过的大多数参考文献都认为 RMSNorm 比 LayerNorm 更好，因为它是计算效率更高。 但是，LayerNorm 只占整体计算的一小部分，因此我不清楚为什么加速会有很大帮助。渐近地，LayerNorm 为 O(d_model)，而像 MLP 这样的组件为 O(d_model2 )，或者注意力为 O(d_model*seq_len + d_model2 ）。 是否只是 LayerNorm 的平均居中部分没有那么有用，因此 RMSNorm 可以在不影响表现力的情况下为您带来轻微的效率提升？或者 RMSNorm 还有其他我没有看到的好处吗？   由   提交/u/kei147  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1apb3th/d_why_does_it_matter_that_rmsnorm_is_faster_than/</guid>
      <pubDate>Mon, 12 Feb 2024 21:09:53 GMT</pubDate>
    </item>
    <item>
      <title>[D] 斯坦福大学 Tri Dao 专访：论 FlashAttention 和稀疏性、量化和高效推理</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1ap9v6v/d_interview_with_tri_dao_stanford_on/</link>
      <description><![CDATA[Imbue 的一般智能播客的新一集与 Tri Dao 合作，FlashAttention 和Together AI 首席科学家。 涵盖的一些主题：  对循环连接进行逆向押注，而不是注意力 使用数据增强将知识编码为模型 设计利用硬件的算法  听对话：  Spotify 苹果播客 袖珍广播 摘要和参考论文  &lt;!-- SC_ON - -&gt;  由   提交 /u/thejashGI   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1ap9v6v/d_interview_with_tri_dao_stanford_on/</guid>
      <pubDate>Mon, 12 Feb 2024 20:20:59 GMT</pubDate>
    </item>
    <item>
      <title>[R] 神经网络可训练性的边界是分形的 - Jascha Sohl-Dickstein</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1ap92d8/r_the_boundary_of_neural_network_trainability_is/</link>
      <description><![CDATA[值得一读，只是为了简洁的可视化。 https://sohl-dickstein.github.io/2024/02/12/fractal.html https://arxiv.org/abs/2402.06184   由   提交 /u/currentscurrents   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1ap92d8/r_the_boundary_of_neural_network_trainability_is/</guid>
      <pubDate>Mon, 12 Feb 2024 19:50:07 GMT</pubDate>
    </item>
    <item>
      <title>[R][P] KV Cache 巨大并且成为 LLM 推理的瓶颈。我们以免微调 + 即插即用的方式将它们量化为 2 位。</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1ap3b65/rp_kv_cache_is_huge_and_bottlenecks_llm_inference/</link>
      <description><![CDATA[众所周知，批量推理是高效 LLM 服务的常见做法（这是 ChatGPT 等服务出现初始延迟的主要原因之一）。这种批处理实践的动机是，推理延迟主要受到模型加载的 I/O 成本的限制，而不是实际计算的限制，其中以批处理方式服务多个请求增加了可容忍的延迟增加，同时大大节省了每个令牌的成本。然而，批量推理（或长上下文任务，或两者）的一个问题是需要大量的 KV 缓存。正如 Jeff Dean 的之前的论文中所示：具有 bs=512 和  的 500B+ 模型seqlen=2048总 KV 缓存约为 3TB - 这是模型权重的 3 倍，并带来另一个 I/O 挑战，因为 GPU 需要将整个 KV 缓存加载到内存中在下一代代币中，计算核心再次大部分处于空闲状态。 当然，人们已经进行了各种尝试来减少 KV 缓存的大小。有些人通过使用逐出策略来丢弃不重要的令牌（例如，StremingLLM 和 H2O）；有些应用系统级优化，例如分页或卸载（例如，vLLM和FlexGen）。然而，对普通 KV 缓存量化的探索——据说可以带来直接的效率增益，同时与所有上述方法兼容——只看到了有限的性能保留。 我们探索了 KV 缓存量化的任务并发现关键挑战是密钥缓存中存在通道方面的异常值（通道=令牌d维度的某个索引）； 我们注意到这本身就是一个有趣的观察，因为这种模式在值缓存中不存在。沿着这个通道维度直接量化具有挑战性，因为新令牌以流式方式到达，这意味着我们永远不会知道下一个标记是否将包含异常值（或其范围）。考虑到这一点，我们提出 🥝KIVI，我们在一个小缓冲区的帮助下对键缓存进行每通道量化，对值缓存进行每令牌量化在 FP16 中。 我们的方法通过以 2 位量化的 KV 缓存实现了可接受的性能下降（针对 LM-Eval 和 LongBench 等实际任务进行评估时，平均准确率下降 &lt;1%）。这使得我们评估的 Llama/Mistral/Falcon 模型的峰值内存减少了 2.6 倍，同时批量大小增加了 4 倍，从而提高了 2.35 倍 - 3.47 倍的吞吐量。 🥝 KIVI：调整 - KV Cache 的免费非对称 2 位量化 📰 论文：https://arxiv.org/abs/2402.02750 😼 代码：https://github.com/jy-yuan/KIVI 📈快速浏览 主要结果   由   提交/u/choHZ   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1ap3b65/rp_kv_cache_is_huge_and_bottlenecks_llm_inference/</guid>
      <pubDate>Mon, 12 Feb 2024 16:00:37 GMT</pubDate>
    </item>
    <item>
      <title>[P] 征求对 Graphbook 的诚实反馈，Graphbook 是一个交互式计算平台，可以直观地拆箱和编辑变压器模型以进行应用研究。</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1ap24gt/p_soliciting_honest_feedback_on_graphbook_an/</link>
      <description><![CDATA[      ​ https://preview.redd.it/g4oh19wy56ic1.png?width=5096&amp;format=png&amp; ;auto=webp&amp;s=fd1fa1350f86281ba56c6daa1609b410f5120c71 项目 来源： 我和我的同事都是 MLE/应用研究人员，并且一直对尝试在生产 NLP 用例中排除故障和定制转换器感到恼火。这是从 BERT 在 Tensorflow1 上出现时开始的，当时你根本无法真正单步调试模型。澄清一下，当然，纯粹清理数据需要花费大量精力，但我们发现，通过深入研究模型架构，我们也可以更好地理解和解决问题。是的，TF1 是 5-6 年前的事，现在有了急切的执行和 PyTorch，这使得逐层查看数据变得更加容易，但共识似乎仍然很像做“手术”来进行编辑，这是随着新研究的扩展变得越来越重要。 另请注意，我们听说研究人员使用 Netron（25K+ 星github）来直观地调试事物，但抱怨它对于变压器架构来说非常有限，因为它是扁平的和只读的。 高级描述： 我们的项目 Graphbook 采用模型架构的可视化层次结构，并将其转换为交互式执行的拖放图（即图形）并让您查看每个变量的数据快照。它是一个 DAG，可让您直观地编排从模型输入到输出的数据流。每个操作要么是原始操作（通过 CUDA C++ 编程直接在 GPU 上运行），要么是复合操作，因此分解为子图。因此，这里的一些主要好处是，您无需迭代调试器即可查看每个变量的所有数据，并且当您进行更改时，它像 Jupyter Notebook 一样是交互式的（因此不会从头开始重新运行）。另一个主要好处是，您可以真正精细地钻取每个模型权重的读写，以便您可以观察每个权重的更新方式。除了模型设计器部分之外，Graphbook 还允许您训练和部署图表本身，因此 Graphbook 是模型设计器部分之上的 MLOps 工具。 youtube.com/watch?v=h-S4MdVn0XI&quot;&gt;短视频“商业广告”，其中提供了更多详细信息。 当前状态： &lt;该平台正处于“免费增值”版本的最后阶段，之后将是试用+订阅。我们正在发布预先训练的变压器图。我们现在能够相当快速地将模型从 PyTorch 和 HuggingFace 转移到 Graphbook。到目前为止，我们已经有了 BERT、GPT2、Flan-T5 和 Llama2，接下来我们正在开发 Mistral 和 Phi-2。 最终，我正在寻求有关我们的内容的反馈和原始意见。正在做。我们在贸易展（MLOps World、NYC AI Summit，以及将在 Nvidia GTC 和 ODSC Boston）上与人们交谈时听到了各种各样的反应，但到目前为止还没有真正有机会联系到我认为 /machinelearning 可能拥有一个更大的专家和应用研究人员小组。抱歉，如果这篇文章过于促销。   由   提交/u/graphbook  [链接] [评论] &lt; /表&gt;]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1ap24gt/p_soliciting_honest_feedback_on_graphbook_an/</guid>
      <pubDate>Mon, 12 Feb 2024 15:08:47 GMT</pubDate>
    </item>
    <item>
      <title>[D]架构超参数优化策略</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1aow8ri/d_architecture_hyperparameter_optimisation/</link>
      <description><![CDATA[我想知道是否值得对模型架构进行广泛的超参数调整。学习率调整通常会带来回报，因为这对收敛和整体性能有很大影响，但是在调整架构（num_layers、num_heads、dropout 等）时，我发现如果你保持在某个最佳范围内，实际性能差异是边缘。难道我做错了什么？您对此有什么经验？   由   提交 /u/Primary-Wasabi292    reddit.com/r/MachineLearning/comments/1aow8ri/d_architecture_hyperparameter_optimization/&quot;&gt;[链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1aow8ri/d_architecture_hyperparameter_optimisation/</guid>
      <pubDate>Mon, 12 Feb 2024 09:35:53 GMT</pubDate>
    </item>
    <item>
      <title>[D] 简单问题主题</title>
      <link>https://www.reddit.com/r/MachineLearning/comments/1aob7zi/d_simple_questions_thread/</link>
      <description><![CDATA[请在此处发布您的问题，而不是创建新线程。鼓励其他为问题创建新帖子的人在此处发帖！ 帖子将一直保持活跃状态​​，直到下一篇帖子，因此请在标题中的日期之后继续发帖。 感谢大家回答问题在上一个线程中！   由   提交 /u/AutoModerator   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/MachineLearning/comments/1aob7zi/d_simple_questions_thread/</guid>
      <pubDate>Sun, 11 Feb 2024 16:00:18 GMT</pubDate>
    </item>
    </channel>
</rss>