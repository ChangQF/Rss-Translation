<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最近的问题 - 交叉验证</title>
    <link>https://stats.stackexchange.com/questions</link>
    <description>来自 stats.stackexchange.com 的最新 30 条</description>
    <lastBuildDate>Tue, 01 Oct 2024 12:34:07 GMT</lastBuildDate>
    <item>
      <title>为什么$P(X)$的后验计算很困难？</title>
      <link>https://stats.stackexchange.com/questions/655168/why-computation-of-px-is-hard-in-posterior</link>
      <description><![CDATA[设 $X$ 表示维度为 $d$ 的输入空间，$Z$ 表示大小为 $k$ 的输出空间。后验定义为
$$P(X|Z) = \frac{P(X|Z)P(Z)}{P(X)}$$
其中 $P(Z)$ 为先验，$P(X|Z)$ 表示似然值（可由神经网络或其他模型计算）。 $P(X)$ 的计算在高维中很难（难以处理）。
$$P(X)=\sum_{Z}P(X|Z)P(Z)$$
我不明白为什么 $P(X)$ 的计算很难？我认为难度意味着计算它的时间。当提到 $P(X)$ 难以处理时，是否意味着计算 $P(X)$ 的时间是无限的或非常大的？]]></description>
      <guid>https://stats.stackexchange.com/questions/655168/why-computation-of-px-is-hard-in-posterior</guid>
      <pubDate>Tue, 01 Oct 2024 11:47:55 GMT</pubDate>
    </item>
    <item>
      <title>名义连续序数变量之间的关系</title>
      <link>https://stats.stackexchange.com/questions/655167/relationship-between-nominal-continuous-ordinal-variables</link>
      <description><![CDATA[我有一个包含多个二分、连续和序数变量的数据集。作为探索性数据分析的一部分，我发现相关矩阵是一个非常有用的工具，可以查看哪些变量可能与其他变量之间存在关系。我可以使用 Spearman 相关性一次性对连续和序数变量进行此操作。由于二分变量编码“是/否”情况，我可以使用 Cramer&#39;s V 或修正的 Cramer&#39;s V 值创建一个关联矩阵，但我如何定量地看到二分-连续变量之间、名义非二分和连续变量之间或序数和名义变量之间的关系的强度？
我知道我可以通过二分或名义变量对数据集进行分类，并对连续变量进行方差分析或 Kruskal-Wallis 检验，并在箱线图上显示结果。但是，我不知道如何才能看到所有变量之间的关系。
让我举个例子来说明我的意思。让我们有一个包含以下列的表格：性别（0/1）、体重（连续）、年龄（连续）、吸烟者（0/1）、健康问题（从 0 到 5 的序数）。
|性别|体重|年龄|吸烟者|健康问题|
|0 |57 |46 |1 |2 |
|1 |46 |23 |0 |0 |
|0 |84 |40 |0 |2 |

我们如何才能说明吸烟、体重、年龄和性别与序数变量健康问题之间的关系有多强？我们如何才能看到其他变量之间的关系让我们假设连续变量不是正态分布的。
感谢您的回复！]]></description>
      <guid>https://stats.stackexchange.com/questions/655167/relationship-between-nominal-continuous-ordinal-variables</guid>
      <pubDate>Tue, 01 Oct 2024 11:36:48 GMT</pubDate>
    </item>
    <item>
      <title>有人能帮我检查重复测量方差分析的正态性假设吗？</title>
      <link>https://stats.stackexchange.com/questions/655166/can-someone-help-me-on-how-to-check-the-normality-assumption-for-my-repeated-mea</link>
      <description><![CDATA[我目前正在进行一项硕士研究，我不知道如何检查重复测量方差分析的正态性假设。在我的研究中，我对同一组人应用了两次 tACS（一次是真实刺激，一次是假刺激），之后他们必须完成图片命名任务。我的因变量是 RT，我的自变量是 tACS 条件、SOA 和干扰条件（后两个与图片命名任务有关；它们都有三个级别，每个参与者在两次 tACS 会话中都经历了所有级别）。对于重复测量方差分析，我必须为每个因素组合创建一个变量（例如，假 tACS - SOA = 0.1 - 干扰 = 语义；见下面的屏幕截图）。现在我想知道我是否必须检查每个因素组合的正态性，或者更确切地说，检查整个 RT 的正态性。如果是后者，我对如何做到这一点感到困惑，因为我不只有一个 RT 变量，而是只有所有因子组合。 我将不胜感激任何帮助。]]></description>
      <guid>https://stats.stackexchange.com/questions/655166/can-someone-help-me-on-how-to-check-the-normality-assumption-for-my-repeated-mea</guid>
      <pubDate>Tue, 01 Oct 2024 11:06:43 GMT</pubDate>
    </item>
    <item>
      <title>比较有和没有随机数据的 ARIMA 模型</title>
      <link>https://stats.stackexchange.com/questions/655164/comparing-arima-models-with-and-without-random-data</link>
      <description><![CDATA[我试图比较两个模型：一个具有明显的上升趋势，基于非随机时间序列数据，另一个基于完全随机数据：
url = &#39;https://raw.githubusercontent.com/marcopeix/AppliedTimeSeriesAnalysisWithPython/refs/heads/main/data/jj.csv&#39;

df1 = pd.read_csv(url).set_index(&#39;date&#39;)
np.random.seed(1)
df2 = pd.DataFrame({&#39;data&#39;:np.random.rand(len(df1))}, index=df1.index)

fit1 = ARIMA(df1, order=(2,1,0)).fit()
fit2 = ARIMA(df2, order=(2,1,0)).fit()

我发现具有随机数据的模型似乎比模型更合适使用非随机数据：
fit1.aic
267.7514374521209

fit2.aic
57.83979919194317

fit1.summary()

coef std err z P&gt;|z| [0.025 0.975]
-----------------------------------------------------------------------------
ar.L1 -0.6532 0.076 -8.548 0.000 -0.803 -0.503
ar.L2 -0.1084 0.103 -1.048 0.295 -0.311 0.094
sigma2 1.3639 0.152 8.967 0.000 1.066 1.662

fit2.summary()

coef std err z P&gt;|z| [0.025 0.975]
-----------------------------------------------------------------------------
ar.L1 -0.7479 0.108 -6.943 0.000 -0.959 -0.537
ar.L2 -0.4263 0.107 -3.975 0.000 -0.636 -0.216
sigma2 0.1084 0.021 5.263 0.000 0.068 0.149

我原本以为 fit2 的拟合效果会很差，因为它是基于随机数据的，但 fit2 的 AIC 实际上低于 fit1，并且 p 值也都显著。]]></description>
      <guid>https://stats.stackexchange.com/questions/655164/comparing-arima-models-with-and-without-random-data</guid>
      <pubDate>Tue, 01 Oct 2024 10:58:24 GMT</pubDate>
    </item>
    <item>
      <title>我们可以将一个随机正态变量大于其他 $N$ 个正态变量的概率写成累积密度函数的乘积吗？</title>
      <link>https://stats.stackexchange.com/questions/655163/can-we-write-the-probability-that-a-random-normal-variable-is-greater-than-other</link>
      <description><![CDATA[对于 $Y_1 \sim N(\mu_y;\sigma_y^2)$ 和 $X_i, ..., X_N$ 个分布为 $N(\mu_i, \sigma_i^2)$ 的随机变量，我们可以将 $P(Y_1 \geq X_i \ \forall i \in \{2,...,N\})$ 写为 $\prod_{i=1}^{N}F(z_i)$ 吗？其中 $F(\cdot)$ 是标准正态分布的累积密度函数，并且 $P(Y_1 \geq X_i \ \forall i \in \{2,...,N\})$ 写为 $\prod_{i=1}^{N}F(z_i)$，其中 $F(\cdot)$ 是标准正态分布的累积密度函数，并且 $z_i=\frac{\mu_y-\mu_i}{\sqrt{\sigma_y^2+\sigma_i^2}}$?
对于 $i=1$ 的情况，我知道很容易证明 $P(Y_i \geq X_1)=F(\frac{\mu_y-\mu_i}{\sqrt{\sigma_y^2+\sigma_1^2}})$，但我们能否推广到 $N$ 的情况 $P(Y_1 \geq X_i \ \forall i \in \{2,...,N\})=\prod_{i=1}^{N}F(z_i)$?
如果 $\mu_y=\mu_i \forall i$，则为 $P(Y_1 \geq X_i \ \forall i \in \{2,...,N\})=F(z_1)^N$。
我之所以产生疑问，是因为似乎只要 $Y$ 的均值与任何其他 $X_i$ 相同，$Y$ 方差的任何变化都不会影响 $P(Y_1 \geq X_i \ \forall i \in \{2,...,N\})$。而直观上 $Y$ 需要较高的值才能击败所有其他分布。
（这不是任务，只是好奇心）]]></description>
      <guid>https://stats.stackexchange.com/questions/655163/can-we-write-the-probability-that-a-random-normal-variable-is-greater-than-other</guid>
      <pubDate>Tue, 01 Oct 2024 10:25:44 GMT</pubDate>
    </item>
    <item>
      <title>是否可以获得顺序统计量的中位数或众数？</title>
      <link>https://stats.stackexchange.com/questions/655162/can-median-or-mode-of-the-order-statistics-be-obtained</link>
      <description><![CDATA[假设 $X_1, X_2,\cdots, X_n$ 是来自连续概率分布的随机样本，大小为 $n$，该分布具有累积分布函数 (CDF) $F(x)$ 和概率密度函数 (PDF) $f(x)$。令 $X_{(1:n)}\leq X_{(2:n)}\leq\cdots\leq X_{(n:n)}$ 表示相应的顺序统计量。 $r^{th}$ 阶统计量 $X_{r:n}$ 的 PDF 由以下公式给出；
$$f_{r:n}(x)=\frac{n!}{(n-r)!(r-1)!}[F(x)]^{r-1}[1-F(x)]^{n-r}f(x)$$
而相应的 $r^{th}$ 阶统计量的 $1^{st}$ 阶矩由以下公式给出；
$$E(X_{r:n})=\mu_{r:n}=\frac{n!}{(n-r)!(r-1)!}\int_{-\infty}^{\infty}x[F(x)]^{r-1}[1-F(x)]^{n-r}f(x)dx$$
已证明，只要 $E(X)$ 存在，$\mu_{r:n}$ 也存在。
现在，在柯西分布、log-t 分布和逆威布尔分布等许多分布中，有限矩并不存在。在这种情况下，我们能得到 $X_{r:n}$ 的中位数或众数吗？]]></description>
      <guid>https://stats.stackexchange.com/questions/655162/can-median-or-mode-of-the-order-statistics-be-obtained</guid>
      <pubDate>Tue, 01 Oct 2024 10:25:29 GMT</pubDate>
    </item>
    <item>
      <title>从所有可能的预测因子组合中选择 AIC 最低的模型是否是一种逐步选择的形式，并且有效吗？</title>
      <link>https://stats.stackexchange.com/questions/655161/is-selecting-the-model-with-the-lowest-aic-from-all-possible-predictor-combinati</link>
      <description><![CDATA[由于众所周知二元逻辑回归中的逐步选择不是一种有效的方法，我想问一下，测试所有可能的预测变量组合，然后选择具有最低 AIC 的模型是否仍被视为一种逐步选择的形式。此外，这种方法对于模型选择有效吗？]]></description>
      <guid>https://stats.stackexchange.com/questions/655161/is-selecting-the-model-with-the-lowest-aic-from-all-possible-predictor-combinati</guid>
      <pubDate>Tue, 01 Oct 2024 10:13:03 GMT</pubDate>
    </item>
    <item>
      <title>Wilcoxon 秩和检验 W=0 但 p<0.05？</title>
      <link>https://stats.stackexchange.com/questions/655159/wilcoxon-rank-sum-test-w-0-but-p0-05</link>
      <description><![CDATA[在 R 中执行 Wilcoxon 秩和检验时，我有时会得到 0 的 W 值，但 p 值却很显著。由于 R 计算 W 的方式是将一个组的秩和减去预期的秩和，我不明白为什么这个结果会是 0，但仍然拒绝零假设。如果其中一个组的秩和等于预期的，那么另一个组的秩和不应该也等于预期的，因此没有差异，即零假设成立？
非常感谢，
Ser
PS 我是新手，我不知道如何交叉引用另一篇文章，但 R 计算 W 的方式在一篇名为“Wilcoxon 秩和检验正确向量顺序”的文章中得到了很好的解释]]></description>
      <guid>https://stats.stackexchange.com/questions/655159/wilcoxon-rank-sum-test-w-0-but-p0-05</guid>
      <pubDate>Tue, 01 Oct 2024 09:20:18 GMT</pubDate>
    </item>
    <item>
      <title>如何计算和比较不同规模群体之间相互作用的风险</title>
      <link>https://stats.stackexchange.com/questions/655157/how-to-calculate-and-compare-risks-of-an-interaction-between-groups-of-different</link>
      <description><![CDATA[我需要计算并比较三个不同规模年龄组内及之间的病毒传播风险：儿童（0-19，N= 20,000）、成人（20-65，N= 60,000）和老年人（66+，N=20,000）。
儿童感染儿童（n=2000）的风险为 10%；儿童感染成人（n=4000）的风险为 20%；儿童感染老年人（n=2000）的风险为 10%。
但这些风险可以相对比较吗：相对于儿童感染其他儿童的风险，儿童感染成人的风险高出 2 倍，感染老年人的风险相同。显然，成年人口是感染目标的 3 倍，这是相关的，但在本次比较中没有考虑。
成年人被儿童感染的风险（n=4000）为 6.67%；成年人被另一个成年人感染的风险（n=6000）为 10%，被老年人感染的风险（n=2000）为 5%。
我不确定是否可以简单地从两个角度呈现风险，并澄清相对风险不考虑互动一方的人口规模；或者将目标人群纳入风险计算。也许还有其他方法？]]></description>
      <guid>https://stats.stackexchange.com/questions/655157/how-to-calculate-and-compare-risks-of-an-interaction-between-groups-of-different</guid>
      <pubDate>Tue, 01 Oct 2024 08:17:42 GMT</pubDate>
    </item>
    <item>
      <title>使用稳定性选择进行预测来定义共识特征集的最佳方法</title>
      <link>https://stats.stackexchange.com/questions/655156/best-approach-to-define-consensus-set-of-features-using-stability-selection-for</link>
      <description><![CDATA[我尝试构建一个机器学习程序，基于大量高度相关的特征（约 7000 个特征）来预测连续变量。我正在使用 LASSO 回归的稳定性选择程序来找到确保方法泛化的稳定特征集。由于我想避免任何类型的过度拟合（数据泄漏），我的第一个猜测是使用嵌套交叉验证，在外循环和内循环中使用 5 倍。但我仍然不确定如何正确执行分析，因为每个循环都会导致不同的特征选择集。以下是我目前的想法和已经实现的内容：

使用 5 倍 CV（外循环）拆分我的数据
对于 (1) 中生成的每个折叠，我生成一个 5 倍嵌套 CV（内循环）
在内循环中执行稳定性选择，产生一组稳定的特征，在验证集中测试模型性能。对于每个内层折叠，我都会获得一组至少出现在稳定性选择所需的 X% 重采样迭代中的特征。使用具有相应稳定特征的线性回归评估每个内层循环的性能。这里可以考虑其他方法，例如随机森林或非线性模型。
然后，我使用来自内层循环的特征的并集拟合线性回归，评估外部 CV 中剩余折叠的 RSME
对外层循环中的每个折叠重复 (3)-(4)，将产生 5 组特征和相应的性能指标
使用来自每个外层折叠的一致特征或使用某些阈值标准来拟合完整数据集的最终模型

我的问题是：我选择特征的嵌入式过程是否合法？我的意思是结合 LASSO 上的稳定性选择来拟合仅具有有限数量特征的线性回归是否正确？是不是正确的做法，避免最后出现过拟合？
欢迎提出意见和建议]]></description>
      <guid>https://stats.stackexchange.com/questions/655156/best-approach-to-define-consensus-set-of-features-using-stability-selection-for</guid>
      <pubDate>Tue, 01 Oct 2024 08:07:42 GMT</pubDate>
    </item>
    <item>
      <title>R 中交互的先验契约矩阵和分析</title>
      <link>https://stats.stackexchange.com/questions/655155/matrix-and-analysis-of-a-priori-contrats-in-r-for-an-interaction</link>
      <description><![CDATA[我被一个问题困扰了好几天，虽然我在论坛上搜索过，但还是找不到解决方案。我有以下类似的数据集
blocks &lt;- rep(1:3, each = 17) 
treatments &lt;- rep(c(rep(&quot;A&quot;, 3), rep(&quot;B&quot;, 3), rep(&quot;C&quot;, 4), rep(&quot;D&quot;, 3), rep(&quot;E&quot;, 4)), times = 3)
Y &lt;- runif(51, min = 0, max = 1)
data &lt;- data.frame(Y = Y, Block = factor(blocks), Treatments = factor(treatments))
table(data$Block,data$Treatments)

我正在使用以下模型测试块内和块之间的治疗是否具有统计差异：
glmmTMB(y=block*treatments, family=beta_family(link=&quot;logit&quot;), data=data)

但是，我对区块内和区块间所有治疗的比较不感兴趣，但我有精确的假设需要检验：
每个区块内：
治疗 B vs. C vs. E，A vs. B，C vs. D
区块间
治疗 A、B、C、E（即区块 1 中的 A vs 区块 2 中的 A vs 区块 3 中的 A）。
为了进行明确的测试，我尝试应用“先验对比”。我为治疗形成了一个矩阵，定义如下：
C vs E&lt;-c(0,0,-1,0,1)
B vs E&lt;-c(0,-1,0,0,1) # C vs B 应隐式
A vs B &lt;-c(1,-1,0,0,0)
C vs D &lt;- c(0,0,1,-1,0)
contrs &lt;- cbind(C vs E, B vs E, A vs B, C vs D)
contrasts(data$treatment) &lt;- contrs

此时我陷入了困境。我无法弄清楚如何为 Block 制定矩阵来执行交互并获得我感兴趣的对比。我发现可以通过进行后验对比来使用 emmeans 包，但我认为有必要进行成对比较，然后从 emmeans 摘要中选择我感兴趣的对比，但我想避免这样做，因为我读到这不是一个正确的做法，当我定义了研究问题时。
我想问一下，使用“先验”对比的想法是否正确，或者我是否完全错了，如果我正确设置了对比，以及如何获得我感兴趣的对比之间的统计差异。
谢谢]]></description>
      <guid>https://stats.stackexchange.com/questions/655155/matrix-and-analysis-of-a-priori-contrats-in-r-for-an-interaction</guid>
      <pubDate>Tue, 01 Oct 2024 08:04:43 GMT</pubDate>
    </item>
    <item>
      <title>条件概率分布的建模方法，应用于 IPW 的倾向得分估计（因果推断）</title>
      <link>https://stats.stackexchange.com/questions/655154/modeling-approaches-for-conditional-probability-distribution-applied-to-propens</link>
      <description><![CDATA[我正在尝试理解并理想地实施逆概率加权方法来估计因果关系。到目前为止，我的资源是 Pearl 的 Primer 和书籍“如果？”。
对于二元处理，似乎一种常见的方法是简单的逻辑回归。对于非二元处理，我不太确定。可以使用线性模型或 GAM 来模拟 $$W^A=\frac{1}{f(A|Y)}.$$ 中的条件分布
然而，这似乎对模型的选择很敏感。对我来说，使用机器学习或神经网络来计算这些权重似乎非常有吸引力。目前，我真的不知道如何使用任何因果推理包或它们如何工作。对条件分布进行建模比使用机器学习对条件期望进行通常的建模要困难一些，但我已尝试研究现有的方法。似乎可以使用分位数回归，只需修改损失函数，然后计算分位数网格即可。我还听说过其他方法，如 VAE、正则化流或贝叶斯神经网络（我对后两者的工作原理一无所知）。
您将如何解决这个问题？哪种方法可行？当前的统计软件做了什么？我也希望得到有关 R/python 是否更适合使用统计库的建议。目前，我一直在尝试用 Python 实现一些理论，但这个领域很大，我有点迷茫。
非常感谢您的任何回答。]]></description>
      <guid>https://stats.stackexchange.com/questions/655154/modeling-approaches-for-conditional-probability-distribution-applied-to-propens</guid>
      <pubDate>Tue, 01 Oct 2024 07:47:46 GMT</pubDate>
    </item>
    <item>
      <title>与统计模型对比的代数符号</title>
      <link>https://stats.stackexchange.com/questions/655153/algebraic-notation-for-contrasts-from-statistical-model</link>
      <description><![CDATA[在事前事后研究中，我们可以使用线性混合模型将治疗效果估计为时间 x 治疗相互作用的系数，请参见此处（第 19.3 节）：
https://www.middleprofessor.com/files/applied-biostatistics_bookdown/_book/models-for-longitudinal-experiments-pre-post-designs.html
假设我们使用回归样条将此模型扩展到几个后续时期和模型时间。这些系数将无法解释，但我们可以计算每次后续测量时的一系列条件/边际对比，以估计治疗效果，即预测值之间的差异。我正在考虑使用后估计工具（例如 R 中的包 emmeans、marginaleffects、rms 等）可以获得的对比类型。但是，我不知道如何正确地用代数方式写出这样的对比。我的尝试附在下面的图片中（抱歉，我无法弄清楚如何直接在此网站上书写）。

其中 I 是干预效果，y 是响应变量，x 是预测变量，t 是一系列随访时间，t0 是基线时间，T 是治疗组，C 是对照组。
如果有人能帮我用代数符号纠正/正确地写出这个，我将不胜感激，因为假设正态分布误差的线性模型的对比情况。以及这如何推广到具有对数链接的泊松模型。在这种情况下，差异中的差异变成了响应尺度上的比率，但我再次不确定如何使用代数符号正确地写出它。谢谢。]]></description>
      <guid>https://stats.stackexchange.com/questions/655153/algebraic-notation-for-contrasts-from-statistical-model</guid>
      <pubDate>Tue, 01 Oct 2024 07:44:36 GMT</pubDate>
    </item>
    <item>
      <title>低事件数 Cox 模型的特征选择</title>
      <link>https://stats.stackexchange.com/questions/655152/feature-selection-for-cox-model-with-low-event-number</link>
      <description><![CDATA[我感兴趣的是一组 30 个变量是否可以预测癌症的 OS。在检查多重共线性后，我将特征减少到 15 个。问题是，我的数据集中只有大约 70 个事件（在 182 个人中），我认为这使我很难将所有这些变量都包含在最终模型中。
我不确定可以做什么（如果有的话）来解决这个问题？我一直在阅读有关逐步选择、LASSO 和 PCA 的建议，但我不确定哪种选项（如果有的话）是最好的方法。有人可以提出前进的方向吗？
谢谢]]></description>
      <guid>https://stats.stackexchange.com/questions/655152/feature-selection-for-cox-model-with-low-event-number</guid>
      <pubDate>Tue, 01 Oct 2024 07:02:57 GMT</pubDate>
    </item>
    <item>
      <title>高斯混合模型中的对数似然不单调</title>
      <link>https://stats.stackexchange.com/questions/655149/log-likelihood-not-monotonic-in-gaussian-mixture-model</link>
      <description><![CDATA[我实现了一个高斯混合模型，但我发现有时我会得到一个非单调的对数似然函数。这种情况并非总是如此，而且根据随机初始化，它通常有效。其他时候，我会陷入对数似然先上升然后下降的循环中。这是我的代码：
N = data.shape[0] # 数据点数

mu = np.random.choice(data, size=num_components)

sigma = np.random.uniform( low=3, high = 10, size=num_components) # 标准偏差
print(&quot;Mu guess:\n&quot;, mu)
print(&quot;Sigma guess:\n&quot;, sigma)
pi = np.ones(num_components) * (1.0 / num_components) # 混合系数
r = np.zeros([num_components, N]) # 职责

for iteration in range(tot_iterations):
for k in range(num_components):
r[k, :] = pi[k] * norm.pdf(x=data, loc=mu[k], scale=sigma[k])
r = r / np.sum(r，axis=0)#[K，N]-&gt; [N]
N_k = np.sum(r, axis=1)
for k in range(num_components):
mu[k] = np.sum(r[k, :] * data) / N_k[k]
numerator = r[k] * (data - mu[k]) ** 2
sigma[k] = np.sqrt(np.sum(numerator) / N_k[k])
pi = N_k / N

likelihood = 0.0
for k in range(num_components):
unlikely += pi[k] * norm.pdf(x=data, loc=mu[k], scale=sigma[k])
nll_list.append(np.sum(np.log(likelihood)))

我开始怀疑这是由于某种数字/浮点问题造成的。我能做些什么来解决这个问题吗？令人沮丧的是，它只对一些起始猜测有效，但对全部猜测无效。]]></description>
      <guid>https://stats.stackexchange.com/questions/655149/log-likelihood-not-monotonic-in-gaussian-mixture-model</guid>
      <pubDate>Tue, 01 Oct 2024 05:48:39 GMT</pubDate>
    </item>
    </channel>
</rss>