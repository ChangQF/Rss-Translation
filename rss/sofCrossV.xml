<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最近的问题 - 交叉验证</title>
    <link>https://stats.stackexchange.com/questions</link>
    <description>来自 stats.stackexchange.com 的最新 30 条</description>
    <lastBuildDate>Fri, 31 May 2024 03:16:55 GMT</lastBuildDate>
    <item>
      <title>具有共变预测变量的线性回归模型中的方差比例</title>
      <link>https://stats.stackexchange.com/questions/648334/proportion-of-variance-in-a-linear-regression-model-with-a-covaring-predictor</link>
      <description><![CDATA[给定一个模型：
\begin{align}Y_{i}=Z_{i}*\beta * X_{i} + Z_{i}\tag{Eq. 1}&amp;\end{align&gt;
我对预测变量 $X$ 解释的方差比例的封闭公式感兴趣，通常也称为判定系数。请注意，在此模型中，变量 $Z_{i}$ 与 $X_{i}$ 共变，因此这不一定是具有单个预测变量的线性回归模型。
我知道可以使用以下表达式计算方差比例（又名判定系数）：
\begin{align}R^2=\beta^2*\frac{V(X)}{V(Y)}\tag{Eq. 2}&amp;\end{align&gt;
我认为有两种可能的替代方案可以实现我的目标：

将响应变量 $Y_{i}$ 除以 $Z_{i}$，这样：
\begin{align}\frac{Y_{i}}{Z_{i}}=\beta * X_{i} + 1\tag{Eq. 3}&amp;\end{align&gt;
然后使用 $Eq. 2$。

将 $Z_{i}$ 的期望视为常数，使得：
\begin{align}Y_{i}=\beta&#39; * X_{i} + \operatorname{E}(Z)\tag{Eq. 4}&amp;\end{align
其中 $\beta&#39;=\operatorname{E}(Z)*\beta$。然后相应地使用 $Eq. 2$。


当我将某些模拟数据（此处未显示）上通过线性回归估计的斜率与预期斜率（使用模拟数据的先前信息计算）进行比较时，对于 Eq. 3 和 Eq. 4，我确实得到了非常准确的结果。
对于 Eq. 4 模型中计算的 $R^2$，情况并非如此。
我推测，将 $R^2$ 表达式应用于 Eq. 2（对于单个预测器线性回归准确）可能对 Eq. 1 中的模型不太好。]]></description>
      <guid>https://stats.stackexchange.com/questions/648334/proportion-of-variance-in-a-linear-regression-model-with-a-covaring-predictor</guid>
      <pubDate>Fri, 31 May 2024 01:21:40 GMT</pubDate>
    </item>
    <item>
      <title>带截距的 AR(p) 过程的特征多项式</title>
      <link>https://stats.stackexchange.com/questions/648332/characteristic-polynomials-for-arp-processes-with-intercepts</link>
      <description><![CDATA[这是我试图理解的；
如果我们有无截距的 AR(1) 过程，例如：
$x_t=\phi x_{t-1}+w_t$
当 $|\phi|$=1 时，它有一个单位根” ]
我们有一个没有常数的 AR(p) 过程
$x_t=\phi_1 x_{t-1}+\phi_2 x_{t-2}+\cdots+\phi_p x_{t-p}+w_t $
其特征多项式定义为
$$\phi(B)=1-\phi_1 B-\phi_2 B^2-\ldots-\phi_p B^p .$$
因此，对于 AR(p)，此特征多项式需要有一个根为 1 或 -1。
我的问题是，如果我们有一个常数项 c（例如下面），那么“特征多项式”是否与上面的相同，我们只需查看相同的特征多项式即可找出单位根（或者在 AR(1) 的情况下，查看 $|\phi|$）
$x_t=\phi x_{t-1}+w_t +c$
$x_t=\phi_1 x_{t-1}+\phi_2 x_{t-2}+\cdots+\phi_p x_{t-p}+w_t+c$]]></description>
      <guid>https://stats.stackexchange.com/questions/648332/characteristic-polynomials-for-arp-processes-with-intercepts</guid>
      <pubDate>Fri, 31 May 2024 00:45:44 GMT</pubDate>
    </item>
    <item>
      <title>使用零膨胀泊松回归从 IRR 获得发生率</title>
      <link>https://stats.stackexchange.com/questions/648330/getting-incidence-rates-from-irr-using-zero-inflated-poisson-regression</link>
      <description><![CDATA[我的数据如下所示：

因此我使用零膨胀泊松回归模型来模拟事件（例如，因特定情况住院）。
pois_model &lt;- zeroinfl(counts~cases+offset(log(pyear)),
data=df)

摘要显示：
&gt; summary(pois_model)

调用：
zeroinfl(formula = counts ~ cases + offset(log(pyear)), data = df)

Pearson 残差：
最小值 1Q 中位数 3Q 最大值 
-0.3694 -0.2851 -0.2851 -0.2807 203.6724 

计数模型系数（带对数链接的泊松）：
估计标准误差 z 值 Pr(&gt;|z|) 
（截距） -0.759272 0.012431 -61.081 &lt;2e-16 ***
casesRA -0.002534 0.023278 -0.109 0.913 

零通胀模型系数（带对数链接的二项式）：
估计标准误差 z 值 Pr(&gt;|z|) 
（截距） -0.759272 0.012431 -61.081 &lt;2e-16 ***
casesRA -0.002534 0.023278 -0.109 0.913 

零通胀模型系数（带对数链接的二项式）：
误差 z 值 Pr(&gt;|z|) 
(截距) 0.50933 0.01524 33.427 &lt;2e-16 ***
casesRA 0.03112 0.02932 1.061 0.289 
---
有效代码：0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 

BFGS 优化中的迭代次数：17 
对数似然：-4.047e+04 on 4 Df

如何获取病例（2 个因素：病例/对照）的具体发生率？
手动执行此操作不能解释过度分散：
 &gt;模型 &lt;- glm(counts ~ 0 + cases + offset(log(pyear)),
+ data = df, 
+ family = poisson(link=&quot;log&quot;))
&gt; 系数(模型) %&gt;%
+ exp() %&gt;%
+ (\(x) x*100000)()
casesControl casesRA 
4394.661 4481.076 

如能得到任何帮助，我们将不胜感激！谢谢！]]></description>
      <guid>https://stats.stackexchange.com/questions/648330/getting-incidence-rates-from-irr-using-zero-inflated-poisson-regression</guid>
      <pubDate>Fri, 31 May 2024 00:30:16 GMT</pubDate>
    </item>
    <item>
      <title>重复测量的贝叶斯多元回归</title>
      <link>https://stats.stackexchange.com/questions/648328/bayesian-multivariate-regression-with-repeated-measures</link>
      <description><![CDATA[我正在尝试使用混合效应模型估计方差成分（具体来说，遗传相关性）。我的随机效应是受试者 ID，我的因变量 y1 和 y2 是从两个不同测试中获得的分类分数。每个受试者在每次测试中都经过多次测试，但受试者之间的次数不同（例如，受试者 1 可能进行了一次测试 1 和两次测试 2，而受试者 2 可能进行了三次测试 1 和两次测试 2），因此每个受试者的 y1 和 y2 重复次数不同。y1 和 y2 保存在两个单独的数据集中。有没有办法运行多元模型，同时保留 y1 和 y2 的所有重复？我应该如何组合这两个数据集来实现这一点？或者我应该只为每个受试者的 y1 和 y2 使用一个值？我正在使用 R 包 MCMCglmm 和 brms。
我希望我的问题足够清楚。
非常感谢！]]></description>
      <guid>https://stats.stackexchange.com/questions/648328/bayesian-multivariate-regression-with-repeated-measures</guid>
      <pubDate>Thu, 30 May 2024 23:22:49 GMT</pubDate>
    </item>
    <item>
      <title>如果 KPSS 涉及趋势平稳性与单位根，那么如何测试平稳性？</title>
      <link>https://stats.stackexchange.com/questions/648327/how-does-kpss-test-for-stationarity-if-it-is-about-trend-stationarity-vs-unit-ro</link>
      <description><![CDATA[ADF 检验：

零假设：该序列具有单位根。
备择假设：该序列没有单位根。

KPSS 检验：

零假设：该过程趋势平稳。
备择假设：该序列具有单位根（序列不是平稳的）。


最好同时应用这两种检验，这样可以确保
该序列确实是平稳的。

来源：
https://www.statsmodels.org/dev/examples/notebooks/generated/stationarity_detrending_adf_kpss.html
我不明白的是，如果您使用 KPSS 检验，如果零假设是趋势平稳的，为什么无法拒绝零假设就意味着平稳？]]></description>
      <guid>https://stats.stackexchange.com/questions/648327/how-does-kpss-test-for-stationarity-if-it-is-about-trend-stationarity-vs-unit-ro</guid>
      <pubDate>Thu, 30 May 2024 23:20:38 GMT</pubDate>
    </item>
    <item>
      <title>是否可以使用粒子边际大都市黑斯廷斯来估计转换矩阵和输入？</title>
      <link>https://stats.stackexchange.com/questions/648325/is-it-possible-to-use-particle-marginal-metropolis-hastings-to-estimate-the-tran</link>
      <description><![CDATA[状态空间模型定义为：
$$x_{t+1} = A_tx_t + B_tu_t$$
$$y_{t+1} = H_tx_{t+1}$$
所以我的问题是：是否可以使用粒子边缘大都市黑斯廷斯根据观测值、矩阵 H 和 B 来估计转换矩阵 $$A_t$$ 和输入 $$u_t$$？]]></description>
      <guid>https://stats.stackexchange.com/questions/648325/is-it-possible-to-use-particle-marginal-metropolis-hastings-to-estimate-the-tran</guid>
      <pubDate>Thu, 30 May 2024 22:55:38 GMT</pubDate>
    </item>
    <item>
      <title>线性模型关于残差的导数</title>
      <link>https://stats.stackexchange.com/questions/648323/derivative-of-linear-model-with-respect-to-residual</link>
      <description><![CDATA[我正在查看维基百科页面上有关总体最小二乘法的两个部分，具体来说：
#Allowing_observation_errors_in_all_variables 和 #Example
我有两个问题，第一个是如何对线性
模型的残差求导，第二个，在维基百科页面上的具体方程中，$K_{X}$ 是向量还是矩阵？
以下是这两个部分的屏幕截图：


所以我的第一个问题是示例中的公式 1（我的注释）应该是描述中的公式 3？一旦我根据示例的公式 3 得到公式，我如何对残差取导数以得到 $K_{X}$ 和 $K_{Y}$，这些是向量还是矩阵？]]></description>
      <guid>https://stats.stackexchange.com/questions/648323/derivative-of-linear-model-with-respect-to-residual</guid>
      <pubDate>Thu, 30 May 2024 21:50:32 GMT</pubDate>
    </item>
    <item>
      <title>在评估比例风险假设的平滑缩放 Schoenfeld 残差图时，曲线是否应该在零附近？</title>
      <link>https://stats.stackexchange.com/questions/648322/should-the-curve-be-around-zero-when-assessing-the-smoothed-scaled-schoenfeld-re</link>
      <description><![CDATA[我正在使用平滑缩放的 Schoenfeld 残差图来评估比例风险假设。我对平滑缩放的 Schoenfeld 残差图所显示的内容有相当的理解，但我仍然对一些细节感到困惑。假设比例风险假设没有被违反，那条线到底应该在哪里？我之前在 Stack Exchange 上读到，我应该寻找一条几乎平坦的平滑曲线，它与 coxph() 系数值偏差不大。
但是，我也被告知这条线应该接近 0，因为 Schoenfeld 残差和生存时间之间的相关性检验应该为零（零假设），这表明比例风险假设没有被违反。我希望有人能详细说明。
提前谢谢！]]></description>
      <guid>https://stats.stackexchange.com/questions/648322/should-the-curve-be-around-zero-when-assessing-the-smoothed-scaled-schoenfeld-re</guid>
      <pubDate>Thu, 30 May 2024 21:21:47 GMT</pubDate>
    </item>
    <item>
      <title>将两个相关变量的联合 pmf 建模为 p(x)*pmf(E(y|x))</title>
      <link>https://stats.stackexchange.com/questions/648320/modelling-the-joint-pmf-of-2-correlated-variables-as-pxpmfeyx</link>
      <description><![CDATA[让 x,y 为 2 个相关计数。我们想要对联合 pmf p(x,y) 进行建模。我们知道 p(x,y) = p(x)p(y|x) = p(y)(x|y)。但是，当我们不知道 y|x，但可以估计 E(y|x) 时会发生什么？我们不能使用 p(x)*pmf(E(y|x) 来建模 p(x,y) 吗？
下面，我生成两个相关的泊松变量。然后，我估计给定 x 的预期 y，E(y|x)。之后，我生成 x 的边际 pmf。最后，我计算 p(x)*pmf(E(y|x) 来创建一个矩阵，该矩阵用于表示联合 pmf p(x,y)。
我正在对 pXY 矩阵的行和列求和，希望得到边际分布。这对于 p(x) 是正确的。然而，对于 p(y) 来说，情况并非如此，它的方差明显更高，表明我的逻辑存在问题。有人能解释一下我做错了什么，以及在这个例子中我们如何才能得到 (x,y) 的正确联合 pmf 吗？
import numpy as np
from scipy.stats import norm, poisson

def generate_correlated_poisson(N, mu, rho):
# 步骤 1：生成相关的高斯随机变量
mean = [0, 0] # 高斯变量的平均值
cov = [[1, rho], [rho, 1]] # 协方差矩阵

# 从二元正态分布生成 N 个样本
gaussian_samples = np.random.multivariate_normal(mean, cov, N)

# 步骤 2：使用 CDF 将高斯变量转换为均匀变量
uniform_samples = norm.cdf(gaussian_samples)

# 步骤 3：使用逆 CDF (PPF) 将均匀变量转换为泊松变量
poisson_samples_x = poisson.ppf(uniform_samples[:, 0], mu)
poisson_samples_y = poisson.ppf(uniform_samples[:, 1], mu)

return poisson_samples_x, poisson_samples_y

# 参数
N = 100000 # 样本大小
mu = 2.5 # 泊松分布的平均值
rho = 0.5 # 期望相关性

# 生成相关泊松变量
x, y = generate_correlated_poisson(N, mu, rho)

# 估计 E(y|x)
df = pd.DataFrame(columns=[&#39;y&#39;,&#39;x&#39;],data=np.vstack((y,x)).T)
ols = smf.ols(&#39;y~x&#39;,data=df).fit() # 也可以使用 smf.poisson(&#39;y~np.log(x+1)&#39;,data=df).fit()
betas = ols.params.values

# 为 X 生成边际 pmf
pX = poisson.pmf(np.arange(0,21),2.5)

#生成联合分布 p(x)*pmf(E(y|x))
pXY = np.array([(pX[i]*poisson.pmf(np.arange(0,21),betas[0]+betas[1]*i)).tolist() for i in range(0,21)])

print(np.sum(pXY,axis=0)) #通过对矩阵行求和得到边际 pmf p(y)
print(np.sum(pXY,axis=1)) #通过对矩阵列求和得到边际 pmf p(x)
print(pX) #真实边际 p(x)
```
]]></description>
      <guid>https://stats.stackexchange.com/questions/648320/modelling-the-joint-pmf-of-2-correlated-variables-as-pxpmfeyx</guid>
      <pubDate>Thu, 30 May 2024 20:47:17 GMT</pubDate>
    </item>
    <item>
      <title>使用 K 均值方法解决时间序列的维数灾难</title>
      <link>https://stats.stackexchange.com/questions/648319/curse-of-dimensionality-in-time-series-with-k-means</link>
      <description><![CDATA[我一直在查看以下笔记本：时间序列聚类
其中作者说数据集受到“维度诅咒”的影响，因此应用tslearn提供的 TimeSeriesKMeans 是不正确的。相反，PCA 应用于列“值”时间序列的 2 个成分，然后使用普通的 k 均值函数划分聚类。
我在网上查了一下，似乎只有当数据集具有许多特征和少量数据时，才会发生“维数灾难”。文章中的数据集只有 2 个特征（时间戳、值）和许多数据，所以在我看来，不存在“维数灾难”，因此对所有“值”进行 PCA列是无用的。
我是否遗漏了重要的东西？
另一方面，如果文章是正确的，每次我想研究时间序列时，我可能会对所有值应用 PCA，然后使用经典的 k-means，而不是 tslearn 提供的 TimeSeriesKMeans 函数]]></description>
      <guid>https://stats.stackexchange.com/questions/648319/curse-of-dimensionality-in-time-series-with-k-means</guid>
      <pubDate>Thu, 30 May 2024 20:45:25 GMT</pubDate>
    </item>
    <item>
      <title>统计确定粒子数量</title>
      <link>https://stats.stackexchange.com/questions/648318/statistically-determining-a-count-of-particles</link>
      <description><![CDATA[我进行实验来测量各种药物。其中一项测量是对限制在小体积内的粒子数量感兴趣。
我实验中的原始数据是 32 x 32 像素大小的视频，其背景噪音较高，并且包含多个随机扩散的粒子。然后，我使用局部最大值轨迹跟踪粒子。
跟踪方法产生以下一组信息：
$$\vec p = \begin{bmatrix} x\\ y\\ \text{mass}
\\\ \text{ecc}\\ \text{raw_mass} \end{bmatrix}$$
其中 x、y 为位置，质量、raw_mass 为粒子强度（围绕选定半径 $r$ 积分）。ecc（偏心率）表示粒子的圆度。
现在，统计问题出现了。给定单个图像/帧中的一组 $N$ 粒子测量值，我很难从统计上形成一种方法来确定存在 $N$ 个粒子。例如，可能存在噪声，这会影响计数的决定，或者可能存在粒子聚集。
简而言之，给定一个图像和一组算法确定的向量 $\vec p$，每次测量真正反映粒子的概率是多少，以及该测量的置信度是多少。
尝试的想法
1.
在确定是否有粒子方面，必须有一种方法可以将相邻的强度与粒子进行比较。即，粒子的信号应该比背景/漏检的信号明显多。
2.
我还尝试集思广益，如何创建一种方法来调整一组参数以统计地推断这一决定。即，让阈值确定一个最小值，从而可以区分最不明亮的粒子。这需要动态地完成，因为每个训练集都应该非常大。由于实验的性质（荧光标记），这也存在物理限制
如果有任何统计参考/建议可以帮助我解决这个问题，请告诉我。
谢谢，
附言：标签的选择是我认为应该的，如果我应该更改任何内容，请告诉我。]]></description>
      <guid>https://stats.stackexchange.com/questions/648318/statistically-determining-a-count-of-particles</guid>
      <pubDate>Thu, 30 May 2024 20:31:52 GMT</pubDate>
    </item>
    <item>
      <title>计算比例数据的置信区间（多个数据点）</title>
      <link>https://stats.stackexchange.com/questions/648316/calculating-confidence-intervals-for-proportion-data-multiple-data-points</link>
      <description><![CDATA[各位 -
我正在寻找一种方法来计算数据系列（多个数据点的样本）的置信区间（例如 95%）或其他变异性指标，其中数据都是比例（即每个数据都在零和一之间）。我认为这种方法不同于计算连续数据的标准 CI，可以是任何数值等。请注意，我并不是要求对单个比例进行 CI 估计（例如，Clopper-Pearson 方法）。R 代码或 Excel 公式会有所帮助。似乎在任何基础教科书中都找不到这个。谢谢。
示例数据集：
0.12、0.24、0.93、0.56、0.02]]></description>
      <guid>https://stats.stackexchange.com/questions/648316/calculating-confidence-intervals-for-proportion-data-multiple-data-points</guid>
      <pubDate>Thu, 30 May 2024 20:21:41 GMT</pubDate>
    </item>
    <item>
      <title>非常低的 p 值的正确格式是什么？</title>
      <link>https://stats.stackexchange.com/questions/648307/what-is-the-proper-formatting-of-very-low-p-values</link>
      <description><![CDATA[一般来说，我相信应该给出精确的 p 值，而不是像“p &lt; 0.05”这样的值。但是，有时 p 值非常低，大约为 $10^{-10}$ 甚至更低。在什么情况下我们应该 a) 四舍五入并说“$p &lt; 10^{-5}$”或 b) 以科学计数法给出完整的估计值，例如“$p = 3.46\times 10^{-7}$”？]]></description>
      <guid>https://stats.stackexchange.com/questions/648307/what-is-the-proper-formatting-of-very-low-p-values</guid>
      <pubDate>Thu, 30 May 2024 19:10:14 GMT</pubDate>
    </item>
    <item>
      <title>方差分析不显著但事后分析显著 - 如何解释？</title>
      <link>https://stats.stackexchange.com/questions/648329/anova-not-significant-but-post-hoc-is-how-to-interpret</link>
      <description><![CDATA[我有一些关于动物的数据，它们的饮食（食肉动物、杂食动物、食草动物）以及它们的轨道相对于头骨中线的角度。通常，食肉动物的眼睛更多朝前，而食草动物的眼睛角度更大（眼睛在头部侧面），以便在进食/饮水等时能够看到更多周围环境。
我的数据如下所示：
头骨数据
我在同一个块中运行了方差分析和事后检验，但方差分析返回 p&gt;0.05，而 Tukey 显示某些组之间存在差异
diet.aov2 &lt;- aov(mean_pos ~ Diet, data= raw_skull)
summary(diet.aov)

TukeyHSD(diet.aov2)

----------

Df Sum Sq Mean Sq F 值 Pr(&gt;F)
Diet 2 501 250.5 2.345 0.13
残差 15 1602 106.8 
Tukey 均值多重比较
95% 家族置信水平

拟合：aov（公式 = mean_pos ~ Diet，数据 = raw_skull）

$Diet
diff lwr upr p adj
食草动物-食肉动物 16.474861 6.96985 25.979873 0.0003479
杂食动物-食肉动物 -3.728538 -12.86324 5.406165 0.5881155
杂食动物-食草动物 -20.203399 -29.17716 -11.229635 0.0000054

I没想到这是可能的，我也不知道该如何解释。事后检验的结果从生物学角度来看是有意义的，但为什么方差分析不显著呢？
这怎么解释呢？还是我应该进行不同的测试？
这是我的图
在此处输入图片描述]]></description>
      <guid>https://stats.stackexchange.com/questions/648329/anova-not-significant-but-post-hoc-is-how-to-interpret</guid>
      <pubDate>Thu, 30 May 2024 06:59:52 GMT</pubDate>
    </item>
    <item>
      <title>使用治疗后变量进行倾向评分加权</title>
      <link>https://stats.stackexchange.com/questions/648259/propensity-score-weighting-with-post-treatment-variables</link>
      <description><![CDATA[在进行倾向评分加权 (PSW) 时，强调要平衡治疗前变量，因为平衡治疗后变量可能会引入偏差。
我想问一下您对我们没有治疗前变量的情况的看法。设置如下：

我们的目标不是估计治疗的因果效应。相反，我们的目标是尽量减少或降低不同治疗组和对照组之间的不平衡。
在我们的案例中，“治疗”发生在儿童时期，而我们的样本是成年人。因此，除了年龄之外，我们没有治疗前变量。
具体来说，我们计划使用 Greg Ridgeway 开发的广义增强模型 (GBM) 来估计多项治疗的倾向得分。

我们发现朴素无加权模型和 PSW 模型的估计值之间没有显著差异。
我想知道我们是否仍然可以将 PSW 与治疗后协变量一起使用，因为我们没有发现这里存在显著治疗后偏差的证据。此外，正如您可能猜到的那样，在我们的数据设置中，我们不能选择其他方法，例如 IV 或 DID。]]></description>
      <guid>https://stats.stackexchange.com/questions/648259/propensity-score-weighting-with-post-treatment-variables</guid>
      <pubDate>Thu, 30 May 2024 05:00:25 GMT</pubDate>
    </item>
    </channel>
</rss>