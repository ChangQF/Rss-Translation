<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最近的问题 - 交叉验证</title>
    <link>https://stats.stackexchange.com/questions</link>
    <description>来自 stats.stackexchange.com 的最新 30 条</description>
    <lastBuildDate>Sun, 12 Jan 2025 09:15:31 GMT</lastBuildDate>
    <item>
      <title>估计混合效应模型后，如何使用附加数据更新新组的 BLUP？</title>
      <link>https://stats.stackexchange.com/questions/659906/how-to-update-blup-for-a-new-group-with-additional-data-after-estimating-a-mixed</link>
      <description><![CDATA[问题。在估计混合效应模型后，如何更新随机效应的 BLUP 以适应具有额外数​​据的新组，从而实现准确预测？
目标。我有水污染物浓度的纵向数据，每个单位（即样品采集点）的观测次数随时间变化，范围在 1 到 10 之间。除了在同一地点重复测量外，这些地点还按水系统聚类（由于共用管道），而水系统又按地理区域聚类（由于共用水源）。研究目的是创建一个预测模型，以准确预测预测站点未来时间点的水污染物浓度，理想情况下具有可解释的预测、置信度或可信区间。预测地点及其水系统可能包括在模型开发样本中，也可能不包括在内，但将提供其历史数据（包括响应和预测因子），而这些数据在模型估计时不可用。
现有方法。我的理解是，最合适的模型类型是具有时间趋势平滑函数的混合效应 Cox 比例风险模型，因为 Cox 模型对于严格正响应和非检测删失具有分布自由的灵活性。但我不认为模型类型在特定地点预测的方法中很重要。因此，为了概念简单起见，我们可以在线性混合模型下进行讨论。随机效应方差可能很大，尤其是聚集在地理区域聚集的水系统中的收集点的随机截距。因此，控制新组的随机效应对于减少预测误差非常重要。我注意到，在混合效应模型的后估计例程中，有几个统计软件包允许新组，例如 R 软件包 lme4 在 predict() 中提供了参数 allow.new.levels = 。但是，启用此参数将 (1) 将所有随机系数设置为 0，并为新组提供非常大的标准误差（完全包括随机效应的不确定性）或 (2) 将随机系数设置为其组特定的 BLUP，并为现有组提供非常小的标准误差（我推测不包括任何随机效应的不确定性）。我认为它们都不符合我的目标。
暂定方法。我认为我应该利用在模型估计后在模型部署期间提交的预测站点的历史数据，以减少预测误差。我的计划如下。

使用频率论框架和软件包下的模型开发样本估计模型。提交新站点数据后，通过结合模型开发样本和新站点数据重新估计模型。使用模型开发样本是因为新站点数据的样本量可能太小，无法估计所有参数。为了加速重新估计的收敛，请在先前的点估计中设置固定系数和随机效应方差（或其他一些估计量，如对数标准差）的起始值。然后将 predict() 应用于重新估计的模型，其中新站点成为现有组。但是，当参数 re.form = NULL 包含所有随机效应时，我不知道预测标准误差中不包括哪种不确定性。
使用贝叶斯框架和包下的模型开发样本估计模型。提交新站点数据后，仅使用新站点数据拟合新模型，并将先验设置为先前估计的后验分布。我认为在重新拟合过程中不需要大量的模型开发样本，因为其信息已包含在所选先验中。如果先验很强，贝叶斯模型似乎在样本量小于参数数量时有效。但我对线性混合效应模型的解读表明，BLUP 是由整个响应系列生成的，因此仅新站点数据可能不足以对随机效应给出良好的估计。但是，如果我结合模型开发样本和新站点数据来重新估计模型，模型拟合过程可能会对最终用户花费太长时间。

我想到了上述两个选项，但我没有理论和实践经验来支持任何一个。你有什么建议？]]></description>
      <guid>https://stats.stackexchange.com/questions/659906/how-to-update-blup-for-a-new-group-with-additional-data-after-estimating-a-mixed</guid>
      <pubDate>Sun, 12 Jan 2025 08:14:53 GMT</pubDate>
    </item>
    <item>
      <title>DDPM 中的 $p_{\theta}(x_{t-1} | x_t)$ 仍然是条件 pdf 吗？</title>
      <link>https://stats.stackexchange.com/questions/659905/is-p-thetax-t-1-x-t-in-ddpm-still-a-conditional-pdf</link>
      <description><![CDATA[我正在阅读这篇关于去噪扩散模式的论文。在逆向过程中，它指出我们无法直接计算$q(x_{t-1} | x_t)$，因此我们改为使用$p_{\theta}(x_{t-1} | x_t)$来近似它。如果我错了请纠正我，但我相信$q(x_{t-1} | x_t)$是给定$\mathbf{X}_{t}$的随机变量$\mathbf{X}_{t-1}$的条件pdf。这是否意味着近似值$p_{\theta}$也是条件pdf？谢谢。]]></description>
      <guid>https://stats.stackexchange.com/questions/659905/is-p-thetax-t-1-x-t-in-ddpm-still-a-conditional-pdf</guid>
      <pubDate>Sun, 12 Jan 2025 08:12:11 GMT</pubDate>
    </item>
    <item>
      <title>在因子分析中，为什么因子载荷矩阵中有效参数的个数不是$\frac 12 k(k+1)$？</title>
      <link>https://stats.stackexchange.com/questions/659902/in-factor-analysis-why-is-the-number-of-effective-parameters-in-the-factor-load</link>
      <description><![CDATA[如果这是一个基本问题，我很抱歉，但我不知道我错在哪里。
考虑因子分析模型
\begin{equation*}
\begin{array}{cccccc}
X &amp; = &amp; L&amp; f &amp; + &amp; u \\ 
p\times 1 &amp; &amp; p\times k &amp; k\times k &amp; &amp; 
\end{array} 
\end{equation*
其中 $f \sim N(\mathbf 0, I)$ 和 $X\sim N(\mathbf 0,\Sigma) $。
在进行似然比检验时，我们需要确定因子载荷矩阵 $L$ 中有效参数的数量。
虽然 $L$ 有 $pk$ 个条目，但如果 $L$ 适合模型，那么对于任何 $O$ 正交，$LO$ 也适合。
因此我们实际上需要少于 $pk$ 个数字。我们知道这个数字是 $pk- \frac 12 k(k-1)$。
我理解我们可以添加限制，即 $L&#39;\Psi^{-1} L$ 是对角线的，
这又增加了 $\frac 12 k(k+1)$ 个限制。因此我们得到结果 $pk- \frac 12 k(k-1)$。
但我还推导出有效参数的数量是 $\frac 12 k(k+1)$，我不知道我错在哪里。
我的理由：假设我们知道 $\triangle$ 位置的参数：
\begin{equation*}
\begin{pmatrix}
\triangle &amp; \cdots &amp; &amp; &amp; \triangle \\ 
&amp; \triangle &amp; \cdots &amp; &amp; \triangle \\ 
&amp; &amp; &amp; &amp; \cdots \\ 
\cdots &amp; &amp; &amp; \cdots &amp; \triangle \\ 
\cdots &amp; &amp; &amp; &amp; 
\end{pmatrix} 
\end{equation*
即前 $k\times k$ 行和列的 $k$ 子矩阵的上对角线元素，
然后因为我们知道 $LL^T$，即每行的内积，
然后我们可以确定 $(2,1)$ 元素，并完成第二行。
第三行有两个未知元素，可以通过第三行和第一（第二）行的内积等确定，我们可以完成 $k\times k$ 子矩阵。
一般情况下$\text{rank}( L )=k$，而对于$(k+1),\cdots, p$行，由于我们知道它们与前$k$行的内积，而前$k$行构成一个非奇异矩阵，因此我们可以唯一地确定整个$L$。
因此$L$中有效参数的数量为$\frac 12 k(k+1)$。]]></description>
      <guid>https://stats.stackexchange.com/questions/659902/in-factor-analysis-why-is-the-number-of-effective-parameters-in-the-factor-load</guid>
      <pubDate>Sun, 12 Jan 2025 03:36:01 GMT</pubDate>
    </item>
    <item>
      <title>使用 R 进行多层次结构方程建模？</title>
      <link>https://stats.stackexchange.com/questions/659901/using-r-for-multilevel-structural-equation-modeling</link>
      <description><![CDATA[我通常使用 Mplus，但手头没有。有人告诉我 MSEM 可以在 R 中完成，但我需要指导（网站或代码），因为我是 R 新手。
我对使用随机斜率作为 2 级结果的预测因子很感兴趣。任何关于在哪里查看的建议都会有所帮助！]]></description>
      <guid>https://stats.stackexchange.com/questions/659901/using-r-for-multilevel-structural-equation-modeling</guid>
      <pubDate>Sun, 12 Jan 2025 03:29:10 GMT</pubDate>
    </item>
    <item>
      <title>零协方差何时意味着独立？</title>
      <link>https://stats.stackexchange.com/questions/659900/when-does-null-covariance-imply-independence</link>
      <description><![CDATA[众所周知，如果 $X,Y$ 是独立随机变量，则 $\text{Cov}(X,Y) = 0$。认为这一事实的反面成立也是一种很常见的谬论。但是，我的问题是，反面成立的情况不是经常发生吗？
例如，如果随机向量 $(X,Y)$ 呈正态分布，是一个二维随机向量，则 $X,Y$ 独立就等同于它们具有零协方差。
继续下去，由于 CLT，假设 $(X,Y)$ 呈正态分布是很常见的（即使在大多数情况下不是这样）。因此，尽管零协方差在学术意义上并不意味着独立性，但从更实际的意义上来说却意味着独立性？]]></description>
      <guid>https://stats.stackexchange.com/questions/659900/when-does-null-covariance-imply-independence</guid>
      <pubDate>Sun, 12 Jan 2025 03:11:46 GMT</pubDate>
    </item>
    <item>
      <title>分层抽样和可变大小聚类的置信区间</title>
      <link>https://stats.stackexchange.com/questions/659897/confidence-intervals-for-stratified-sampling-and-variable-sized-clusters</link>
      <description><![CDATA[]]></description>
      <guid>https://stats.stackexchange.com/questions/659897/confidence-intervals-for-stratified-sampling-and-variable-sized-clusters</guid>
      <pubDate>Sun, 12 Jan 2025 00:25:49 GMT</pubDate>
    </item>
    <item>
      <title>并行化蒙特卡罗模拟最简单的方法是什么？</title>
      <link>https://stats.stackexchange.com/questions/659889/what-is-the-easist-way-to-parallelize-a-monte-carlo-simulation</link>
      <description><![CDATA[据我所知，并行化蒙特卡罗模拟归结为将问题分解为子问题，并行运行它们以产生多个马尔可夫链，最后将马尔可夫链连接在一起。
现在的问题是，没有直接的方法来连接马尔可夫链。
并行化蒙特卡罗模拟最简单的方法是什么？]]></description>
      <guid>https://stats.stackexchange.com/questions/659889/what-is-the-easist-way-to-parallelize-a-monte-carlo-simulation</guid>
      <pubDate>Sat, 11 Jan 2025 18:02:09 GMT</pubDate>
    </item>
    <item>
      <title>为什么在 SARIMA 模型中，时间序列的差分无助于使其平稳？</title>
      <link>https://stats.stackexchange.com/questions/659898/why-does-differencing-of-time-series-not-help-to-make-it-stationary-in-the-sarim</link>
      <description><![CDATA[我在 SARIMA 模型中差分后无法获得平稳时间序列。
我是时间序列分析的初学者，但我读到时间序列 Y_t = \nabla^d (1-L^s)^D X_t 应该是平稳时间序列。然而，在用值 s=12 和不同的 d 和 D 值进行差分后，我的时间序列似乎不是平稳分析 ACF 函数。我也尝试过一开始 lambda=0 的 Box–Cox 变换，但同样没用。
这是我的原始数据
原始数据 (data_ts)
它是非平稳的。
经过 lambda = 0 的 Box-Cox 变换之后
data_bc &lt;- BoxCox(data_ts, lambda=0)

Box-Cox 变换之后
这是 ACF 函数：
ACF 函数
然后我尝试对我的时间序列进行差分，结果如下：
ts_plot(diff(data_bc))
Acf(diff(data_bc))

差分后的时间序列图。
我的时间的 ACF系列。
在我看来，它可以是静止的，但从 ACF 来看，它不是。可能是因为季节性？因此，我尝试对滞后 s=12 的时间序列进行差分，然后再次进行差分（s=12、d=1、D=1）。
ts_plot(diff(diff(data_bc, lag=12)))
Acf(diff(diff(data_bc, lag=12)))

新时间序列
ACF
再次分析 ACF 函数，它似乎不是平稳的。我错了吗？那我该怎么办？
Box-Cox 变换、差分、消除季节性。我希望获得平稳的时间序列。]]></description>
      <guid>https://stats.stackexchange.com/questions/659898/why-does-differencing-of-time-series-not-help-to-make-it-stationary-in-the-sarim</guid>
      <pubDate>Sat, 11 Jan 2025 14:36:19 GMT</pubDate>
    </item>
    <item>
      <title>无法拟合高斯混合模型，估计错误参数</title>
      <link>https://stats.stackexchange.com/questions/659851/cant-fit-gaussian-mixture-model-estimates-wrong-parameters</link>
      <description><![CDATA[下面的测试从高斯混合模型生成样本，然后对其进行拟合。
拟合模型与原始模型完全不同。为什么？这怎么可能呢，结果不只是稍微不同——错误是巨大的。

原文：weights=[0.5, 0.5], means=[0, 0], sigmas=[1, 2]
拟合：weights=[0.525, 0.475], means=[-0.617, 0.716], sigmas=[1.434, 1.443]
代码（带图的完整代码)
import numpy as np
from sklearn.mixture import GaussianMixture

def fit_normal_mixture(*, n_components, values, random_state, n_init):
values = np.array(values).reshape(-1, 1) # 转换为 2D 数组
nmm = GaussianMixture(n_components, covariance_type=&#39;diag&#39;, random_state=random_state, n_init=n_init)
nmm.fit(values)
means = nmm.means_.flatten().tolist()
sigmas = np.sqrt(nmm.covariances_.flatten()).tolist()
weights = nmm.weights_.flatten().tolist()
return weights, means, sigmas

def sample_normal_mixture(*, weights, means, sigmas, n):
if not np.isclose(sum(weights), 1):
raise ValueError(&quot;Weights must sum to 1&quot;)
components = np.random.choice(len(weights), size=n, p=weights)
return np.random.normal(loc=np.array(means)[components], scale=np.array(sigmas)[components])

# 测试
if __name__ == &#39;__main__&#39;:
# 从正态混合模型生成样本
nmm_sample = sample_normal_mixture(weights=[0.5, 0.5], means=[0, 0], sigmas=[1, 2], n=10000)

# 将样本拟合到正态混合模型
print(fit_normal_mixture(n_components=2, values=nmm_sample, random_state=0, n_init = 10))

附言：是否可以告诉拟合算法使用 0 作为平均值？]]></description>
      <guid>https://stats.stackexchange.com/questions/659851/cant-fit-gaussian-mixture-model-estimates-wrong-parameters</guid>
      <pubDate>Sat, 11 Jan 2025 06:59:18 GMT</pubDate>
    </item>
    <item>
      <title>确保 Fisher 信息矩阵严格正定的条件</title>
      <link>https://stats.stackexchange.com/questions/659827/conditions-that-ensure-the-fisher-information-matrix-to-be-strictly-positive-def</link>
      <description><![CDATA[Fisher 信息矩阵定义为：
$$I(\theta):=E\left[\frac{\partial\log f(X;\theta)}{\partial \theta} \mid\theta\right]$$
其中 $f$ 是似然函数。
我正在寻找充分条件 - 最好是关于 $f$ 或 $\log f$ - 以确保 Fisher 矩阵严格正定。
正定性是证明最大似然估计量 (MLE) 渐近一致性的众所周知的临界条件。因此，这一探究具有重要意义。]]></description>
      <guid>https://stats.stackexchange.com/questions/659827/conditions-that-ensure-the-fisher-information-matrix-to-be-strictly-positive-def</guid>
      <pubDate>Fri, 10 Jan 2025 14:33:43 GMT</pubDate>
    </item>
    <item>
      <title>混合模型中部分合并聚类估计消失或超出总体估计</title>
      <link>https://stats.stackexchange.com/questions/658964/partial-pooled-cluster-estimates-going-away-or-beyond-grand-estimates-in-mixed-m</link>
      <description><![CDATA[我认为我对混合模型中部分池化的主要目标和特征有相当好的理解。然而，部分池化的实际执行中有一些细节与我期望从各个集群得到的行为相冲突。例如，在下面我将链接的所有三个演示中，使用了各种表达式来表明特定于集群的截距和斜率估计应该向样本中相应的总体估计移动（也允许保持静止）。但是，如果您仔细跟踪集群估计从无池化到部分池化版本的一些可视化运动，您就会看到集群估计实际上如何沿着各个轴远离总体估计。在某些情况下，集群估计值也可能超出总体估计值。
https://www.tjmahr.com/plotting-partial-pooling-in-mixed-effects-models/
https://towardsdatascience.com/when-mixed-effects-hierarchical-models-fail-pooling-and-uncertainty-77e667823ae8
https://m-clark.github.io/posts/2019-05-14-shrinkage-in-mixed-models/（编辑：不幸的是，动画不再可见，至少在我的浏览器中）。
至少定义集群截距重新定位的公式（参见上面的中间链接和此视频讲座）表明，单个集群的移动范围应该限制在初始无池位置和总体估计值之间（据我所知，如有必要，请纠正我）。但是，上述相互矛盾的观察结果是否与同一模型中随机截距和斜率的存在及其相关性有关？我还没有拿尺子，但我的直觉也告诉我，尽管聚类估计值可以沿着单个轴发散，但也许在部分池化期间整体斜边会变小。错误：我实际上拿了尺子，通过从屏幕上测量，由于部分池化，至少一个整体距离增加了（参见最后列出的网站、df = create_data(sd_int = .25, sd_slope = 1) 的图和右上角的一个聚类）。
如果观察到的行为不是由错误引起的，而且我没有误解什么，那么原因是否可以从直观的实际意义上得到解释。为什么这种行为是有益的，尽管它似乎与部分池化的主要原则不一致。为什么所有聚类估计值不应该沿着截距轴和斜率轴更接近总体估计值。]]></description>
      <guid>https://stats.stackexchange.com/questions/658964/partial-pooled-cluster-estimates-going-away-or-beyond-grand-estimates-in-mixed-m</guid>
      <pubDate>Thu, 19 Dec 2024 12:35:28 GMT</pubDate>
    </item>
    <item>
      <title>DF 和 ADF 检验结果相矛盾</title>
      <link>https://stats.stackexchange.com/questions/657656/conflicting-results-in-df-and-adf-tests</link>
      <description><![CDATA[我正在对 globtemp 数据集进行单位根检验，该数据集显然是具有趋势和季节性（非平稳）的序列。但是，当应用简单的 Dickey-Fuller 检验时，我获得的 p 值很小，导致拒绝零假设并表明该序列是平稳的。
同时，使用增强版本 (ADF) 执行测试，使用 R 的默认滞后数 (k)，p 值不会拒绝零假设，表明时间序列是非平稳的。话虽如此，我很困惑，不明白这种差异。为什么在简单的 DF 测试（k=0）的情况下，测试无法产生真实的结果？此外，如果测试对“k”的选择如此敏感，那么最好的方法是什么？我们应该始终依赖默认值吗？
此外，我读到残差中存在自相关违反了测试中残差不相关的假设，可能会导致错误的结果。因此，我还评估了第一次测试（DF）残差中是否存在自相关，它们的行为与白噪声的行为一致（我也使用 Box-Ljung 对此进行了测试）。这让我对上面提到的不一致的结果更加困惑。
可以检查下面我所做的代码：
library(tseries)

globtemp &lt;- stats::ts(
c(-0.32, -0.32, -0.4, -0.39, -0.65, -0.43, -0.4, -0.52, -0.3, -0.12,
-0.4, -0.42, -0.39, -0.45, -0.35, -0.36, -0.19, -0.14, -0.37, -0.22,
0, -0.08, -0.24, -0.36, -0.49, -0.27, -0.19, -0.43, -0.29, -0.3,
    -0.29、-0.29、-0.28、-0.23、-0.04、-0.02、-0.24、-0.42、-0.35、-0.16、
    -0.17、-0.09、-0.13、-0.16、-0.14、-0.14、0.1、-0.03、0.03、-0.18、
    -0.06、0.04、0.02、-0.13、0.03、-0.06、0.02、0.13、0.13、-0.03、
    0.15、0.12、0.1、0.04、0.11、-0.04、0.01、  0.13、-0.01、-0.06、
    -0.14、-0.02、0.04、0.14、-0.07、-0.06、-0.17、0.1、0.1、0.05、
    -0.01、0.08、0.02、0.02、-0.26、-0.16、-0.09、-0.02、-0.12、0.03、
    0.04、-0.11、-0.07、0.19、-0.07、-0.05、-0.22、0.16、0.09、0.14、
    0.28、0.39、0.07、0.29、0.11、0.11、0.16、 0.32, 0.35, 0.25,
0.47, 0.41, 0.13),
start=1880, end = 1992)

plot(globtemp)

adf.test(globtemp, k=0) #DF 检验
#Dickey-Fuller = -3.4235, 滞后阶数 = 4, p 值 = 0.05414

dx &lt;- diff(globtemp) 
x_lag &lt;- globtemp[-length(globtemp)] 
df_model &lt;- lm(dx ~ x_lag) 
summary(df_model)

residuals_df &lt;- resid(df_model)
acf(residuals_df, 50, main = &quot;&quot;) #否自相关
Box.test(residuals_df, lag = 15, type = &quot;Ljung-Box&quot;)

adf.test(globtemp) #ADF 默认为 &quot;k&quot;
#Dickey-Fuller = -3.4235, 滞后阶数 = 4, p 值 = 0.05414
]]></description>
      <guid>https://stats.stackexchange.com/questions/657656/conflicting-results-in-df-and-adf-tests</guid>
      <pubDate>Fri, 22 Nov 2024 04:44:14 GMT</pubDate>
    </item>
    <item>
      <title>拟合优度是检验相关预测因子有用性的合理方法吗？</title>
      <link>https://stats.stackexchange.com/questions/620586/is-goodness-of-fit-a-reasonable-way-to-test-the-usefulness-of-correlated-predict</link>
      <description><![CDATA[在假设检验框架下，我想对 $Y \sim X_1 + X_2 + Z$ 进行建模，其中 X_1 和 X_2 是同一构造的两个相关且可能相关的度量。
使用 ANOVA 来测试模型拟合度是否合理，以此来测试此构造是否与 Y 有关系？
以下是一些 R 伪代码，概述了我所提出的建议：
fit_1 = lm(y ~ z, data = df)
fit_2 = lm(y ~ x1 + y1 + z, 
data = df)

anova(fit_1, fit_2)
]]></description>
      <guid>https://stats.stackexchange.com/questions/620586/is-goodness-of-fit-a-reasonable-way-to-test-the-usefulness-of-correlated-predict</guid>
      <pubDate>Wed, 05 Jul 2023 13:39:54 GMT</pubDate>
    </item>
    <item>
      <title>MA(1)-GARCH(1,1) 过程的无条件方差</title>
      <link>https://stats.stackexchange.com/questions/616494/unconditional-variance-of-ma1-garch1-1-process</link>
      <description><![CDATA[令 $y_t = \Delta{p_t}$ 表示资产对数收益的时间序列，其中 $p_t$ 是对数价格； $y_t$ 由条件异方差 MA(1) 过程生成
$y_t = \epsilon_t + \theta \epsilon_{t-1}$，其中 $\epsilon_t = \sqrt{h_t}z_t$ 且
$z_t\sim i.i.d N (0,1) $ 其中 $|\theta|&lt;1$，
$h_t = \omega+\alpha \epsilon_t^2+\beta h_{t-1},\quad \omega&gt;0, \alpha&gt;0 ,\alpha+\beta&lt;1$.

推导无条件均值$E(y_t)$、无条件方差$Var(y_t)$和自相关函数$y_t, \rho(k),k=1,2,.....$的表达式

我计算出无条件均值等于 0，因为$E(\sqrt{h_t} z_t)+\theta E(\sqrt{h_{t-1}}z_{t-1})=0 $
对于无条件方差$Var(y_t)= E(y_t^2)= (h_t z_t^2+\theta^2 h_{t-1} z_t^2)$ = $E(h_t+\theta^2 h_{t-1})$ 因为 $z_t\sim i.i.d N (0,1)$。
从现在开始我不确定。我是否应该用 $h_t$ 来代替？
任何帮助都将不胜感激。]]></description>
      <guid>https://stats.stackexchange.com/questions/616494/unconditional-variance-of-ma1-garch1-1-process</guid>
      <pubDate>Sun, 21 May 2023 16:21:53 GMT</pubDate>
    </item>
    <item>
      <title>多日时间序列预测的贝叶斯方法</title>
      <link>https://stats.stackexchange.com/questions/490623/bayesian-methods-for-multi-day-time-series-prediction</link>
      <description><![CDATA[我一直在研究时间序列的循环神经网络和 LSTM 模型，有趣的是它们可以预测未来几天的情况。例如，我可以输入 100 天的情况并预测未来 7 天或 10 天的情况。
我想知道是否有办法使用贝叶斯时间序列模型进行这种多步时间序列预测？现在让我更精确地说明一下我的意思。贝叶斯模型显然可以根据前 1、2 或 3 天的情况预测未来一天的情况。这是一个简单的贝叶斯自回归过程。但是，给定前几天、几周或几个月的训练数据，是否可以同时预测未来 2、3、4 天或更多天的情况？
现在，如果通常的模型和方法一次只能输出一天的情况，因此无法预测未来几天的情况，那就没问题了。在这些情况下，我会提前一天预测，将预测附加到数据集并再次迭代预测。这样就可以了。如果是这样，那么有人可以简单地指出这一点。但我不确定这种多输出想法是否适用于贝叶斯模型？]]></description>
      <guid>https://stats.stackexchange.com/questions/490623/bayesian-methods-for-multi-day-time-series-prediction</guid>
      <pubDate>Tue, 06 Oct 2020 01:55:52 GMT</pubDate>
    </item>
    </channel>
</rss>