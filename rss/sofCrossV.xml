<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最近的问题 - 交叉验证</title>
    <link>https://stats.stackexchange.com/questions</link>
    <description>来自 stats.stackexchange.com 的最新 30 条</description>
    <lastBuildDate>Sat, 23 Nov 2024 21:16:33 GMT</lastBuildDate>
    <item>
      <title>是否有更好的回归线适合以下数据</title>
      <link>https://stats.stackexchange.com/questions/657739/is-there-a-better-regression-line-that-fit-the-following-data</link>
      <description><![CDATA[全部，
下面是 x 和 y 的散点图。我正在尝试找到最适合它的回归曲线。线性（红色）和三次（黑色）回归曲线非常相似。想知道是否有更好的回归技术来拟合这些数据。下面是我的 python 脚本数据。

#!/usr/bin/env python3
# -*- 编码：utf-8 -*-

将 matplotlib.pyplot 导入为 plt
将 numpy 导入为 np
将 statsmodels.api 导入为 sm

f = open(&#39;../../../data_files/regression/output.txt&#39;)

_col1=[]
_col2=[]
for ll in f:
a=ll.split(&#39;,&#39;)[0]
_col1.append(float(a))

b=ll.split()[1]
_col2.append(float(b))

x=np.array(_col1)
y=np.array(_col2)

x_with_ones=np.array((np.ones(len(x)),x)).T

model1 = sm.OLS(y,x_with_ones).fit()

_x_test=np.array([0.008,0.009,0.010,0.011,0.012])
x_test1=np.array((np.ones(5),_x_test)).T

out1=model1.predict(x_test1)
print(model1.summary())
#%%
# 多元回归
x_poly = np.array((np.ones(len(x)),x,x**2,x**3))
model2=sm.OLS(y,x_poly.T).fit()
x_test2=np.array((np.ones(len(_x_test)),_x_test,_x_test**2,_x_test**3)).T
out2= model2.predict(x_test2)
print(model2.summary())

plt.figure()
plt.scatter(x,y)
plt.plot(_x_test,out1,&#39;-r&#39;,label=&#39;linear&#39;)
plt.plot(_x_test,out2,&#39;-k&#39;,label=&#39;polynomial (cubic)&#39;)
plt.legend()

数据文件已上传至box.com 这里
谢谢]]></description>
      <guid>https://stats.stackexchange.com/questions/657739/is-there-a-better-regression-line-that-fit-the-following-data</guid>
      <pubDate>Sat, 23 Nov 2024 21:09:24 GMT</pubDate>
    </item>
    <item>
      <title>使用 ACF 和 PACF 进行 ARMA 建模的问题</title>
      <link>https://stats.stackexchange.com/questions/657737/problems-with-using-acf-and-pacf-for-arma-modelling</link>
      <description><![CDATA[
这是我的变量$\Delta y_t,$的一阶差分的ACF和PACF，我使用了ADF检验、PP检验、Schmidt Phillips检验和DFGLS检验，得到了与我的变量$\Delta y_t$ 的积分阶为 0，但从我们所学的知识来看，这些图似乎并不表明它是平稳的。
我一直在尝试在 $\Delta y_t,$ 上拟合 ARMA 模型，我们所学的方法是查看两个图中的最高显着滞后来确定 AR 和 MA 过程的阶数，然后使用 BG 检验自相关来解析模型（如果没有相关性）。
我的 AR 滞后是 PACF 的 11，MA 滞后是 ACF 的 16。我试图解析模型，但得到的结果非常不一致且不可预测。我正在使用 eviews，它不允许我输入这么多项，所以我从 ARMA (10,0,10) 开始。对于 ARMA(10,0,10)，我得到模型是非平稳的，因为其中一个倒置 AR 根为 1，并且残差之间存在高度序列相关性。但是对于 ARMA(10,0,9)，我得到它是平稳的，并且没有任何序列相关性。对于 ARMA (4,0,2)，我得到它是平稳的，但具有序列相关性。
我不明白我错在哪里。请帮忙。]]></description>
      <guid>https://stats.stackexchange.com/questions/657737/problems-with-using-acf-and-pacf-for-arma-modelling</guid>
      <pubDate>Sat, 23 Nov 2024 19:32:22 GMT</pubDate>
    </item>
    <item>
      <title>使用小样本减少极端概率预测</title>
      <link>https://stats.stackexchange.com/questions/657735/reducing-extreme-probability-predictions-using-a-small-sample</link>
      <description><![CDATA[假设一场比赛中有 2 名赛车手，我知道每个赛车手的成绩列表（数字越小越好）。假设第一个赛车手的成绩如下：
X1 = [6, 8, 10]

第二个赛车手的成绩如下：
X2 = [9, 11]

因此，所有赛车手的向量长度不必相同。我想要做的是计算每个赛车手获胜的概率。我假设每个赛车手的时间发生概率等于 1/N，其中 N 是该赛车手的样本数。因此，对于这个例子，第一个赛车手获胜的概率是：
1/3 * 2/2 + 1/3 * 2/2 + 1/3 *1/2 = 5/6

问题是，如果我们将 X2 = [11, 12]，那么它会计算出第一个赛车手将始终获胜，这是一个有点极端的预测，因为真正的比赛时间可能会遵循某种钟形曲线。所以我基本上需要一种将极端预测转化为不那么极端的方法。例如，转换
[1, 0] -&gt; [0.9, 0.1]

而合理预测的某些值应该保持不变
[0.7, 0.3] -&gt; [0.7, 0.3]（或与原始值非常相似）

是否有一些函数可用于转换这样的值？]]></description>
      <guid>https://stats.stackexchange.com/questions/657735/reducing-extreme-probability-predictions-using-a-small-sample</guid>
      <pubDate>Sat, 23 Nov 2024 18:12:38 GMT</pubDate>
    </item>
    <item>
      <title>投资组合损失的概率分布</title>
      <link>https://stats.stackexchange.com/questions/657733/probability-distribution-of-portfolio-loss</link>
      <description><![CDATA[我尝试做这个练习，但有些地方不太对劲。我们需要计算，参考一年的时间范围，预期违约次数和违约概率等于由 200 笔贷款组成的投资组合的预期违约次数，每笔贷款的违约概率 (PD) 等于 1%。建议使用泊松分布。我是这样计算预期违约次数的 $E(D) = n\times PD = 200\times0.01 = 2$
使用泊松分布，我计算出违约概率等于预期违约次数 (2)，即 $P(X=2) = \frac{\lambda^x e^{-\lambda}}{x!}$ = $\frac{2^2 e^{-2}}{2!}$ = 0.27
下一点不清楚：
利用上一点的概率，假设损失与 20000 次违约次数成正比，完成下面给出的投资组合损失概率分布：
\begin{matrix}
\textbf{金额} &amp; \textbf{概率} \\
0 &amp; 0.16 \\
20000 &amp; ? \\
40000 &amp; ? \\
60000 &amp; 0.22 \\
80000 &amp; 0.08 \\
100000 &amp; 0.02 \\
\end{matrix
有人能帮我填一下这个表格吗？
如果表中的初始值（无默认值）与 0.16% 的概率相关，那么我在第一点的答案可能不正确，因为 $P(X=0) \frac{\lambda^x e^{\lambda}}{x!} = e^{-2}= 0.135$
那么 X=1 等于 X=2 的概率是 $P(X=1) \frac{\lambda^x e^{\lambda}}{x!} = \lambda e^{-2}= 0.27$
但是，如果我们将这些概率添加到表中的概率中，它就超出了值 1. 我该如何解决这个问题？]]></description>
      <guid>https://stats.stackexchange.com/questions/657733/probability-distribution-of-portfolio-loss</guid>
      <pubDate>Sat, 23 Nov 2024 17:58:57 GMT</pubDate>
    </item>
    <item>
      <title>如何在这个三张牌游戏中最大限度地获胜？</title>
      <link>https://stats.stackexchange.com/questions/657729/how-to-maximize-winning-in-this-3-card-game</link>
      <description><![CDATA[假设您正在玩一个游戏，每轮您需要从三张牌中选择一张：
[1] [2] [3]

其中一张是输，另外两张是赢。每轮都是独立的，每次都会洗牌。因此，每次输的概率都是 $\frac{1}{3}$，赢的概率都是 $\frac{2}{3}$。
当您选择一张牌时，游戏管理员不会向您显示所有牌。他们只会向您显示您选择的牌。例如对于上面的例子，如果你选了 [2] 并且它是一张输牌，你会看到：
[1] [L] [3]

如果你选了 [3] 并且它是一张赢牌，情况也是一样：
[1] [2] [W]

如何选牌才能最大化你获得赢牌的回合数？你应该随机选牌吗？还是总是选相同的牌就可以了？
上一轮结果的知识是否决定了下一轮的选择？]]></description>
      <guid>https://stats.stackexchange.com/questions/657729/how-to-maximize-winning-in-this-3-card-game</guid>
      <pubDate>Sat, 23 Nov 2024 16:12:03 GMT</pubDate>
    </item>
    <item>
      <title>我对这个多元线性回归的评价正确吗？</title>
      <link>https://stats.stackexchange.com/questions/657728/is-my-evaluation-for-this-multiple-linear-regression-correct</link>
      <description><![CDATA[我正在研究多元线性回归，遵循 RegenerativeToday 在 https://www.youtube.com/watch?v=wH_ezgftiy0 上的教程，使用 https://github.com/rashida048/Datasets/blob/master/insurance.csv 上的保险数据集。不过，我比视频更进一步，将 MSE、MAE、调整后的 R2 和 RMSE 应用于我的模型。我担心的问题是，我得到的数字似乎非常大。对于训练数据：
训练数据中的观测数：535
因变量：6
R2：0.738388485444704
调整后的 R2：0.7354156273247574
均方误差：40267096.874797866
平均绝对误差：4539.378629153684
均方根误差：6345.636049664199

对于测试数据：
测试数据中的观测数：803
因变量：6
R2：0.7544700183565812
调整后的 R2： 0.7526192898517313
均方误差：34,610,344.63969177
平均绝对误差：4166.692650134549
均方根误差：5883.0557229803435

如果我理解正确的话，这意味着我可以预期模型的预测与实际保险费用会有 34,610,344 美元的偏差。有人能告诉我这个数据集是否需要这个吗？
我的代码，如果你需要的话，在这里：
import matplotlib.pyplot as plt
from scipy import stats
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
import pandas as pd
import numpy as np
from sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error

insurance = pd.read_csv(&#39;insurance.csv&#39;)

insurance[&#39;sex&#39;] = insurance[&#39;sex&#39;].astype(&#39;category&#39;)
insurance[&#39;sex&#39;] = insurance[&#39;sex&#39;].cat.codes
insurance[&#39;smoker&#39;] = insurance[&#39;smoker&#39;].astype(&#39;category&#39;)
insurance[&#39;smoker&#39;] = insurance[&#39;smoker&#39;].cat.codes
insurance[&#39;region&#39;] = insurance[&#39;region&#39;].astype(&#39;category&#39;)
insurance[&#39;region&#39;] = insurance[&#39;region&#39;].cat.codes

x = insurance.drop(columns = &#39;charges&#39;)
y = insurance[&#39;charges&#39;]

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.6, random_state=0)

lr = LinearRegression()
lr.fit(x_train, y_train)

y_intercept = lr.intercept_
coefficient = lr.coef_

y_predict_train = lr.predict(x_train)
plt.scatter(y_train, y_predict_train)
plt.xlabel(&quot;实际费用&quot;)
plt.ylabel(&quot;预测费用&quot;)
plt.show()

n_train = len(y_train)
print(f&quot;训练数据中的观测值数量：&quot;, n_train)
p = len(x.columns)
print(f&quot;依赖变量：&quot;, p)

#R2
r2 = r2_score(y_train, y_predict_train)
print(f&quot;R2：&quot;, r2)
#调整后的 R2：1 - (1-R^2)*((n-1)/(n-p-1))。在这种情况下，n 为 len(y_train)=535，且 p = 6
ar2 = 1 - (1-r2)*((n_train-1)/(n_train-p-1))
print(f&quot;Adjusted R2: &quot;, ar2)
#MSE
mse = mean_squared_error(y_train, y_predict_train)
print(f&quot;Mean Squared Error: &quot;, mse)
#MAE
mae = mean_absolute_error(y_train, y_predict_train)
print(f&quot;Mean Absolute Error: &quot;, mae)
#RMSE
sqmse = np.sqrt(mse)
print(f&quot;Root Mean Squared Error: &quot;, sqmse)

y_predict_test = lr.predict(x_test)
plt.scatter(y_test, y_predict_test)
plt.xlabel(&quot;实际费用&quot;)
plt.ylabel(&quot;预测费用&quot;)
plt.show()

n_test = len(y_test)
print(f&quot;测试数据中的观测值数量：&quot;, n_test)
p = len(x.columns)
print(f&quot;依赖变量：&quot;, p)
#显示 R2
r2 = r2_score(y_test, y_predict_test)
print(f&quot;R2：&quot;, r2)
ar2 = 1 - (1-r2)*((n_test-1)/(n_test-p-1))
print(f&quot;调整后的 R2：&quot;, ar2)
#MSE
mse = mean_squared_error(y_test, y_predict_test)
print(f&quot;均方误差：&quot;, mse)
#MAE
mae = mean_absolute_error(y_test, y_predict_test)
print(f&quot;平均绝对误差：&quot;, mae)
#RMSE
sqmse = np.sqrt(mse)
print(f&quot;均方根误差：&quot;, sqmse)
```
]]></description>
      <guid>https://stats.stackexchange.com/questions/657728/is-my-evaluation-for-this-multiple-linear-regression-correct</guid>
      <pubDate>Sat, 23 Nov 2024 15:49:48 GMT</pubDate>
    </item>
    <item>
      <title>针对区域调整的回归线与特定区域的回归线</title>
      <link>https://stats.stackexchange.com/questions/657727/regression-lines-adjusted-for-region-vs-region-specific-regression-lines</link>
      <description><![CDATA[我想了解黑色回归线和蓝色回归线之间的区别（幻灯片第 10 页）。
蓝色：针对区域调整的回归线，分别针对 N 和 S 区域绘制。
黑色：区域特定回归线
谢谢



]]></description>
      <guid>https://stats.stackexchange.com/questions/657727/regression-lines-adjusted-for-region-vs-region-specific-regression-lines</guid>
      <pubDate>Sat, 23 Nov 2024 15:43:04 GMT</pubDate>
    </item>
    <item>
      <title>二项式系列的概率问题</title>
      <link>https://stats.stackexchange.com/questions/657726/probability-problem-with-binomial-series</link>
      <description><![CDATA[大家好。我正在学习概率，有一道题：
&quot;假设 N 是一个离散随机变量，其概率函数为：
$$P(N = n) = 0,5^{n+1},$$，其中 n $\in$ {0,1,2,...&gt;
另一个离散随机变量服从条件分布
$$P(X = x|N = n) = \binom{n}{x}0,5^n$$
其中 $0 \leq x \leq n$。
X 的方差等于 7,5。正确还是错误？＆quot;
我使用了公式 $$P(X=x|N=n) = \frac{P(X=x,N=n)}{P(N=n)}$$
我发现
$$P(X=x,N=n) = \binom{n}{x}(0,5)^{2n+1}$$
我知道我可以在 N 中求和以找到 X 的边际函数，即
$$P(X = x) = \sum_{n = 0}^{\infty}\binom{n}{x}0,5^{2n+1}$$
对于 $0 \leq x \leq n$
但我无法解答这个系列。我是不是做错了什么我没注意到的事情？]]></description>
      <guid>https://stats.stackexchange.com/questions/657726/probability-problem-with-binomial-series</guid>
      <pubDate>Sat, 23 Nov 2024 15:24:17 GMT</pubDate>
    </item>
    <item>
      <title>Copulas：通过伪观测还是通过 CDF 获得均匀边际分布？</title>
      <link>https://stats.stackexchange.com/questions/657725/copulas-obtaining-uniform-marginal-distribution-via-pseudo-observation-or-via-c</link>
      <description><![CDATA[我正在为时间序列分析考试学习 copula，为了练习，我们的教授给我们布置了一道关于财务数据的练习题。
练习的要点之一是拟合椭圆 copula 以估计两种资产的超额收益之间的相关性，现在我有一些问题。
我是否应该使用 vinecopula 包来拟合最佳椭圆 copula（高斯或 t）？否则，我应该如何知道 copula 的参数？
要拟合 copula，我需要将数据转换为它们的均匀分布，对吗？
我读到，要做到这一点，有两种方法：

使用 pobs() 函数计算伪观测值
如果我知道边际分布（在我的例子中，我尝试使用 fitdistrplus 包找到最佳分布），则使用 CDF 获得均匀分布（对这一点并不完全确定）

我尝试了这两种方法，它们返回不同的 copula，这是有道理的。但主要的问题是，当我制作两个边际均匀分布的散点图时，我得到了一个使用 CDF 获得的奇怪的图。
这是使用 cdf 的图：

这是使用伪观测的图：

提前非常感谢]]></description>
      <guid>https://stats.stackexchange.com/questions/657725/copulas-obtaining-uniform-marginal-distribution-via-pseudo-observation-or-via-c</guid>
      <pubDate>Sat, 23 Nov 2024 14:36:15 GMT</pubDate>
    </item>
    <item>
      <title>单位根检验的功效</title>
      <link>https://stats.stackexchange.com/questions/657723/power-of-unit-root-tests</link>
      <description><![CDATA[我正在测试基本单位根检验的功效：ADF、PP 和 DFGLS。
具体来说，我正在生成这个序列：
$$y_t = \text{drift} + (\text{trend_coeff} \cdot t) + (\phi \cdot y_{t-1}) + e_t$$
对于 $\phi$ 的范围，介于 0 和 1 之间，包括 0 和 1。
从数学上讲，这从 [0,1) 得出一个趋势平稳过程：

在 $\phi$ = 1 时，它会产生一个具有随机趋势的过程：

对 $\phi = [0,1)$ 执行任何单位根检验都应拒绝零假设并接受平稳性，在 $\phi = 1$ 时，它应接受单位根的零假设。
期望：通过从结果中绘制 p 值，应该期望看到 $\phi = [0,1)$ 低 p 值（至少低于显着性水平），因为这将拒绝单位根检验的零值，并且看到 $\phi = 1$ 大 p 值（至少大于显着性水平），因为这意味着接受零值。
结果：
ADF 和 ADFGLS 都使用“AIC”，PP 使用 Newey-West 估计量进行滞后选择。
样本数量：300
drift=30
trend_coeff=10
sigma=20
模拟次数 = 20

问题：ADF-GLS 返回该钟形曲线的原因可能是什么？它不应该是 ADF 的改进版本吗？
注意：我在 python 中使用 Arch lib 中的 DFGLS。]]></description>
      <guid>https://stats.stackexchange.com/questions/657723/power-of-unit-root-tests</guid>
      <pubDate>Sat, 23 Nov 2024 14:04:38 GMT</pubDate>
    </item>
    <item>
      <title>用两个数字变量解释分类变量 - 哪种方法合适？</title>
      <link>https://stats.stackexchange.com/questions/657718/categorical-variable-explained-by-two-numeric-variables-which-methods-are-appr</link>
      <description><![CDATA[我有以下情况：
我有一份患者名单，这些患者被给予了两种药物，药物 A 和 药物 B，两者都是数字，作为处方数量，以及他们的治愈成功记录，作为分类变量，“治愈”/“未治愈”。有些患者只服用了药物 A，有些只服用了药物 B，而其他患者则服用了两种药物。
我现在的目标是分析哪种药物对治愈有积极作用，考虑两种药物之间可能存在的相互作用。我正在考虑进行逻辑回归。但我想知道是否还有其他有用的方法可以考虑？
提前谢谢您]]></description>
      <guid>https://stats.stackexchange.com/questions/657718/categorical-variable-explained-by-two-numeric-variables-which-methods-are-appr</guid>
      <pubDate>Sat, 23 Nov 2024 12:01:17 GMT</pubDate>
    </item>
    <item>
      <title>逻辑模型中的优势比</title>
      <link>https://stats.stackexchange.com/questions/657716/odds-ratio-in-a-logistic-model</link>
      <description><![CDATA[我在 R 中拟合了一个逻辑回归模型，获得了 95% 的准确率、0.98 的 AUC 得分、0.4 的 Brier 得分，灵敏度和特异性值约为 90%，因此我认为这是一个好的模型，而且我确信我没有过度拟合它，因为样本量足够大，我使用嵌套交叉验证进行训练，之前使用该数据集的工作具有相似的指标得分。但是当我使用来评估优势比时
# 优势比的整洁模型
OR_forward &lt;- tidy(model_forward, conf.int = TRUE, exp = TRUE)
# 查看
print(OR_forward)

我获得的模型
| term | 估计 | std.error | 统计 | p.value | conf.low | conf.high |
| -------------------- | --------------- | ---------------- | ---------------- | -------------- | --------------- | ---------------- |
| (截距) | 0.9803722 | 0.5585423 | -0.0354905 | 0.9716886222 | 0.34167844 | 3.099333e+00 |
| perimeter_worst | 138.4584082 | 1.6246777 | 3.0347988 | 0.0024069620 | 8.85712651 | 6.073470e+03 |
| smoothness_worst | 2.8558969 | 0.6659321 | 1.5758153 | 0.1150683769 | 0.86645297 | 1.232178e+01 |
| 纹理最差 | 21.1155988 | 0.8005182 | 3.8100470 | 0.0001389404 | 5.43421791 | 1.362067e+02 |
| 半径 | 249.6495402 | 1.7514729 | 3.1516663 | 0.0016234171 | 18.82154660 | 1.576302e+04 |
| 凹面点最差 | 12.5199362 | 1.3407680 | 1.8849810 | 0.0594324041 | 1.06768453 | 2.285697e+02 |
| 分形维数 | 0.1506027 | 0.6689871 | -2.8298153 | 0.0046574880 | 0.03406688 | 4.961252e-01 |
| 凹度平均值 | 13.0852042 | 1.1904412 | 2.1601084 | 0.0307642776 | 1.28731054 | 1.542539e+02 |
| 纹理维数 | 0.1935264 | 0.8072612 | -2.0344610 | 0.0419051325 | 0.03440948 | 8.765000e-01 |

这对我来说很奇怪。我对数据执行的唯一操作是使用 来缩放它们
data[-1] &lt;- scale(data[-1]) # 第一列是分类的

我还绘制了残差
plot(residuals(model_forward)) #stats library


因为据我所知，异常值可能会影响模型的 OR，但我认为我不能简单地将它们从数据中删除。有人能帮我理解为什么我的 OR 这么高并降低它们吗，或者我应该如何解释这些值？]]></description>
      <guid>https://stats.stackexchange.com/questions/657716/odds-ratio-in-a-logistic-model</guid>
      <pubDate>Sat, 23 Nov 2024 10:55:35 GMT</pubDate>
    </item>
    <item>
      <title>布冯针问题</title>
      <link>https://stats.stackexchange.com/questions/657708/the-buffon-needle-problem</link>
      <description><![CDATA[目前，我正在做概率教科书中的以下练习：
（布冯针问题）：

一根长度为 L 的针掉落在由宽度为 D 的平行板制成的地板上。对掉落的针的位置和方向做出明显的均匀性和独立性假设。证明如果 L &lt; D，则针穿过两块地板之间的裂缝的概率为 2L/$\pi$D。布丰根据数百次试验中该事件发生的次数比例，对 $\pi$ 进行了经验估计。

以下是我的一些观察（和困惑）；

问题没有具体说明有多少块木板，所以我猜想针头可能落到的裂缝数量是无限的。
假设一根针头落在一对平行木板上，那么针头可能落到的位置数量是无限的。
在任何给定的裂缝上，针头可能处于的方向数量是无限的。

我理解，由于这些“无限”，这个问题应该被视为涉及连续随机变量而不是离散随机变量的问题。但是，我不确定如何继续回答这个问题，特别是有三种情况我必须考虑（如上文列出的要点）。它会像三重积分一样吗？
此外，问题还指出 $\pi$ 来自经验发现。如果是这样，那么如何从等式中得到 $\pi$？
附注：我知道这是一个经典的概率问题，因此网上有很多解决方案。但是，我还没有看过它们，我想自己解决这个问题，所以我非常感谢任何指导（而不是解决方案）！]]></description>
      <guid>https://stats.stackexchange.com/questions/657708/the-buffon-needle-problem</guid>
      <pubDate>Sat, 23 Nov 2024 04:55:27 GMT</pubDate>
    </item>
    <item>
      <title>为什么 R 中的二项式家族（link="log"）的 glm 有时需要起始值？</title>
      <link>https://stats.stackexchange.com/questions/657665/why-does-glm-in-r-with-family-binomiallink-log-sometimes-require-start-value</link>
      <description><![CDATA[]]></description>
      <guid>https://stats.stackexchange.com/questions/657665/why-does-glm-in-r-with-family-binomiallink-log-sometimes-require-start-value</guid>
      <pubDate>Fri, 22 Nov 2024 09:25:45 GMT</pubDate>
    </item>
    <item>
      <title>发生率受测试频率影响</title>
      <link>https://stats.stackexchange.com/questions/657657/incidence-influenced-by-test-frequency</link>
      <description><![CDATA[我对研究设计感到困惑。假设我想研究一种疾病的发病率，但这种疾病大多无症状，其检测仅依赖于定期检测。有些人的检测频率比其他人高。我想根据每个人的检测频率为他们分配权重。如果我打算使用逆倾向得分来计算权重（仅举一个例子）：
PS= glm(test_frequency~age+sex, data=df)
PS$Wt= 1/predict(PS, df)

这听起来合理吗？
非常感谢！]]></description>
      <guid>https://stats.stackexchange.com/questions/657657/incidence-influenced-by-test-frequency</guid>
      <pubDate>Fri, 22 Nov 2024 05:07:30 GMT</pubDate>
    </item>
    </channel>
</rss>