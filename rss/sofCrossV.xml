<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最近的问题 - 交叉验证</title>
    <link>https://stats.stackexchange.com/questions</link>
    <description>最近 30 个来自 stats.stackexchange.com</description>
    <lastBuildDate>Fri, 22 Dec 2023 21:12:00 GMT</lastBuildDate>
    <item>
      <title>编写时间因变量的扩展 Cox 模型的统计模型</title>
      <link>https://stats.stackexchange.com/questions/635522/writing-the-statistical-model-for-extended-cox-model-for-time-dependent-variable</link>
      <description><![CDATA[我正在写一篇论文，其中使用扩展的 Cox 模型来处理因时间变量。我想看看两次劳动改革（自变量）是否对工作合同期限（因变量）有影响。数据库的主体不是人，而是合同本身。
由于有些合同在劳动改革之前和之后都有效（有些合同在改革通过之前就没有延长，有些则在改革通过之后开始），因此“劳动改革”被视为“劳动改革”。是一个时间因变量（因为有些合同在一段时间内“不受劳动改革影响”，然后受到第一次改革的影响，最终受到第二次改革的影响。
我还将经济危机作为时间相关协变量纳入其中，因为一些合同在 2008 年至 2014 年经济危机期间延期。然后我还纳入了其他协变量，包括签订合同的人的性别、合同类型（永久、临时）、工业部门等。
现在，我想非常清楚地解释我的方法，并希望将统计模型包含在代数符号中。我发现有些论文仅包含 Cox 比例风险模型的一般统计模型，例如： https: //imgur.com/a/u7AtY7P
但是其他一些论文则采取了不同的方式，根据我的理解，“加倍努力”，编写他们将要使用的统计模型的特定版本，例如：https://imgur.com/a/4jEJFGu
我的问题是：是否有一个名称来描述您在辣椒上使用的特定统计模型（而不是一般公式）？您在其中解释每个符号的变量含义等。
我该如何按照后一个示例编写我将要使用的时间相关变量的扩展 Cox 模型的特定版本？我是否需要编写我的扩展 Cox 模型版本和风险比方程版本？您知道有这样做的论文示例吗？ （我发布的第一个例子仅说明了 Cox 模型和风险比的一般方程，加上它涉及 Cox 比例风险模型，因此我担心如果我太密切地遵循它，我可能会搞砸，因为我&#39;我使用扩展的 Cox 模型，用于时间相关变量）。
非常感谢您的帮助！]]></description>
      <guid>https://stats.stackexchange.com/questions/635522/writing-the-statistical-model-for-extended-cox-model-for-time-dependent-variable</guid>
      <pubDate>Fri, 22 Dec 2023 20:23:21 GMT</pubDate>
    </item>
    <item>
      <title>使用较低层级（产品）的样本来推断较高层级（公司）</title>
      <link>https://stats.stackexchange.com/questions/635519/using-sample-at-lower-hierarchical-level-products-to-draw-inferences-about-a-h</link>
      <description><![CDATA[我有一个概念性问题，我们是否可以使用随机的产品样本来推断公司。更一般地说，我认为这将扩展到对分层数据进行采样，我们希望在与抽取样本的不同级别上进行推理。
基本设置如下：有 $i=\{1, ..., M\}$ 个公司。每个公司 $i$ 销售一组产品 $X_{ij}$，其中 $j=\{1,...,N_i\}$，这样 $N_i$ 是产品总数$i^\text{th}$ 公司出售。每个产品 $X_{ij}$ 要么包含警告标签，要么不包含。使用网站，我们可以进行搜索查询并获取所有 $\sum_i N_i$ 产品的列表（即示例框架）。我们对这些产品进行随机抽样，并记录每个产品的公司以及产品是否包含警告标签。目标是使用此随机样本来估计销售至少一种带有警告标签的产品的独特公司的总数。
我们可以假设 $N_i$ 的分布是已知的。一个例子是 $N_i \sim \text{NegBin}\left(\text{size}=1, \text{prob}=\frac{1}{6}\right ) + 1$，但我希望了解如何将该解决方案应用于任何已知的发行版。 （这可能是编写分布的一种草率方式——我添加 1，以便每个公司的产品总数永远不会为 0。）
假设我们根据搜索结果发现共有 52,000 种产品。我们对 500 种产品进行了抽样，发现有 480 家独特的母公司。举个简单的例子，假设 100% 的产品都有警告标签。我知道认为有 $\frac{480}{500}\times 52,000 = 49,920$ 独特公司至少有一种产品具有警告标签，因为拥有更多产品的公司更有可能出现在样本中。
但是从产品样本估算公司总数的正确方法是什么？
我尝试创建一些模拟，但我仍然没有走得太远/还没有弄清楚如何处理模拟数据。
图书馆(tidyverse)

N_comps &lt;- 10000 # 公司数量
设置.种子(1356)
n_prod &lt;- 1+rnbinom(N_comps, size=1, prob=1/6) # 每个公司的产品总数
compID &lt;- 1:N_comps # 给每个公司一个ID
comp.df &lt;- data.frame(compID, n_prod) # 存储在数据帧中
N_prod &lt;- sum(comp.df$n_prod) # 产品总数

prodID &lt;- unlist(map(comp.df$n_prod, ~1:.x)) # 给每个产品一个 ID
compID &lt;- unlist(map2(comp.df$compID, comp.df$n_prod, ~rep(.x, .y))) # 重复公司 ID每个相关产品
prod.df &lt;- data.frame(prodID, compID)
prod.df$hasLabel &lt;-sample(c(TRUE, FALSE), N_prod, Replace=TRUE, prob=c(1.00, 0)) # 为简单起见，假设它们都有标签
sampSize &lt;- seq(100, nrow(prod.df), 400) # 逐渐增加产品样本大小
results &lt;-rep(NA, length(sampSize)) # 存储结果的向量

设置.种子(21551)
for(i in 1:length(sampSize)){
  prodSamp &lt;-sample(1:nrow(prod.df), size=sampSize[i]) # 抽取产品样本
  结果[i] &lt;- prod.df %&gt;%
                  切片(prodSamp) %&gt;%
                  过滤器(hasLabel) %&gt;%
                  不同（compID）%&gt;%
                  nrow() # 统计不同公司的数量
}
]]></description>
      <guid>https://stats.stackexchange.com/questions/635519/using-sample-at-lower-hierarchical-level-products-to-draw-inferences-about-a-h</guid>
      <pubDate>Fri, 22 Dec 2023 18:37:15 GMT</pubDate>
    </item>
    <item>
      <title>PERT 分布的最小和最大参数的均匀最小方差无偏估计量 (UMVUE) 是多少？</title>
      <link>https://stats.stackexchange.com/questions/635518/what-is-the-uniformly-minimum-variance-unbiased-estimators-umvue-for-the-minim</link>
      <description><![CDATA[我相信这个问题的答案是样本最小值和样本最大值，但我还没有找到这方面的参考或证明。]]></description>
      <guid>https://stats.stackexchange.com/questions/635518/what-is-the-uniformly-minimum-variance-unbiased-estimators-umvue-for-the-minim</guid>
      <pubDate>Fri, 22 Dec 2023 18:15:15 GMT</pubDate>
    </item>
    <item>
      <title>如何使用 LSTM、TFT 或其他 RNN 处理不同长度的时间序列</title>
      <link>https://stats.stackexchange.com/questions/635517/how-to-use-lstm-tft-or-other-rnn-with-time-series-of-different-lengths</link>
      <description><![CDATA[我有每天的金融交易数据集，其中包含交易量和交易价格。对于每一天，我想计算当天结束时的成交量加权平均价格。但每天的交易笔数和交易次数有所不同。
训练 LSTM、TFT 或其他神经网络来解决此问题的标准方法是什么？

填充
采样（但对于我的问题，这不起作用）

数据集如下所示：
日 |时间 |交易# |价格|音量
对于每一天，我想在当天结束之前预测交易量加权平均价格，所以我的目标是
日 |成交量加权平均价]]></description>
      <guid>https://stats.stackexchange.com/questions/635517/how-to-use-lstm-tft-or-other-rnn-with-time-series-of-different-lengths</guid>
      <pubDate>Fri, 22 Dec 2023 17:28:43 GMT</pubDate>
    </item>
    <item>
      <title>我可以应用二项分布来模拟公司股票价格的上涨和下跌吗？ [关闭]</title>
      <link>https://stats.stackexchange.com/questions/635513/can-i-apply-binomial-distribution-to-model-the-increasing-and-decreasing-of-a-co</link>
      <description><![CDATA[导入 yfinance 作为 yf
将 pandas 导入为 pd
将seaborn导入为sns
将 matplotlib.pyplot 导入为 plt
从 scipy.stats 导入 binom

# 下载历史数据
aapl_data = yf.download(“AAPL”, period=“max”)

# 重置索引以便于操作
aapl_data.reset_index(inplace=True)

# 按日期降序对数据进行排序
aapl_data.sort_values(by=“日期”, 升序=False, inplace=True)

# 检查空值
打印（aapl_data.isnull（）。sum（））

# 检查数据类型一致性
aapl_data.info()

# 计算每日收益
aapl_data[&#39;每日收益&#39;] = aapl_data[&#39;调整收盘&#39;].pct_change() * 100

# 天数和成功概率
试验= len(aapl_data)
success_prob = aapl_data[&#39;每日收益&#39;].gt(0).sum() / len(aapl_data)
打印（试验，成功概率）

# 使用二项式分布对数据建模
n = 试验 # 试验次数
p = success_prob # 成功概率（每日正回报）
x = range(1, n + 1) # 可能的成功次数

# 创建二项式分布
binomial_dist = binom.pmf(x, n, p)

# 绘制二项式分布
plt.figure(figsize=(10, 6))
plt.xlim(4700, 5400)
plt.bar(x, binomial_dist, label=f&#39;二项分布 (n={n}, p={p:.2f})&#39;, alpha=0.7)
plt.title(&#39;正日收益的二项分布&#39;)
plt.xlabel(&#39;每日正收益数&#39;)
plt.ylabel(&#39;概率&#39;)
plt.图例()
plt.show()

此代码使用二项式分布对每天代表 0 和 1 的股票价格的下跌和上涨进行建模。我想知道得到的 PMF 是否正确，如果正确，这意味着什么？
这是对股票价格进行建模的更好方法还是有其他合适的分布？
我怎样才能让这段代码变得更专业？]]></description>
      <guid>https://stats.stackexchange.com/questions/635513/can-i-apply-binomial-distribution-to-model-the-increasing-and-decreasing-of-a-co</guid>
      <pubDate>Fri, 22 Dec 2023 15:45:36 GMT</pubDate>
    </item>
    <item>
      <title>由此产生的单变量边际分布不是 $t$ 分布 - 为什么？ （S木芯统计）</title>
      <link>https://stats.stackexchange.com/questions/635511/resulting-univariate-marginal-distributions-are-not-t-distributed-why-s-wo</link>
      <description><![CDATA[西蒙·伍德 (Simon Wood) 的核心统计数据显示：
&quot;如果我们用随机变量 $ 替换随机变量 $Z_i\sim_{i.i.d} N(0,1)$ T_i \sim_{i.i.d}t_k$ 在多元正态的定义中，我们得到一个具有多元$t_k(\mu, \Sigma)$ 分布。 ...请注意，生成的单变量边际分布不是 $t$ 分布的。
您能解释一下为什么不吗？
看起来像这个问题多元 t 分布的边际是单变量学生 t 分布吗？ 给出了不同的答案。]]></description>
      <guid>https://stats.stackexchange.com/questions/635511/resulting-univariate-marginal-distributions-are-not-t-distributed-why-s-wo</guid>
      <pubDate>Fri, 22 Dec 2023 15:16:35 GMT</pubDate>
    </item>
    <item>
      <title>MDS 和 Isomap 应用于相同的预计算距离</title>
      <link>https://stats.stackexchange.com/questions/635510/mds-and-isomap-applied-to-the-same-precomputed-distances</link>
      <description><![CDATA[我对 Isomap 的理解是，它是一个两步过程：首先计算样本之间的成对（测地线）距离，然后通过 MDS 来表示较低维空间中的距离矩阵。
下面，我提供sklearn MDS 和 Isomap 与相同的预先计算的距离矩阵，我恢复了 2D 表示：

结果表明，当 MDS 和 Isomap 提供相同的预计算距离矩阵时，尽管距离排名大致相同，但确切的结果可能有质的不同。例如，BD 使用 MDS 时距离较远，但使用 Isomap 时距离较近，并且 Isomap 也比 MDS 具有更强的聚类性。差异不仅仅是轮换的。
在相同的预先计算距离上出现不同行为的原因是什么？
图中的测试数据和代码：
将 numpy 导入为 np
将 pandas 导入为 pd
将 matplotlib.pyplot 导入为 plt
从 sklearn.manifold 导入 MDS、Isomap

#测试数据-5个特征之间的Spearman r矩阵
特征名称 = [&#39;A&#39;、&#39;B&#39;、&#39;C&#39;、&#39;D&#39;、&#39;E&#39;、&#39;F&#39;]
Spearman_r = np.random.uniform(size=[len(feature_names)] * 2)

#将相关性转换为距离
距离 = 1 - 绝对值(spearman_r)

#确保距离矩阵对称
距离 = (距离 + 距离.T) / 2
np.fill_diagonal（距离，0）

#Fit MDS 和 Isomap
np.随机.种子(0)
mds_坐标 = MDS(n_components=2,
                      相异性=&#39;预先计算&#39;,
                      random_state=0).fit_transform(距离)
np.随机.种子(0)
isomap_coordinates = Isomap(n_components=2, metric=&#39;预先计算&#39;).fit_transform(距离)

#绘制结果
f, axs = plt.subplots(1, 2, Figsize=(6, 3), sharey=True, sharex=True, 布局=&#39;紧&#39;)
对于轴中的轴：
    标题, 坐标 = (&#39;MDS&#39;, mds_坐标) if ax == axs[0] else (&#39;Isomap&#39;, isomap_坐标)
    坐标 = np.array(坐标) #output_type 可以是 df
    ax.scatter(坐标[:, 0], 坐标[:, 1], 标记=&#39;s&#39;, s=30,
               c=范围(len(feature_names)), cmap=&#39;Set1&#39;)
    ax.set_title(标题)
    [ax.annotate(名称, xy, fontsize=10, fontweight=&#39;bold&#39;)
     对于名称，zip 中的 xy（要素名称，坐标）
     ]
f.suptitle(&#39;MDS 和 Isomap 应用于预先计算的距离矩阵&#39;)

]]></description>
      <guid>https://stats.stackexchange.com/questions/635510/mds-and-isomap-applied-to-the-same-precomputed-distances</guid>
      <pubDate>Fri, 22 Dec 2023 15:11:31 GMT</pubDate>
    </item>
    <item>
      <title>为什么鲁汶方法是非确定性的？</title>
      <link>https://stats.stackexchange.com/questions/635507/why-is-louvain-method-non-deterministic</link>
      <description><![CDATA[我正在 R 中的 igraph 中使用 Louvain 算法的实现进行社区检测。我观察到多次运行它会产生不同的答案。然而，当我读到算法时
Louvain 方法 - 维基百科，没有任何东西具有任何明显的随机性。我的猜测是，以不同的顺序遍历这些点可能会产生不同的答案，并且 igraph 代码在处理顶点之前会随机化顶点的顺序。这就是它产生多个答案的原因 - 还是还有其他原因？]]></description>
      <guid>https://stats.stackexchange.com/questions/635507/why-is-louvain-method-non-deterministic</guid>
      <pubDate>Fri, 22 Dec 2023 14:37:42 GMT</pubDate>
    </item>
    <item>
      <title>SEM：正态理论最大似然拟合函数</title>
      <link>https://stats.stackexchange.com/questions/635502/sem-normal-theory-maximum-likelihood-fitting-function</link>
      <description><![CDATA[我参加了一些课程，其中讨论了结构方程建模中通过最大似然进行的模型估计。我在经典文献中也发现了正态理论 ML 拟合函数的一个定义（例如 博伦，1989）：
$ \hat{F}_{ML} = \ln|\boldsymbol{\Sigma}(\boldsymbol{\theta})| + tr[\mathbf{S} \boldsymbol{\Sigma}(\boldsymbol{\theta})^{-1}] - \ln|\mathbf{S}|- p $
其中 $\boldsymbol{\Sigma}(\boldsymbol{\theta})$ 是模型隐含的协方差矩阵，$\mathbf{S}$ 是观察到的样本协方差矩阵，$p$ 是明显变量的数量。
Bollen (1989) 证明，当 $\hat{\boldsymbol{\Sigma}} = \mathbf{S}$ （且 $\boldsymbol{\Sigma}(\boldsymbol{\theta})$ 替换为 $\hat{\boldsymbol{\Sigma}}$ )，$\hat{F}_{ML}$ 为零，因此代表完美拟合。
但是，在课程中我看到了这样的规范：
$ \hat{F}_{ML} = \ln|\boldsymbol{\Sigma}(\boldsymbol{\theta})| + tr[\mathbf{S} \boldsymbol{\Sigma}(\boldsymbol{\theta})^{-1}] - \ln|\mathbf{S}|- p + [\mathbf{m}-\boldsymbol {\mu}(\boldsymbol{\theta})]&#39;\boldsymbol{\Sigma}^{-1}[\mathbf{m}-\boldsymbol{\mu}(\boldsymbol{\theta})] $
看起来平均结构也被添加到拟合函数中，其中 $\mathbf{m}$ 是观察到的平均向量，$\boldsymbol{\mu}(\boldsymbol{\theta})$ 是模型隐含的均值向量。
我的假设是，为什么有这两种不同的定义，因为在经典的 CFA（以及许多其他类型的更一般的 SEM）中，均值结构是饱和的，并且模型失配不可能来自均值结构。这意味着 $[\mathbf{m}-\boldsymbol{\mu}(\boldsymbol{\theta})]$ 为零，因为 $\mathbf{m}=\boldsymbol{\mu}(\boldsymbol{\theta})$ 并且附加项将消失。然而，我找不到任何文献证实这一点，所以如果有人知道第二个（更一般的）规范来自哪里或者可以更详细地解释它，我将非常感激。]]></description>
      <guid>https://stats.stackexchange.com/questions/635502/sem-normal-theory-maximum-likelihood-fitting-function</guid>
      <pubDate>Fri, 22 Dec 2023 13:33:48 GMT</pubDate>
    </item>
    <item>
      <title>在进行PCA之前如何减少连续变量的数量？ [关闭]</title>
      <link>https://stats.stackexchange.com/questions/635499/how-to-reduce-number-of-continuous-variables-before-doing-pca</link>
      <description><![CDATA[哪组变量最能预测女性的握力？
-&gt;我有 18 个变量，现在想要进行 PCA，但首先我必须：“在进行分析之前减少连续变量的数量。”
我的作业问题被引用：
”2.哪一组变量最能预测女性的握力？
A。在进行分析之前减少连续变量的数量。”
我想我必须进行 PCA，但他们说“在进行分析之前减少连续变量的数量（= 这可能是 PCA）。”现在我不知道如何减少变量？也许可以向前/向后选择？谁能证实这一点？]]></description>
      <guid>https://stats.stackexchange.com/questions/635499/how-to-reduce-number-of-continuous-variables-before-doing-pca</guid>
      <pubDate>Fri, 22 Dec 2023 13:07:48 GMT</pubDate>
    </item>
    <item>
      <title>$E[X|X^3-3X]=0$ [关闭]</title>
      <link>https://stats.stackexchange.com/questions/635492/exx3-3x-0</link>
      <description><![CDATA[用 $f(x) 证明 $E[X|X^3-3X]=0$ =\frac{|x^2-1|}{4}$ 是区间 $X$ 的密度函数数学容器&quot;&gt;$[-2,2]$。]]></description>
      <guid>https://stats.stackexchange.com/questions/635492/exx3-3x-0</guid>
      <pubDate>Fri, 22 Dec 2023 11:30:22 GMT</pubDate>
    </item>
    <item>
      <title>确定泊松过程速率是否变化</title>
      <link>https://stats.stackexchange.com/questions/635477/determine-if-poisson-process-rate-changes</link>
      <description><![CDATA[想象一下，一个人 P 每小时多次呼叫呼叫中心。有 50% 的概率，P 会一直以较低的速率进行呼叫（例如平均每小时约 3 个呼叫）。有 50% 的概率，P 将以更高的速率开始每小时呼叫（例如每小时约 30 个呼叫）；然而，在一小时内的任何时间，P 都有可能停止如此频繁的呼叫，并进入较慢的速率（每小时约 3 个呼叫）。
如果我们查看一小时内收到多少个呼叫的概率分布，它将接近泊松分布之和，看起来像双峰分布：
值得注意的是，存在“桥梁”的可能性很低。在两个峰值之间（在 10 到 20 次呼叫之间最明显），这是 P 在一个小时内的某个时刻停止大量呼叫的情况。具体来说，一小时的通话可能如下所示：

我们看到在前半小时 P 的呼叫频率很高，但随后大约半小时后转为低频率。需要非常清楚的是，实际上我们能够访问的唯一数据是蓝色曲线（累计数量）的调用），而不是橙色曲线（这本质上是我们试图推断的，但我将其包含在这里只是为了说明目的）。
问题是，考虑到一小时内接到电话的时间线（如上所示），我们是否可以以非常高的概率做出决定：

P 开始以更高的费率打电话吗？
如果 (1) 为真，P 是否在某个时刻开始以较低的费率呼叫？

本质上，我们的目标是推断橙色的“True or False”。上图中蓝色曲线“累计呼叫数与时间”的关系曲线。我并不关心从 True 到 False 的变化何时发生，只确定它是否确实发生。
对于（1），我们可以在呼叫总数中设置一些阈值，例如，如果收到超过 10 个呼叫，那么 P 在开始时一定以很高的速率呼入。&lt; /p&gt;
对于（2）来说有点棘手。一种想法是，通话记录可能会在一小时的前几分钟显示比一小时后几分钟更多的呼叫。例如，我曾想过查看呼叫之间的延迟分布，而不是呼叫总数，但在这种情况下还没有找到一种非常有效的方法来制定决策。尽管如此，我觉得我们拥有完整的通话记录这一事实应该比仅仅设置通话总数的阈值更能回答这个问题。
任何关于如何思考这个问题的帮助或指示将不胜感激！]]></description>
      <guid>https://stats.stackexchange.com/questions/635477/determine-if-poisson-process-rate-changes</guid>
      <pubDate>Fri, 22 Dec 2023 05:50:38 GMT</pubDate>
    </item>
    <item>
      <title>关于数据对数转换的有趣观察</title>
      <link>https://stats.stackexchange.com/questions/635466/an-interesting-observation-regarding-the-log-transformation-of-data</link>
      <description><![CDATA[]]></description>
      <guid>https://stats.stackexchange.com/questions/635466/an-interesting-observation-regarding-the-log-transformation-of-data</guid>
      <pubDate>Fri, 22 Dec 2023 00:42:00 GMT</pubDate>
    </item>
    <item>
      <title>我们可以从置信区间推导出 2 类错误概率吗？</title>
      <link>https://stats.stackexchange.com/questions/635464/can-we-derive-type-2-error-probability-from-confidence-interval</link>
      <description><![CDATA[如果我们可以计算估计值的置信区间$\hat{\theta}$，然后我们还可以计算相关假设$\theta=\theta_0$，这是特定样本出现 1 类错误的概率（即在正确的情况下拒绝假设）。
我们是否还可以使用这些置信区间来获取该假设和样本出现 2 类错误的概率（即，当假设不正确时接受该假设）？
直观上，我们似乎应该能够做到这一点，因为较窄的置信区间似乎与更强大的测试成正比，这（根据定义）是较低的 2 类错误概率。因为 2 类错误似乎类似于 {无错误} + {1 类错误} 的补集。 （但如果这些表面不正确，对此的解释也可能有帮助。）]]></description>
      <guid>https://stats.stackexchange.com/questions/635464/can-we-derive-type-2-error-probability-from-confidence-interval</guid>
      <pubDate>Fri, 22 Dec 2023 00:19:57 GMT</pubDate>
    </item>
    <item>
      <title>混合效应模型中 p 值计算的当前观点</title>
      <link>https://stats.stackexchange.com/questions/635275/current-perspectives-on-p-value-computation-in-mixed-effects-models</link>
      <description><![CDATA[]]></description>
      <guid>https://stats.stackexchange.com/questions/635275/current-perspectives-on-p-value-computation-in-mixed-effects-models</guid>
      <pubDate>Tue, 19 Dec 2023 17:06:52 GMT</pubDate>
    </item>
    </channel>
</rss>